diff --git a/cmake/AWSSDKConfig.cmake b/cmake/AWSSDKConfig.cmake
index c2f643e..4fb4a2f 100644
--- a/cmake/AWSSDKConfig.cmake
+++ b/cmake/AWSSDKConfig.cmake
@@ -24,6 +24,10 @@ if(AWSSDK_FOUND)
     return()
 endif()
 
+include(CMakeFindDependencyMacro)
+find_dependency(OpenSSL)
+find_dependency(ZLIB)
+
 include(${CMAKE_CURRENT_LIST_DIR}/AWSSDKConfigVersion.cmake)
 include(${CMAKE_CURRENT_LIST_DIR}/sdksCommon.cmake)
 include(${CMAKE_CURRENT_LIST_DIR}/platformDeps.cmake)
@@ -43,7 +47,6 @@ endif()
 
 # On Windows, dlls are treated as runtime target and installed in bindir
 if (WIN32 AND AWSSDK_INSTALL_AS_SHARED_LIBS)
-    set(AWSSDK_INSTALL_LIBDIR "${AWSSDK_INSTALL_BINDIR}")
     # If installed CMake scripts are associated with dll library, define USE_IMPORT_EXPORT for customers
     add_definitions(-DUSE_IMPORT_EXPORT)
 endif()
@@ -54,7 +57,6 @@ endif()
 get_filename_component(AWSSDK_DEFAULT_ROOT_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
 get_filename_component(AWSSDK_DEFAULT_ROOT_DIR "${AWSSDK_DEFAULT_ROOT_DIR}" PATH)
 get_filename_component(AWSSDK_DEFAULT_ROOT_DIR "${AWSSDK_DEFAULT_ROOT_DIR}" PATH)
-get_filename_component(AWSSDK_DEFAULT_ROOT_DIR "${AWSSDK_DEFAULT_ROOT_DIR}" PATH)
 get_filename_component(AWS_NATIVE_SDK_ROOT "${CMAKE_CURRENT_SOURCE_DIR}" ABSOLUTE)
 
 set(CPP_STANDARD "11" CACHE STRING "Flag to upgrade the C++ standard used. The default is 11. The minimum is 11.")

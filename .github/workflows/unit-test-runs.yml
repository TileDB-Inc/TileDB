name: unit-test-standalone
on:
  workflow_call:

env:
  BACKWARDS_COMPATIBILITY_ARRAYS: OFF
  TILEDB_ASSERTIONS: ON
  TILEDB_S3: OFF
  TILEDB_AZURE: OFF
  TILEDB_GCS: OFF
  TILEDB_SERIALIZATION: ON
  VCPKG_BINARY_SOURCES: 'clear;x-gha,readwrite'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
      fail-fast: false
    name: Build - ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3

      - name: 'Homebrew setup'
        run: brew install automake pkg-config
        if: ${{ startsWith(matrix.os, 'macos-') }}

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v4

      # Configure required environment variables for vcpkg to use
      # GitHub's Action Cache
      - uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: 'Print env'
        run: |
          echo "'uname -s' is:"
          echo "uname: " $(uname)
          echo "uname -m: " $(uname -m)
          echo "uname -r:" $(uname -r)
          echo "uname -s: " $(uname -s)
          echo "uname -v: " $(uname -v)
          printenv
        shell: bash
        if: ${{ !startsWith(matrix.os, 'windows-') }}

      - name: 'Build standalone unit tests'
        run: |
          cmake -S . \
            -B build \
            -G Ninja \
            -DTILEDB_AZURE=${TILEDB_AZURE}\
            -DTILEDB_GCS=${TILEDB_GCS} \
            -DTILEDB_S3=${TILEDB_S3} \
            -DTILEDB_SERIALIZATION=${TILEDB_SERIALIZATION} \
            -DTILEDB_ASSERTIONS=${TILEDB_ASSERTIONS}
          cmake --build build -j4
          # Build all unit tests
          cmake --build build/tiledb --target tests -j4

      - name: 'Run standalone unit tests'
        run: |
          ctest -C build/tiledb -R '^unit_' -R 'test_assert'
          ctest -C build/tiledb -R 'test_ci_asserts'

      - name: "Print log files (failed build only)"
        run: |
          source $GITHUB_WORKSPACE/scripts/ci/print_logs.sh
        if: ${{ failure() }} # only run this job if the build step failed

<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/shaun/Code/Clones/tiledb/build/tiledb/examples/cpp_api/vcfdebug_cpp</line>
</preamble>

<pid>729681</pid>
<ppid>2441764</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--tool=memcheck</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/tmp/clion-valgrindf66ec89a-cb85-47d0-aae7-114cd0af12cb/valgrind_output_%p</arg>
    <arg>--gen-suppressions=all</arg>
    <arg>--leak-check=full</arg>
    <arg>--leak-resolution=med</arg>
    <arg>--track-origins=yes</arg>
    <arg>--vgdb=no</arg>
  </vargv>
  <argv>
    <exe>/home/shaun/Code/Clones/tiledb/build/tiledb/examples/cpp_api/vcfdebug_cpp</exe>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.042 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x5A915CC</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tile&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool, unsigned long, tiledb::sm::UnorderedWithDupsResultTile&lt;unsigned long&gt;*, unsigned long, unsigned long, unsigned long*, unsigned char*, void const**)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/query/readers</dir>
      <file>sparse_unordered_with_dups_reader.cc</file>
      <line>641</line>
    </frame>
    <frame>
      <ip>0x5A887A2</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}::operator()(unsigned long, unsigned long) const</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/query/readers</dir>
      <file>sparse_unordered_with_dups_reader.cc</file>
      <line>872</line>
    </frame>
    <frame>
      <ip>0x5A919D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}::operator()(unsigned long, unsigned long, unsigned long, unsigned long) const</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/sm/misc</dir>
      <file>parallel_functions.h</file>
      <line>340</line>
    </frame>
    <frame>
      <ip>0x5A9AA5C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status std::__invoke_impl&lt;tiledb::common::Status, tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&amp;, unsigned long, unsigned long, unsigned long, unsigned long&gt;(std::__invoke_other, tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x5A98E67</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::enable_if&lt;is_invocable_r_v&lt;tiledb::common::Status, tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&amp;, unsigned long, unsigned long, unsigned long, unsigned long&gt;, tiledb::common::Status&gt;::type std::__invoke_r&lt;tiledb::common::Status, tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&amp;, unsigned long, unsigned long, unsigned long, unsigned long&gt;(tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>116</line>
    </frame>
    <frame>
      <ip>0x5A97305</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Function_handler&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long), tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&gt;::_M_invoke(std::_Any_data const&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>std_function.h</file>
      <line>291</line>
    </frame>
    <frame>
      <ip>0x5751700</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;::operator()(unsigned long, unsigned long, unsigned long, unsigned long) const</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>std_function.h</file>
      <line>590</line>
    </frame>
    <frame>
      <ip>0x5750BA2</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status std::__invoke_impl&lt;tiledb::common::Status, std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;&gt;(std::__invoke_other, std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x574F2EB</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__invoke_result&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;&gt;::type std::__invoke&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;&gt;(std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>97</line>
    </frame>
    <frame>
      <ip>0x574C3D6</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status std::_Bind&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt; (unsigned long, unsigned long, unsigned long, unsigned long)&gt;::__call&lt;tiledb::common::Status, , 0ul, 1ul, 2ul, 3ul&gt;(std::tuple&lt;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul, 3ul&gt;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>functional</file>
      <line>422</line>
    </frame>
    <frame>
      <ip>0x5747F1C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status std::_Bind&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt; (unsigned long, unsigned long, unsigned long, unsigned long)&gt;::operator()&lt;, tiledb::common::Status&gt;()</fn>
      <dir>/usr/include/c++/11</dir>
      <file>functional</file>
      <line>505</line>
    </frame>
    <frame>
      <ip>0x57405B8</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status std::__invoke_impl&lt;tiledb::common::Status, std::_Bind&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt; (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;&gt;(std::__invoke_other, std::_Bind&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt; (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>61</line>
    </frame>
  </stack>
  <auxwhat>Address 0x3f443040 is 0 bytes after a block of size 91,226,112 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x13E9A9</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/examples/cpp_api/vcfdebug_cpp</obj>
      <fn>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x13CE9B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/examples/cpp_api/vcfdebug_cpp</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate(std::allocator&lt;unsigned long&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x13AB25</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/examples/cpp_api/vcfdebug_cpp</obj>
      <fn>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_vector.h</file>
      <line>346</line>
    </frame>
    <frame>
      <ip>0x137B52</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/examples/cpp_api/vcfdebug_cpp</obj>
      <fn>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_create_storage(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_vector.h</file>
      <line>361</line>
    </frame>
    <frame>
      <ip>0x134D88</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/examples/cpp_api/vcfdebug_cpp</obj>
      <fn>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_Vector_base(unsigned long, std::allocator&lt;unsigned long&gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_vector.h</file>
      <line>305</line>
    </frame>
    <frame>
      <ip>0x1328B0</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/examples/cpp_api/vcfdebug_cpp</obj>
      <fn>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::vector(unsigned long, std::allocator&lt;unsigned long&gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_vector.h</file>
      <line>511</line>
    </frame>
    <frame>
      <ip>0x12939B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/examples/cpp_api/vcfdebug_cpp</obj>
      <fn>main</fn>
      <dir>/home/shaun/Code/Clones/tiledb/examples/cpp_api</dir>
      <file>vcfdebug.cc</file>
      <line>95</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Addr8</skind>
    <sframe> <fun>_ZN6tiledb2sm29SparseUnorderedWithDupsReaderImE17copy_offsets_tileImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbT_PNS0_27UnorderedWithDupsResultTileImEEmmPSE_PhPPKv</fun> </sframe>
    <sframe> <fun>_ZZN6tiledb2sm29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISH_EERKSF_ImSaImEERNS0_11QueryBufferERSF_IPKvSaIST_EEENKUlmmE_clEmm</fun> </sframe>
    <sframe> <fun>_ZZN6tiledb2sm15parallel_for_2dIZNS0_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISI_EERKSG_ImSaImEERNS0_11QueryBufferERSG_IPKvSaISU_EEEUlmmE_EES6_PNS5_10ThreadPoolEmmmmRKSF_ENKUlmmmmE_clEmmmm</fun> </sframe>
    <sframe> <fun>_ZSt13__invoke_implIN6tiledb6common6StatusERZNS0_2sm15parallel_for_2dIZNS3_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS3_10ResultTileESaISJ_EERKSH_ImSaImEERNS3_11QueryBufferERSH_IPKvSaISV_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSG_EUlmmmmE_JmmmmEESG_St14__invoke_otherOT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt10__invoke_rIN6tiledb6common6StatusERZNS0_2sm15parallel_for_2dIZNS3_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS3_10ResultTileESaISJ_EERKSH_ImSaImEERNS3_11QueryBufferERSH_IPKvSaISV_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSG_EUlmmmmE_JmmmmEENSt9enable_ifIX16is_invocable_r_vISG_T0_DpT1_EESG_E4typeEOS17_DpOS18_</fun> </sframe>
    <sframe> <fun>_ZNSt17_Function_handlerIFN6tiledb6common6StatusEmmmmEZNS0_2sm15parallel_for_2dIZNS4_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS4_10ResultTileESaISK_EERKSI_ImSaImEERNS4_11QueryBufferERSI_IPKvSaISW_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSH_EUlmmmmE_E9_M_invokeERKSt9_Any_dataOmS1A_S1A_S1A_</fun> </sframe>
    <sframe> <fun>_ZNKSt8functionIFN6tiledb6common6StatusEmmmmEEclEmmmm</fun> </sframe>
    <sframe> <fun>_ZSt13__invoke_implIN6tiledb6common6StatusERSt8functionIFS2_mmmmEEJRmS7_S7_S7_EET_St14__invoke_otherOT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt8__invokeIRSt8functionIFN6tiledb6common6StatusEmmmmEEJRmS7_S7_S7_EENSt15__invoke_resultIT_JDpT0_EE4typeEOS9_DpOSA_</fun> </sframe>
    <sframe> <fun>_ZNSt5_BindIFSt8functionIFN6tiledb6common6StatusEmmmmEEmmmmEE6__callIS3_JEJLm0ELm1ELm2ELm3EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE</fun> </sframe>
    <sframe> <fun>_ZNSt5_BindIFSt8functionIFN6tiledb6common6StatusEmmmmEEmmmmEEclIJES3_EET0_DpOT_</fun> </sframe>
    <sframe> <fun>_ZSt13__invoke_implIN6tiledb6common6StatusERSt5_BindIFSt8functionIFS2_mmmmEEmmmmEEJEET_St14__invoke_otherOT0_DpOT1_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Addr8
   fun:_ZN6tiledb2sm29SparseUnorderedWithDupsReaderImE17copy_offsets_tileImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbT_PNS0_27UnorderedWithDupsResultTileImEEmmPSE_PhPPKv
   fun:_ZZN6tiledb2sm29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISH_EERKSF_ImSaImEERNS0_11QueryBufferERSF_IPKvSaIST_EEENKUlmmE_clEmm
   fun:_ZZN6tiledb2sm15parallel_for_2dIZNS0_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISI_EERKSG_ImSaImEERNS0_11QueryBufferERSG_IPKvSaISU_EEEUlmmE_EES6_PNS5_10ThreadPoolEmmmmRKSF_ENKUlmmmmE_clEmmmm
   fun:_ZSt13__invoke_implIN6tiledb6common6StatusERZNS0_2sm15parallel_for_2dIZNS3_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS3_10ResultTileESaISJ_EERKSH_ImSaImEERNS3_11QueryBufferERSH_IPKvSaISV_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSG_EUlmmmmE_JmmmmEESG_St14__invoke_otherOT0_DpOT1_
   fun:_ZSt10__invoke_rIN6tiledb6common6StatusERZNS0_2sm15parallel_for_2dIZNS3_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS3_10ResultTileESaISJ_EERKSH_ImSaImEERNS3_11QueryBufferERSH_IPKvSaISV_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSG_EUlmmmmE_JmmmmEENSt9enable_ifIX16is_invocable_r_vISG_T0_DpT1_EESG_E4typeEOS17_DpOS18_
   fun:_ZNSt17_Function_handlerIFN6tiledb6common6StatusEmmmmEZNS0_2sm15parallel_for_2dIZNS4_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS4_10ResultTileESaISK_EERKSI_ImSaImEERNS4_11QueryBufferERSI_IPKvSaISW_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSH_EUlmmmmE_E9_M_invokeERKSt9_Any_dataOmS1A_S1A_S1A_
   fun:_ZNKSt8functionIFN6tiledb6common6StatusEmmmmEEclEmmmm
   fun:_ZSt13__invoke_implIN6tiledb6common6StatusERSt8functionIFS2_mmmmEEJRmS7_S7_S7_EET_St14__invoke_otherOT0_DpOT1_
   fun:_ZSt8__invokeIRSt8functionIFN6tiledb6common6StatusEmmmmEEJRmS7_S7_S7_EENSt15__invoke_resultIT_JDpT0_EE4typeEOS9_DpOSA_
   fun:_ZNSt5_BindIFSt8functionIFN6tiledb6common6StatusEmmmmEEmmmmEE6__callIS3_JEJLm0ELm1ELm2ELm3EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE
   fun:_ZNSt5_BindIFSt8functionIFN6tiledb6common6StatusEmmmmEEmmmmEEclIJES3_EET0_DpOT_
   fun:_ZSt13__invoke_implIN6tiledb6common6StatusERSt5_BindIFSt8functionIFS2_mmmmEEmmmmEEJEET_St14__invoke_otherOT0_DpOT1_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Addr8</skind>
    <sframe> <fun>_ZN6tiledb2sm29SparseUnorderedWithDupsReaderImE17copy_offsets_tileImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbT_PNS0_27UnorderedWithDupsResultTileImEEmmPSE_PhPPKv</fun> </sframe>
    <sframe> <fun>_ZZN6tiledb2sm29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISH_EERKSF_ImSaImEERNS0_11QueryBufferERSF_IPKvSaIST_EEENKUlmmE_clEmm</fun> </sframe>
    <sframe> <fun>_ZZN6tiledb2sm15parallel_for_2dIZNS0_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISI_EERKSG_ImSaImEERNS0_11QueryBufferERSG_IPKvSaISU_EEEUlmmE_EES6_PNS5_10ThreadPoolEmmmmRKSF_ENKUlmmmmE_clEmmmm</fun> </sframe>
    <sframe> <fun>_ZSt13__invoke_implIN6tiledb6common6StatusERZNS0_2sm15parallel_for_2dIZNS3_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS3_10ResultTileESaISJ_EERKSH_ImSaImEERNS3_11QueryBufferERSH_IPKvSaISV_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSG_EUlmmmmE_JmmmmEESG_St14__invoke_otherOT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt10__invoke_rIN6tiledb6common6StatusERZNS0_2sm15parallel_for_2dIZNS3_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS3_10ResultTileESaISJ_EERKSH_ImSaImEERNS3_11QueryBufferERSH_IPKvSaISV_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSG_EUlmmmmE_JmmmmEENSt9enable_ifIX16is_invocable_r_vISG_T0_DpT1_EESG_E4typeEOS17_DpOS18_</fun> </sframe>
    <sframe> <fun>_ZNSt17_Function_handlerIFN6tiledb6common6StatusEmmmmEZNS0_2sm15parallel_for_2dIZNS4_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS4_10ResultTileESaISK_EERKSI_ImSaImEERNS4_11QueryBufferERSI_IPKvSaISW_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSH_EUlmmmmE_E9_M_invokeERKSt9_Any_dataOmS1A_S1A_S1A_</fun> </sframe>
    <sframe> <fun>_ZNKSt8functionIFN6tiledb6common6StatusEmmmmEEclEmmmm</fun> </sframe>
    <sframe> <fun>_ZSt13__invoke_implIN6tiledb6common6StatusERSt8functionIFS2_mmmmEEJRmS7_S7_S7_EET_St14__invoke_otherOT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt8__invokeIRSt8functionIFN6tiledb6common6StatusEmmmmEEJRmS7_S7_S7_EENSt15__invoke_resultIT_JDpT0_EE4typeEOS9_DpOSA_</fun> </sframe>
    <sframe> <fun>_ZNSt5_BindIFSt8functionIFN6tiledb6common6StatusEmmmmEEmmmmEE6__callIS3_JEJLm0ELm1ELm2ELm3EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE</fun> </sframe>
    <sframe> <fun>_ZNSt5_BindIFSt8functionIFN6tiledb6common6StatusEmmmmEEmmmmEEclIJES3_EET0_DpOT_</fun> </sframe>
    <sframe> <fun>_ZSt13__invoke_implIN6tiledb6common6StatusERSt5_BindIFSt8functionIFS2_mmmmEEmmmmEEJEET_St14__invoke_otherOT0_DpOT1_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Addr8
   fun:_ZN6tiledb2sm29SparseUnorderedWithDupsReaderImE17copy_offsets_tileImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbT_PNS0_27UnorderedWithDupsResultTileImEEmmPSE_PhPPKv
   fun:_ZZN6tiledb2sm29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISH_EERKSF_ImSaImEERNS0_11QueryBufferERSF_IPKvSaIST_EEENKUlmmE_clEmm
   fun:_ZZN6tiledb2sm15parallel_for_2dIZNS0_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISI_EERKSG_ImSaImEERNS0_11QueryBufferERSG_IPKvSaISU_EEEUlmmE_EES6_PNS5_10ThreadPoolEmmmmRKSF_ENKUlmmmmE_clEmmmm
   fun:_ZSt13__invoke_implIN6tiledb6common6StatusERZNS0_2sm15parallel_for_2dIZNS3_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS3_10ResultTileESaISJ_EERKSH_ImSaImEERNS3_11QueryBufferERSH_IPKvSaISV_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSG_EUlmmmmE_JmmmmEESG_St14__invoke_otherOT0_DpOT1_
   fun:_ZSt10__invoke_rIN6tiledb6common6StatusERZNS0_2sm15parallel_for_2dIZNS3_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS3_10ResultTileESaISJ_EERKSH_ImSaImEERNS3_11QueryBufferERSH_IPKvSaISV_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSG_EUlmmmmE_JmmmmEENSt9enable_ifIX16is_invocable_r_vISG_T0_DpT1_EESG_E4typeEOS17_DpOS18_
   fun:_ZNSt17_Function_handlerIFN6tiledb6common6StatusEmmmmEZNS0_2sm15parallel_for_2dIZNS4_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS4_10ResultTileESaISK_EERKSI_ImSaImEERNS4_11QueryBufferERSI_IPKvSaISW_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSH_EUlmmmmE_E9_M_invokeERKSt9_Any_dataOmS1A_S1A_S1A_
   fun:_ZNKSt8functionIFN6tiledb6common6StatusEmmmmEEclEmmmm
   fun:_ZSt13__invoke_implIN6tiledb6common6StatusERSt8functionIFS2_mmmmEEJRmS7_S7_S7_EET_St14__invoke_otherOT0_DpOT1_
   fun:_ZSt8__invokeIRSt8functionIFN6tiledb6common6StatusEmmmmEEJRmS7_S7_S7_EENSt15__invoke_resultIT_JDpT0_EE4typeEOS9_DpOSA_
   fun:_ZNSt5_BindIFSt8functionIFN6tiledb6common6StatusEmmmmEEmmmmEE6__callIS3_JEJLm0ELm1ELm2ELm3EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE
   fun:_ZNSt5_BindIFSt8functionIFN6tiledb6common6StatusEmmmmEEmmmmEEclIJES3_EET0_DpOT_
   fun:_ZSt13__invoke_implIN6tiledb6common6StatusERSt5_BindIFSt8functionIFS2_mmmmEEmmmmEEJEET_St14__invoke_otherOT0_DpOT1_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x1</unique>
  <tid>1</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x5A91604</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tile&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool, unsigned long, tiledb::sm::UnorderedWithDupsResultTile&lt;unsigned long&gt;*, unsigned long, unsigned long, unsigned long*, unsigned char*, void const**)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/query/readers</dir>
      <file>sparse_unordered_with_dups_reader.cc</file>
      <line>643</line>
    </frame>
    <frame>
      <ip>0x5A887A2</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}::operator()(unsigned long, unsigned long) const</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/query/readers</dir>
      <file>sparse_unordered_with_dups_reader.cc</file>
      <line>872</line>
    </frame>
    <frame>
      <ip>0x5A919D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}::operator()(unsigned long, unsigned long, unsigned long, unsigned long) const</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/sm/misc</dir>
      <file>parallel_functions.h</file>
      <line>340</line>
    </frame>
    <frame>
      <ip>0x5A9AA5C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status std::__invoke_impl&lt;tiledb::common::Status, tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&amp;, unsigned long, unsigned long, unsigned long, unsigned long&gt;(std::__invoke_other, tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x5A98E67</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::enable_if&lt;is_invocable_r_v&lt;tiledb::common::Status, tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&amp;, unsigned long, unsigned long, unsigned long, unsigned long&gt;, tiledb::common::Status&gt;::type std::__invoke_r&lt;tiledb::common::Status, tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&amp;, unsigned long, unsigned long, unsigned long, unsigned long&gt;(tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>116</line>
    </frame>
    <frame>
      <ip>0x5A97305</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Function_handler&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long), tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&gt;::_M_invoke(std::_Any_data const&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>std_function.h</file>
      <line>291</line>
    </frame>
    <frame>
      <ip>0x5751700</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;::operator()(unsigned long, unsigned long, unsigned long, unsigned long) const</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>std_function.h</file>
      <line>590</line>
    </frame>
    <frame>
      <ip>0x5750BA2</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status std::__invoke_impl&lt;tiledb::common::Status, std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;&gt;(std::__invoke_other, std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x574F2EB</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__invoke_result&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;&gt;::type std::__invoke&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;&gt;(std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>97</line>
    </frame>
    <frame>
      <ip>0x574C3D6</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status std::_Bind&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt; (unsigned long, unsigned long, unsigned long, unsigned long)&gt;::__call&lt;tiledb::common::Status, , 0ul, 1ul, 2ul, 3ul&gt;(std::tuple&lt;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul, 3ul&gt;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>functional</file>
      <line>422</line>
    </frame>
    <frame>
      <ip>0x5747F1C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status std::_Bind&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt; (unsigned long, unsigned long, unsigned long, unsigned long)&gt;::operator()&lt;, tiledb::common::Status&gt;()</fn>
      <dir>/usr/include/c++/11</dir>
      <file>functional</file>
      <line>505</line>
    </frame>
    <frame>
      <ip>0x57405B8</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status std::__invoke_impl&lt;tiledb::common::Status, std::_Bind&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt; (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;&gt;(std::__invoke_other, std::_Bind&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt; (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>61</line>
    </frame>
  </stack>
  <auxwhat>Address 0xc3b87040 is 0 bytes after a block of size 91,226,112 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x59A79AD</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;void const*&gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x5985D8F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;void const*&gt; &gt;::allocate(std::allocator&lt;void const*&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x596AA5B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Vector_base&lt;void const*, std::allocator&lt;void const*&gt; &gt;::_M_allocate(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_vector.h</file>
      <line>346</line>
    </frame>
    <frame>
      <ip>0x5A1B00B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;::_M_default_append(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>vector.tcc</file>
      <line>635</line>
    </frame>
    <frame>
      <ip>0x5A07168</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;::resize(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_vector.h</file>
      <line>940</line>
    </frame>
    <frame>
      <ip>0x5A807B4</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::process_tiles&lt;unsigned long&gt;(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/query/readers</dir>
      <file>sparse_unordered_with_dups_reader.cc</file>
      <line>1696</line>
    </frame>
    <frame>
      <ip>0x5A7ADE6</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::dowork()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/query/readers</dir>
      <file>sparse_unordered_with_dups_reader.cc</file>
      <line>287</line>
    </frame>
    <frame>
      <ip>0x54F30F4</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Query::process()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/query</dir>
      <file>query.cc</file>
      <line>844</line>
    </frame>
    <frame>
      <ip>0x5C18917</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::StorageManagerCanonical::query_submit(tiledb::sm::Query*)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>storage_manager.cc</file>
      <line>1599</line>
    </frame>
    <frame>
      <ip>0x54FBEDD</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Query::submit()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/query</dir>
      <file>query.cc</file>
      <line>1853</line>
    </frame>
    <frame>
      <ip>0x516E786</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::api::tiledb_query_submit(tiledb_ctx_handle_t*, tiledb_query_t*)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/c_api</dir>
      <file>tiledb.cc</file>
      <line>1605</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Addr8</skind>
    <sframe> <fun>_ZN6tiledb2sm29SparseUnorderedWithDupsReaderImE17copy_offsets_tileImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbT_PNS0_27UnorderedWithDupsResultTileImEEmmPSE_PhPPKv</fun> </sframe>
    <sframe> <fun>_ZZN6tiledb2sm29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISH_EERKSF_ImSaImEERNS0_11QueryBufferERSF_IPKvSaIST_EEENKUlmmE_clEmm</fun> </sframe>
    <sframe> <fun>_ZZN6tiledb2sm15parallel_for_2dIZNS0_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISI_EERKSG_ImSaImEERNS0_11QueryBufferERSG_IPKvSaISU_EEEUlmmE_EES6_PNS5_10ThreadPoolEmmmmRKSF_ENKUlmmmmE_clEmmmm</fun> </sframe>
    <sframe> <fun>_ZSt13__invoke_implIN6tiledb6common6StatusERZNS0_2sm15parallel_for_2dIZNS3_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS3_10ResultTileESaISJ_EERKSH_ImSaImEERNS3_11QueryBufferERSH_IPKvSaISV_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSG_EUlmmmmE_JmmmmEESG_St14__invoke_otherOT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt10__invoke_rIN6tiledb6common6StatusERZNS0_2sm15parallel_for_2dIZNS3_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS3_10ResultTileESaISJ_EERKSH_ImSaImEERNS3_11QueryBufferERSH_IPKvSaISV_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSG_EUlmmmmE_JmmmmEENSt9enable_ifIX16is_invocable_r_vISG_T0_DpT1_EESG_E4typeEOS17_DpOS18_</fun> </sframe>
    <sframe> <fun>_ZNSt17_Function_handlerIFN6tiledb6common6StatusEmmmmEZNS0_2sm15parallel_for_2dIZNS4_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS4_10ResultTileESaISK_EERKSI_ImSaImEERNS4_11QueryBufferERSI_IPKvSaISW_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSH_EUlmmmmE_E9_M_invokeERKSt9_Any_dataOmS1A_S1A_S1A_</fun> </sframe>
    <sframe> <fun>_ZNKSt8functionIFN6tiledb6common6StatusEmmmmEEclEmmmm</fun> </sframe>
    <sframe> <fun>_ZSt13__invoke_implIN6tiledb6common6StatusERSt8functionIFS2_mmmmEEJRmS7_S7_S7_EET_St14__invoke_otherOT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt8__invokeIRSt8functionIFN6tiledb6common6StatusEmmmmEEJRmS7_S7_S7_EENSt15__invoke_resultIT_JDpT0_EE4typeEOS9_DpOSA_</fun> </sframe>
    <sframe> <fun>_ZNSt5_BindIFSt8functionIFN6tiledb6common6StatusEmmmmEEmmmmEE6__callIS3_JEJLm0ELm1ELm2ELm3EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE</fun> </sframe>
    <sframe> <fun>_ZNSt5_BindIFSt8functionIFN6tiledb6common6StatusEmmmmEEmmmmEEclIJES3_EET0_DpOT_</fun> </sframe>
    <sframe> <fun>_ZSt13__invoke_implIN6tiledb6common6StatusERSt5_BindIFSt8functionIFS2_mmmmEEmmmmEEJEET_St14__invoke_otherOT0_DpOT1_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Addr8
   fun:_ZN6tiledb2sm29SparseUnorderedWithDupsReaderImE17copy_offsets_tileImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbT_PNS0_27UnorderedWithDupsResultTileImEEmmPSE_PhPPKv
   fun:_ZZN6tiledb2sm29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISH_EERKSF_ImSaImEERNS0_11QueryBufferERSF_IPKvSaIST_EEENKUlmmE_clEmm
   fun:_ZZN6tiledb2sm15parallel_for_2dIZNS0_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISI_EERKSG_ImSaImEERNS0_11QueryBufferERSG_IPKvSaISU_EEEUlmmE_EES6_PNS5_10ThreadPoolEmmmmRKSF_ENKUlmmmmE_clEmmmm
   fun:_ZSt13__invoke_implIN6tiledb6common6StatusERZNS0_2sm15parallel_for_2dIZNS3_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS3_10ResultTileESaISJ_EERKSH_ImSaImEERNS3_11QueryBufferERSH_IPKvSaISV_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSG_EUlmmmmE_JmmmmEESG_St14__invoke_otherOT0_DpOT1_
   fun:_ZSt10__invoke_rIN6tiledb6common6StatusERZNS0_2sm15parallel_for_2dIZNS3_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS3_10ResultTileESaISJ_EERKSH_ImSaImEERNS3_11QueryBufferERSH_IPKvSaISV_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSG_EUlmmmmE_JmmmmEENSt9enable_ifIX16is_invocable_r_vISG_T0_DpT1_EESG_E4typeEOS17_DpOS18_
   fun:_ZNSt17_Function_handlerIFN6tiledb6common6StatusEmmmmEZNS0_2sm15parallel_for_2dIZNS4_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS4_10ResultTileESaISK_EERKSI_ImSaImEERNS4_11QueryBufferERSI_IPKvSaISW_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSH_EUlmmmmE_E9_M_invokeERKSt9_Any_dataOmS1A_S1A_S1A_
   fun:_ZNKSt8functionIFN6tiledb6common6StatusEmmmmEEclEmmmm
   fun:_ZSt13__invoke_implIN6tiledb6common6StatusERSt8functionIFS2_mmmmEEJRmS7_S7_S7_EET_St14__invoke_otherOT0_DpOT1_
   fun:_ZSt8__invokeIRSt8functionIFN6tiledb6common6StatusEmmmmEEJRmS7_S7_S7_EENSt15__invoke_resultIT_JDpT0_EE4typeEOS9_DpOSA_
   fun:_ZNSt5_BindIFSt8functionIFN6tiledb6common6StatusEmmmmEEmmmmEE6__callIS3_JEJLm0ELm1ELm2ELm3EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE
   fun:_ZNSt5_BindIFSt8functionIFN6tiledb6common6StatusEmmmmEEmmmmEEclIJES3_EET0_DpOT_
   fun:_ZSt13__invoke_implIN6tiledb6common6StatusERSt5_BindIFSt8functionIFS2_mmmmEEmmmmEEJEET_St14__invoke_otherOT0_DpOT1_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Addr8</skind>
    <sframe> <fun>_ZN6tiledb2sm29SparseUnorderedWithDupsReaderImE17copy_offsets_tileImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbT_PNS0_27UnorderedWithDupsResultTileImEEmmPSE_PhPPKv</fun> </sframe>
    <sframe> <fun>_ZZN6tiledb2sm29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISH_EERKSF_ImSaImEERNS0_11QueryBufferERSF_IPKvSaIST_EEENKUlmmE_clEmm</fun> </sframe>
    <sframe> <fun>_ZZN6tiledb2sm15parallel_for_2dIZNS0_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISI_EERKSG_ImSaImEERNS0_11QueryBufferERSG_IPKvSaISU_EEEUlmmE_EES6_PNS5_10ThreadPoolEmmmmRKSF_ENKUlmmmmE_clEmmmm</fun> </sframe>
    <sframe> <fun>_ZSt13__invoke_implIN6tiledb6common6StatusERZNS0_2sm15parallel_for_2dIZNS3_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS3_10ResultTileESaISJ_EERKSH_ImSaImEERNS3_11QueryBufferERSH_IPKvSaISV_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSG_EUlmmmmE_JmmmmEESG_St14__invoke_otherOT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt10__invoke_rIN6tiledb6common6StatusERZNS0_2sm15parallel_for_2dIZNS3_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS3_10ResultTileESaISJ_EERKSH_ImSaImEERNS3_11QueryBufferERSH_IPKvSaISV_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSG_EUlmmmmE_JmmmmEENSt9enable_ifIX16is_invocable_r_vISG_T0_DpT1_EESG_E4typeEOS17_DpOS18_</fun> </sframe>
    <sframe> <fun>_ZNSt17_Function_handlerIFN6tiledb6common6StatusEmmmmEZNS0_2sm15parallel_for_2dIZNS4_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS4_10ResultTileESaISK_EERKSI_ImSaImEERNS4_11QueryBufferERSI_IPKvSaISW_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSH_EUlmmmmE_E9_M_invokeERKSt9_Any_dataOmS1A_S1A_S1A_</fun> </sframe>
    <sframe> <fun>_ZNKSt8functionIFN6tiledb6common6StatusEmmmmEEclEmmmm</fun> </sframe>
    <sframe> <fun>_ZSt13__invoke_implIN6tiledb6common6StatusERSt8functionIFS2_mmmmEEJRmS7_S7_S7_EET_St14__invoke_otherOT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt8__invokeIRSt8functionIFN6tiledb6common6StatusEmmmmEEJRmS7_S7_S7_EENSt15__invoke_resultIT_JDpT0_EE4typeEOS9_DpOSA_</fun> </sframe>
    <sframe> <fun>_ZNSt5_BindIFSt8functionIFN6tiledb6common6StatusEmmmmEEmmmmEE6__callIS3_JEJLm0ELm1ELm2ELm3EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE</fun> </sframe>
    <sframe> <fun>_ZNSt5_BindIFSt8functionIFN6tiledb6common6StatusEmmmmEEmmmmEEclIJES3_EET0_DpOT_</fun> </sframe>
    <sframe> <fun>_ZSt13__invoke_implIN6tiledb6common6StatusERSt5_BindIFSt8functionIFS2_mmmmEEmmmmEEJEET_St14__invoke_otherOT0_DpOT1_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Addr8
   fun:_ZN6tiledb2sm29SparseUnorderedWithDupsReaderImE17copy_offsets_tileImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbT_PNS0_27UnorderedWithDupsResultTileImEEmmPSE_PhPPKv
   fun:_ZZN6tiledb2sm29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISH_EERKSF_ImSaImEERNS0_11QueryBufferERSF_IPKvSaIST_EEENKUlmmE_clEmm
   fun:_ZZN6tiledb2sm15parallel_for_2dIZNS0_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISI_EERKSG_ImSaImEERNS0_11QueryBufferERSG_IPKvSaISU_EEEUlmmE_EES6_PNS5_10ThreadPoolEmmmmRKSF_ENKUlmmmmE_clEmmmm
   fun:_ZSt13__invoke_implIN6tiledb6common6StatusERZNS0_2sm15parallel_for_2dIZNS3_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS3_10ResultTileESaISJ_EERKSH_ImSaImEERNS3_11QueryBufferERSH_IPKvSaISV_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSG_EUlmmmmE_JmmmmEESG_St14__invoke_otherOT0_DpOT1_
   fun:_ZSt10__invoke_rIN6tiledb6common6StatusERZNS0_2sm15parallel_for_2dIZNS3_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS3_10ResultTileESaISJ_EERKSH_ImSaImEERNS3_11QueryBufferERSH_IPKvSaISV_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSG_EUlmmmmE_JmmmmEENSt9enable_ifIX16is_invocable_r_vISG_T0_DpT1_EESG_E4typeEOS17_DpOS18_
   fun:_ZNSt17_Function_handlerIFN6tiledb6common6StatusEmmmmEZNS0_2sm15parallel_for_2dIZNS4_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS4_10ResultTileESaISK_EERKSI_ImSaImEERNS4_11QueryBufferERSI_IPKvSaISW_EEEUlmmE_EES2_PNS1_10ThreadPoolEmmmmRKSH_EUlmmmmE_E9_M_invokeERKSt9_Any_dataOmS1A_S1A_S1A_
   fun:_ZNKSt8functionIFN6tiledb6common6StatusEmmmmEEclEmmmm
   fun:_ZSt13__invoke_implIN6tiledb6common6StatusERSt8functionIFS2_mmmmEEJRmS7_S7_S7_EET_St14__invoke_otherOT0_DpOT1_
   fun:_ZSt8__invokeIRSt8functionIFN6tiledb6common6StatusEmmmmEEJRmS7_S7_S7_EENSt15__invoke_resultIT_JDpT0_EE4typeEOS9_DpOSA_
   fun:_ZNSt5_BindIFSt8functionIFN6tiledb6common6StatusEmmmmEEmmmmEE6__callIS3_JEJLm0ELm1ELm2ELm3EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE
   fun:_ZNSt5_BindIFSt8functionIFN6tiledb6common6StatusEmmmmEEmmmmEEclIJES3_EET0_DpOT_
   fun:_ZSt13__invoke_implIN6tiledb6common6StatusERSt5_BindIFSt8functionIFS2_mmmmEEmmmmEEJEET_St14__invoke_otherOT0_DpOT1_
}
]]>
    </rawtext>
  </suppression>
<fatal_signal>
  <tid>1</tid>
  <signo>11</signo>
  <signame>SIGSEGV</signame>
  <sicode>1</sicode>
  <event>Access not within mapped region</event>
  <siaddr>0xC3B88000</siaddr>
  <stack>
    <frame>
      <ip>0x5A91604</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tile&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool, unsigned long, tiledb::sm::UnorderedWithDupsResultTile&lt;unsigned long&gt;*, unsigned long, unsigned long, unsigned long*, unsigned char*, void const**)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/query/readers</dir>
      <file>sparse_unordered_with_dups_reader.cc</file>
      <line>643</line>
    </frame>
    <frame>
      <ip>0x5A887A2</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}::operator()(unsigned long, unsigned long) const</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/query/readers</dir>
      <file>sparse_unordered_with_dups_reader.cc</file>
      <line>872</line>
    </frame>
    <frame>
      <ip>0x5A919D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}::operator()(unsigned long, unsigned long, unsigned long, unsigned long) const</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/sm/misc</dir>
      <file>parallel_functions.h</file>
      <line>340</line>
    </frame>
    <frame>
      <ip>0x5A9AA5C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status std::__invoke_impl&lt;tiledb::common::Status, tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&amp;, unsigned long, unsigned long, unsigned long, unsigned long&gt;(std::__invoke_other, tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x5A98E67</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::enable_if&lt;is_invocable_r_v&lt;tiledb::common::Status, tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&amp;, unsigned long, unsigned long, unsigned long, unsigned long&gt;, tiledb::common::Status&gt;::type std::__invoke_r&lt;tiledb::common::Status, tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&amp;, unsigned long, unsigned long, unsigned long, unsigned long&gt;(tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>116</line>
    </frame>
    <frame>
      <ip>0x5A97305</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Function_handler&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long), tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)::{lambda(unsigned long, unsigned long, unsigned long, unsigned long)#1}&gt;::_M_invoke(std::_Any_data const&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>std_function.h</file>
      <line>291</line>
    </frame>
    <frame>
      <ip>0x5751700</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;::operator()(unsigned long, unsigned long, unsigned long, unsigned long) const</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>std_function.h</file>
      <line>590</line>
    </frame>
    <frame>
      <ip>0x5750BA2</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status std::__invoke_impl&lt;tiledb::common::Status, std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;&gt;(std::__invoke_other, std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x574F2EB</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__invoke_result&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;&gt;::type std::__invoke&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;&gt;(std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;, unsigned long&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>97</line>
    </frame>
    <frame>
      <ip>0x574C3D6</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status std::_Bind&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt; (unsigned long, unsigned long, unsigned long, unsigned long)&gt;::__call&lt;tiledb::common::Status, , 0ul, 1ul, 2ul, 3ul&gt;(std::tuple&lt;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul, 3ul&gt;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>functional</file>
      <line>422</line>
    </frame>
    <frame>
      <ip>0x5747F1C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status std::_Bind&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt; (unsigned long, unsigned long, unsigned long, unsigned long)&gt;::operator()&lt;, tiledb::common::Status&gt;()</fn>
      <dir>/usr/include/c++/11</dir>
      <file>functional</file>
      <line>505</line>
    </frame>
    <frame>
      <ip>0x57405B8</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status std::__invoke_impl&lt;tiledb::common::Status, std::_Bind&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt; (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;&gt;(std::__invoke_other, std::_Bind&lt;std::function&lt;tiledb::common::Status (unsigned long, unsigned long, unsigned long, unsigned long)&gt; (unsigned long, unsigned long, unsigned long, unsigned long)&gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>61</line>
    </frame>
  </stack>
</fatal_signal>


<status>
  <state>FINISHED</state>
  <time>00:00:18:43.401 </time>
</status>

<error>
  <unique>0x40e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are possibly lost in loss record 29 of 1,007</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x60B3541</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x60AD9C5</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::allocate(std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x60A6403</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Vector_base&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::_M_allocate(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_vector.h</file>
      <line>346</line>
    </frame>
    <frame>
      <ip>0x60A5FAE</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Vector_base&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::_M_create_storage(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_vector.h</file>
      <line>361</line>
    </frame>
    <frame>
      <ip>0x6099F4E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Vector_base&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::_Vector_base(unsigned long, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_vector.h</file>
      <line>305</line>
    </frame>
    <frame>
      <ip>0x608F3D4</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::vector(std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_vector.h</file>
      <line>555</line>
    </frame>
    <frame>
      <ip>0x6084ABA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>spdlog::logger::logger(spdlog::logger const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/build/externals/src/ep_spdlog/include/spdlog</dir>
      <file>logger-inl.h</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x60BDCEE</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;spdlog::logger&gt;::construct&lt;spdlog::logger, spdlog::logger&amp;&gt;(spdlog::logger*, spdlog::logger&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x60BC2E8</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;spdlog::logger&gt; &gt;::construct&lt;spdlog::logger, spdlog::logger&amp;&gt;(std::allocator&lt;spdlog::logger&gt;&amp;, spdlog::logger*, spdlog::logger&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>516</line>
    </frame>
    <frame>
      <ip>0x60B7EC5</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;spdlog::logger, std::allocator&lt;spdlog::logger&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;spdlog::logger&amp;&gt;(std::allocator&lt;spdlog::logger&gt;, spdlog::logger&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>519</line>
    </frame>
    <frame>
      <ip>0x60B310B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;spdlog::logger, std::allocator&lt;spdlog::logger&gt;, spdlog::logger&amp;&gt;(spdlog::logger*&amp;, std::_Sp_alloc_shared_tag&lt;std::allocator&lt;spdlog::logger&gt; &gt;, spdlog::logger&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>650</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN6spdlog5sinks4sinkEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt10shared_ptrIN6spdlog5sinks4sinkEEEE8allocateERS5_m</fun> </sframe>
    <sframe> <fun>_ZNSt12_Vector_baseISt10shared_ptrIN6spdlog5sinks4sinkEESaIS4_EE11_M_allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt12_Vector_baseISt10shared_ptrIN6spdlog5sinks4sinkEESaIS4_EE17_M_create_storageEm</fun> </sframe>
    <sframe> <fun>_ZNSt12_Vector_baseISt10shared_ptrIN6spdlog5sinks4sinkEESaIS4_EEC1EmRKS5_</fun> </sframe>
    <sframe> <fun>_ZNSt6vectorISt10shared_ptrIN6spdlog5sinks4sinkEESaIS4_EEC1ERKS6_</fun> </sframe>
    <sframe> <fun>_ZN6spdlog6loggerC1ERKS0_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN6spdlog6loggerEE9constructIS2_JRS2_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIN6spdlog6loggerEEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN6spdlog6loggerESaIS1_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRS1_EEES2_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6spdlog6loggerESaIS5_EJRS5_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN6spdlog5sinks4sinkEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt10shared_ptrIN6spdlog5sinks4sinkEEEE8allocateERS5_m
   fun:_ZNSt12_Vector_baseISt10shared_ptrIN6spdlog5sinks4sinkEESaIS4_EE11_M_allocateEm
   fun:_ZNSt12_Vector_baseISt10shared_ptrIN6spdlog5sinks4sinkEESaIS4_EE17_M_create_storageEm
   fun:_ZNSt12_Vector_baseISt10shared_ptrIN6spdlog5sinks4sinkEESaIS4_EEC1EmRKS5_
   fun:_ZNSt6vectorISt10shared_ptrIN6spdlog5sinks4sinkEESaIS4_EEC1ERKS6_
   fun:_ZN6spdlog6loggerC1ERKS0_
   fun:_ZN9__gnu_cxx13new_allocatorIN6spdlog6loggerEE9constructIS2_JRS2_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaIN6spdlog6loggerEEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN6spdlog6loggerESaIS1_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRS1_EEES2_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6spdlog6loggerESaIS5_EJRS5_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN6spdlog5sinks4sinkEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt10shared_ptrIN6spdlog5sinks4sinkEEEE8allocateERS5_m</fun> </sframe>
    <sframe> <fun>_ZNSt12_Vector_baseISt10shared_ptrIN6spdlog5sinks4sinkEESaIS4_EE11_M_allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt12_Vector_baseISt10shared_ptrIN6spdlog5sinks4sinkEESaIS4_EE17_M_create_storageEm</fun> </sframe>
    <sframe> <fun>_ZNSt12_Vector_baseISt10shared_ptrIN6spdlog5sinks4sinkEESaIS4_EEC1EmRKS5_</fun> </sframe>
    <sframe> <fun>_ZNSt6vectorISt10shared_ptrIN6spdlog5sinks4sinkEESaIS4_EEC1ERKS6_</fun> </sframe>
    <sframe> <fun>_ZN6spdlog6loggerC1ERKS0_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN6spdlog6loggerEE9constructIS2_JRS2_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIN6spdlog6loggerEEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN6spdlog6loggerESaIS1_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRS1_EEES2_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6spdlog6loggerESaIS5_EJRS5_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt10shared_ptrIN6spdlog5sinks4sinkEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt10shared_ptrIN6spdlog5sinks4sinkEEEE8allocateERS5_m
   fun:_ZNSt12_Vector_baseISt10shared_ptrIN6spdlog5sinks4sinkEESaIS4_EE11_M_allocateEm
   fun:_ZNSt12_Vector_baseISt10shared_ptrIN6spdlog5sinks4sinkEESaIS4_EE17_M_create_storageEm
   fun:_ZNSt12_Vector_baseISt10shared_ptrIN6spdlog5sinks4sinkEESaIS4_EEC1EmRKS5_
   fun:_ZNSt6vectorISt10shared_ptrIN6spdlog5sinks4sinkEESaIS4_EEC1ERKS6_
   fun:_ZN6spdlog6loggerC1ERKS0_
   fun:_ZN9__gnu_cxx13new_allocatorIN6spdlog6loggerEE9constructIS2_JRS2_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaIN6spdlog6loggerEEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN6spdlog6loggerESaIS1_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRS1_EEES2_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6spdlog6loggerESaIS5_EJRS5_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x437</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>23 bytes in 1 blocks are possibly lost in loss record 70 of 1,007</text>
    <leakedbytes>23</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x132F5D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/examples/cpp_api/vcfdebug_cpp</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;(char const*, char const*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x130C0C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/examples/cpp_api/vcfdebug_cpp</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt;(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>basic_string.h</file>
      <line>539</line>
    </frame>
    <frame>
      <ip>0x5B4D790</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::RestClient::init(tiledb::sm::stats::Stats*, tiledb::sm::Config const*, tiledb::common::ThreadPool*, std::shared_ptr&lt;tiledb::common::Logger&gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/rest</dir>
      <file>rest_client.cc</file>
      <line>105</line>
    </frame>
    <frame>
      <ip>0x5C08647</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::ContextResources::ContextResources(tiledb::sm::Config const&amp;, std::shared_ptr&lt;tiledb::common::Logger&gt;, unsigned long, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context_resources.cc</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x5C0561B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Context::Context(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context.cc</file>
      <line>57</line>
    </frame>
    <frame>
      <ip>0x5D42C8F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb_ctx_handle_t::tiledb_ctx_handle_t(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/api/c_api/context</dir>
      <file>context_api_internal.h</file>
      <line>55</line>
    </frame>
    <frame>
      <ip>0x5D47E72</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;tiledb_ctx_handle_t&gt;::construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x5D47D7F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::enable_if&lt;std::__and_&lt;std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::__construct_helper&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;::type&gt;::value, void&gt;::type std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::_S_construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>251</line>
    </frame>
    <frame>
      <ip>0x5D47BE7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>decltype (_S_construct({parm#1}, {parm#2}, (forward&lt;tiledb::sm::Config&amp;&gt;)({parm#3}))) std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>364</line>
    </frame>
    <frame>
      <ip>0x5D479B9</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>519</line>
    </frame>
    <frame>
      <ip>0x5D475BD</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&amp;&gt;(tiledb_ctx_handle_t*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>650</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm10RestClient4initEPNS0_5stats5StatsEPKNS0_6ConfigEPNS_6common10ThreadPoolERKSt10shared_ptrINS8_6LoggerEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNS1_2sm6ConfigEEEES7_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_
   fun:_ZN6tiledb2sm10RestClient4initEPNS0_5stats5StatsEPKNS0_6ConfigEPNS_6common10ThreadPoolERKSt10shared_ptrINS8_6LoggerEE
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
   fun:_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_
   fun:_ZNSt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNS1_2sm6ConfigEEEES7_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm10RestClient4initEPNS0_5stats5StatsEPKNS0_6ConfigEPNS_6common10ThreadPoolERKSt10shared_ptrINS8_6LoggerEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNS1_2sm6ConfigEEEES7_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_
   fun:_ZN6tiledb2sm10RestClient4initEPNS0_5stats5StatsEPKNS0_6ConfigEPNS_6common10ThreadPoolERKSt10shared_ptrINS8_6LoggerEE
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
   fun:_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_
   fun:_ZNSt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNS1_2sm6ConfigEEEES7_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x59e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 429 of 1,007</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x52AB256</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x52AAD59</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x52AA69D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;::allocate(unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>governed_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x52A9977</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::allocate(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>318</line>
    </frame>
    <frame>
      <ip>0x52A8617</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__allocated_ptr&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt; std::__allocate_guarded&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>allocated_ptr.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x52A68AD</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&gt;(tiledb::sm::Azure::AzureRetryPolicy*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>648</line>
    </frame>
    <frame>
      <ip>0x52A4BF5</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;tiledb::sm::Azure::AzureRetryPolicy, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x52A2420</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::sm::Azure::AzureRetryPolicy&gt;::shared_ptr&lt;tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x529FBDB</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::sm::Azure::AzureRetryPolicy&gt; std::allocate_shared&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&gt;(tiledb::common::GovernedAllocator&lt;tiledb::sm::Azure::AzureRetryPolicy, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x529CE17</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::sm::Azure::AzureRetryPolicy&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;tiledb::sm::Azure::AzureRetryPolicy&gt;::make_shared_notrace&lt;&gt;()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>198</line>
    </frame>
    <frame>
      <ip>0x52995BD</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::sm::Azure::AzureRetryPolicy&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;tiledb::sm::Azure::AzureRetryPolicy&gt;::make_shared&lt;65&gt;(char const (&amp;) [65])</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>238</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6tiledb2sm5Azure16AzureRetryPolicyENS2_6common17GovernedAllocatorIS5_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6tiledb2sm5Azure16AzureRetryPolicyENS1_6common17GovernedAllocatorIS4_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS_2sm5Azure16AzureRetryPolicyENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_2sm5Azure16AzureRetryPolicyENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_2sm5Azure16AzureRetryPolicyENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb2sm5Azure16AzureRetryPolicyENS4_6common17GovernedAllocatorIS7_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN6tiledb2sm5Azure16AzureRetryPolicyELN9__gnu_cxx12_Lock_policyE2EEC1INS0_6common17GovernedAllocatorIS3_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN6tiledb2sm5Azure16AzureRetryPolicyEEC1INS0_6common17GovernedAllocatorIS3_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN6tiledb2sm5Azure16AzureRetryPolicyENS0_6common17GovernedAllocatorIS3_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS_2sm5Azure16AzureRetryPolicyEE19make_shared_notraceIJEEESt10shared_ptrIS5_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS_2sm5Azure16AzureRetryPolicyEE11make_sharedILi65EJEEESt10shared_ptrIS5_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6tiledb2sm5Azure16AzureRetryPolicyENS2_6common17GovernedAllocatorIS5_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6tiledb2sm5Azure16AzureRetryPolicyENS1_6common17GovernedAllocatorIS4_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS_2sm5Azure16AzureRetryPolicyENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_2sm5Azure16AzureRetryPolicyENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_2sm5Azure16AzureRetryPolicyENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb2sm5Azure16AzureRetryPolicyENS4_6common17GovernedAllocatorIS7_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN6tiledb2sm5Azure16AzureRetryPolicyELN9__gnu_cxx12_Lock_policyE2EEC1INS0_6common17GovernedAllocatorIS3_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN6tiledb2sm5Azure16AzureRetryPolicyEEC1INS0_6common17GovernedAllocatorIS3_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN6tiledb2sm5Azure16AzureRetryPolicyENS0_6common17GovernedAllocatorIS3_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS_2sm5Azure16AzureRetryPolicyEE19make_shared_notraceIJEEESt10shared_ptrIS5_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS_2sm5Azure16AzureRetryPolicyEE11make_sharedILi65EJEEESt10shared_ptrIS5_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6tiledb2sm5Azure16AzureRetryPolicyENS2_6common17GovernedAllocatorIS5_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6tiledb2sm5Azure16AzureRetryPolicyENS1_6common17GovernedAllocatorIS4_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS_2sm5Azure16AzureRetryPolicyENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_2sm5Azure16AzureRetryPolicyENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_2sm5Azure16AzureRetryPolicyENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb2sm5Azure16AzureRetryPolicyENS4_6common17GovernedAllocatorIS7_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN6tiledb2sm5Azure16AzureRetryPolicyELN9__gnu_cxx12_Lock_policyE2EEC1INS0_6common17GovernedAllocatorIS3_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN6tiledb2sm5Azure16AzureRetryPolicyEEC1INS0_6common17GovernedAllocatorIS3_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN6tiledb2sm5Azure16AzureRetryPolicyENS0_6common17GovernedAllocatorIS3_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS_2sm5Azure16AzureRetryPolicyEE19make_shared_notraceIJEEESt10shared_ptrIS5_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS_2sm5Azure16AzureRetryPolicyEE11make_sharedILi65EJEEESt10shared_ptrIS5_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6tiledb2sm5Azure16AzureRetryPolicyENS2_6common17GovernedAllocatorIS5_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6tiledb2sm5Azure16AzureRetryPolicyENS1_6common17GovernedAllocatorIS4_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS_2sm5Azure16AzureRetryPolicyENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_2sm5Azure16AzureRetryPolicyENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_2sm5Azure16AzureRetryPolicyENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb2sm5Azure16AzureRetryPolicyENS4_6common17GovernedAllocatorIS7_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN6tiledb2sm5Azure16AzureRetryPolicyELN9__gnu_cxx12_Lock_policyE2EEC1INS0_6common17GovernedAllocatorIS3_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN6tiledb2sm5Azure16AzureRetryPolicyEEC1INS0_6common17GovernedAllocatorIS3_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN6tiledb2sm5Azure16AzureRetryPolicyENS0_6common17GovernedAllocatorIS3_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS_2sm5Azure16AzureRetryPolicyEE19make_shared_notraceIJEEESt10shared_ptrIS5_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS_2sm5Azure16AzureRetryPolicyEE11make_sharedILi65EJEEESt10shared_ptrIS5_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x59f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 430 of 1,007</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x52AB1D0</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x52AAD2B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x52AA55F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;::allocate(unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>governed_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x52A9813</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::allocate(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>318</line>
    </frame>
    <frame>
      <ip>0x52A83F9</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__allocated_ptr&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt; std::__allocate_guarded&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>allocated_ptr.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x52A6705</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&gt;(azure::storage_lite::tinyxml2_parser*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>648</line>
    </frame>
    <frame>
      <ip>0x52A4B91</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;azure::storage_lite::tinyxml2_parser, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x52A23C6</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::tinyxml2_parser&gt;::shared_ptr&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x529FB6F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::tinyxml2_parser&gt; std::allocate_shared&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&gt;(tiledb::common::GovernedAllocator&lt;azure::storage_lite::tinyxml2_parser, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x529CD71</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::tinyxml2_parser&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;azure::storage_lite::tinyxml2_parser&gt;::make_shared_notrace&lt;&gt;()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>198</line>
    </frame>
    <frame>
      <ip>0x5299578</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::tinyxml2_parser&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;azure::storage_lite::tinyxml2_parser&gt;::make_shared&lt;65&gt;(char const (&amp;) [65])</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>238</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserEN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserEN6tiledb6common17GovernedAllocatorIS3_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite15tinyxml2_parserEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite15tinyxml2_parserELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite15tinyxml2_parserEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite15tinyxml2_parserEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite15tinyxml2_parserEE19make_shared_notraceIJEEESt10shared_ptrIS5_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite15tinyxml2_parserEE11make_sharedILi65EJEEESt10shared_ptrIS5_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserEN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserEN6tiledb6common17GovernedAllocatorIS3_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite15tinyxml2_parserEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite15tinyxml2_parserELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite15tinyxml2_parserEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite15tinyxml2_parserEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite15tinyxml2_parserEE19make_shared_notraceIJEEESt10shared_ptrIS5_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite15tinyxml2_parserEE11make_sharedILi65EJEEESt10shared_ptrIS5_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserEN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserEN6tiledb6common17GovernedAllocatorIS3_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite15tinyxml2_parserEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite15tinyxml2_parserELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite15tinyxml2_parserEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite15tinyxml2_parserEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite15tinyxml2_parserEE19make_shared_notraceIJEEESt10shared_ptrIS5_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite15tinyxml2_parserEE11make_sharedILi65EJEEESt10shared_ptrIS5_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserEN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserEN6tiledb6common17GovernedAllocatorIS3_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15tinyxml2_parserENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite15tinyxml2_parserEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite15tinyxml2_parserELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite15tinyxml2_parserEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite15tinyxml2_parserEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite15tinyxml2_parserEE19make_shared_notraceIJEEESt10shared_ptrIS5_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite15tinyxml2_parserEE11make_sharedILi65EJEEESt10shared_ptrIS5_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x5b9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are possibly lost in loss record 456 of 1,007</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x59EFA2D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x5088BE6</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Logger::Logger(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, tiledb::common::Logger::Level, tiledb::common::Logger::Format, bool)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/common</dir>
      <file>logger.cc</file>
      <line>54</line>
    </frame>
    <frame>
      <ip>0x5C08360</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;tiledb::common::Logger&gt;::construct&lt;tiledb::common::Logger, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tiledb::common::Logger::Level&gt;(tiledb::common::Logger*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, tiledb::common::Logger::Level&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x5C082EA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::enable_if&lt;std::__and_&lt;std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::__construct_helper&lt;tiledb::common::Logger, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tiledb::common::Logger::Level&gt;::type&gt;::value, void&gt;::type std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::_S_construct&lt;tiledb::common::Logger, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tiledb::common::Logger::Level&gt;(tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, tiledb::common::Logger*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, tiledb::common::Logger::Level&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>251</line>
    </frame>
    <frame>
      <ip>0x5C08295</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>decltype (_S_construct({parm#1}, {parm#2}, (forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;)({parm#3}), (forward&lt;tiledb::common::Logger::Level&gt;)({parm#3}))) std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::construct&lt;tiledb::common::Logger, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tiledb::common::Logger::Level&gt;(tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, tiledb::common::Logger*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, tiledb::common::Logger::Level&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>364</line>
    </frame>
    <frame>
      <ip>0x5C081FA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tiledb::common::Logger::Level&gt;(tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, tiledb::common::Logger::Level&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>519</line>
    </frame>
    <frame>
      <ip>0x5C08072</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tiledb::common::Logger::Level&gt;(tiledb::common::Logger*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, tiledb::common::Logger::Level&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>650</line>
    </frame>
    <frame>
      <ip>0x5C07F43</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;tiledb::common::Logger, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tiledb::common::Logger::Level&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, tiledb::common::Logger::Level&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x5C07E60</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::common::Logger&gt;::shared_ptr&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tiledb::common::Logger::Level&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, tiledb::common::Logger::Level&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x5C07D41</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::common::Logger&gt; std::allocate_shared&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tiledb::common::Logger::Level&gt;(tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, tiledb::common::Logger::Level&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x5C07B9C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::common::Logger&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;tiledb::common::Logger&gt;::make_shared_notrace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tiledb::common::Logger::Level&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, tiledb::common::Logger::Level&amp;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>198</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common6LoggerC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_5LevelENS1_6FormatEb</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN6tiledb6common6LoggerEE9constructIS3_JNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorINS1_6LoggerENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSK_DpOSL_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorINS1_6LoggerENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSH_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEES7_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common6LoggerENS5_17GovernedAllocatorIS6_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS6_5LevelEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN6tiledb6common6LoggerELN9__gnu_cxx12_Lock_policyE2EEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN6tiledb6common6LoggerEEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN6tiledb6common6LoggerENS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE19make_shared_notraceIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEESt10shared_ptrIS3_EDpOT_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZN6tiledb6common6LoggerC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_5LevelENS1_6FormatEb
   fun:_ZN9__gnu_cxx13new_allocatorIN6tiledb6common6LoggerEE9constructIS3_JNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorINS1_6LoggerENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSK_DpOSL_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorINS1_6LoggerENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSH_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEES7_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common6LoggerENS5_17GovernedAllocatorIS6_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS6_5LevelEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN6tiledb6common6LoggerELN9__gnu_cxx12_Lock_policyE2EEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN6tiledb6common6LoggerEEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN6tiledb6common6LoggerENS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE19make_shared_notraceIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEESt10shared_ptrIS3_EDpOT_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common6LoggerC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_5LevelENS1_6FormatEb</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN6tiledb6common6LoggerEE9constructIS3_JNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorINS1_6LoggerENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSK_DpOSL_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorINS1_6LoggerENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSH_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEES7_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common6LoggerENS5_17GovernedAllocatorIS6_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS6_5LevelEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN6tiledb6common6LoggerELN9__gnu_cxx12_Lock_policyE2EEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN6tiledb6common6LoggerEEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN6tiledb6common6LoggerENS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE19make_shared_notraceIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEESt10shared_ptrIS3_EDpOT_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZN6tiledb6common6LoggerC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_5LevelENS1_6FormatEb
   fun:_ZN9__gnu_cxx13new_allocatorIN6tiledb6common6LoggerEE9constructIS3_JNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorINS1_6LoggerENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSK_DpOSL_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorINS1_6LoggerENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSH_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEES7_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common6LoggerENS5_17GovernedAllocatorIS6_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS6_5LevelEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN6tiledb6common6LoggerELN9__gnu_cxx12_Lock_policyE2EEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN6tiledb6common6LoggerEEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN6tiledb6common6LoggerENS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE19make_shared_notraceIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEESt10shared_ptrIS3_EDpOT_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x5ce</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 477 of 1,007</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x59EFA2D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x5293E81</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>azure::storage_lite::CurlEasyClient::CurlEasyClient(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/build/externals/install/azurecpplite/include/http</dir>
      <file>libcurl_http_client.h</file>
      <line>283</line>
    </frame>
    <frame>
      <ip>0x52A7874</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;azure::storage_lite::CurlEasyClient&gt;::construct&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(azure::storage_lite::CurlEasyClient*, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x52A5D7E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;::construct&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;&amp;, azure::storage_lite::CurlEasyClient*, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>516</line>
    </frame>
    <frame>
      <ip>0x52A473E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>519</line>
    </frame>
    <frame>
      <ip>0x52A1EFE</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(azure::storage_lite::CurlEasyClient*&amp;, std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>650</line>
    </frame>
    <frame>
      <ip>0x529F4C1</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;azure::storage_lite::CurlEasyClient, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x529C68C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::CurlEasyClient&gt;::shared_ptr&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x5298FA7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::CurlEasyClient&gt; std::allocate_shared&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; const&amp;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x5296137</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::CurlEasyClient&gt; std::make_shared&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>879</line>
    </frame>
    <frame>
      <ip>0x5294776</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>azure::storage_lite::blob_client::blob_client(std::shared_ptr&lt;azure::storage_lite::storage_account&gt;, int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/build/externals/install/azurecpplite/include/blob</dir>
      <file>blob_client.h</file>
      <line>53</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite14CurlEasyClientEEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite14CurlEasyClientESaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt11make_sharedIN5azure12storage_lite14CurlEasyClientEJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite11blob_clientC1ESt10shared_ptrINS0_15storage_accountEEiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite14CurlEasyClientEEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite14CurlEasyClientESaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZSt11make_sharedIN5azure12storage_lite14CurlEasyClientEJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_EDpOT0_
   fun:_ZN5azure12storage_lite11blob_clientC1ESt10shared_ptrINS0_15storage_accountEEiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite14CurlEasyClientEEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite14CurlEasyClientESaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt11make_sharedIN5azure12storage_lite14CurlEasyClientEJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite11blob_clientC1ESt10shared_ptrINS0_15storage_accountEEiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite14CurlEasyClientEEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite14CurlEasyClientESaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZSt11make_sharedIN5azure12storage_lite14CurlEasyClientEJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_EDpOT0_
   fun:_ZN5azure12storage_lite11blob_clientC1ESt10shared_ptrINS0_15storage_accountEEiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x5d8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are possibly lost in loss record 487 of 1,007</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5323139</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;tiledb::sm::Filesystem&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x53221B7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;tiledb::sm::Filesystem&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;tiledb::sm::Filesystem&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x5320F58</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>561</line>
    </frame>
    <frame>
      <ip>0x531F6AB</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;tiledb::sm::Filesystem&gt;* std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_M_create_node&lt;tiledb::sm::Filesystem&gt;(tiledb::sm::Filesystem&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>611</line>
    </frame>
    <frame>
      <ip>0x531D4E2</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;tiledb::sm::Filesystem&gt;* std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_Alloc_node::operator()&lt;tiledb::sm::Filesystem&gt;(tiledb::sm::Filesystem&amp;&amp;) const</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>529</line>
    </frame>
    <frame>
      <ip>0x531A933</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_iterator&lt;tiledb::sm::Filesystem&gt; std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_M_insert_&lt;tiledb::sm::Filesystem, std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, tiledb::sm::Filesystem&amp;&amp;, std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1784</line>
    </frame>
    <frame>
      <ip>0x5317CED</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::pair&lt;std::_Rb_tree_iterator&lt;tiledb::sm::Filesystem&gt;, bool&gt; std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_M_insert_unique&lt;tiledb::sm::Filesystem&gt;(tiledb::sm::Filesystem&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>2129</line>
    </frame>
    <frame>
      <ip>0x5315D5C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::set&lt;tiledb::sm::Filesystem, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::insert(tiledb::sm::Filesystem&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_set.h</file>
      <line>521</line>
    </frame>
    <frame>
      <ip>0x53043AA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::VFS::VFS(tiledb::sm::stats::Stats*, tiledb::common::ThreadPool*, tiledb::common::ThreadPool*, tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/filesystem</dir>
      <file>vfs.cc</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x5C084DC</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::ContextResources::ContextResources(tiledb::sm::Config const&amp;, std::shared_ptr&lt;tiledb::common::Logger&gt;, unsigned long, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context_resources.cc</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x5C0561B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Context::Context(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context.cc</file>
      <line>57</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEEE8allocateERS5_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeIJS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeclIS2_EEPSt13_Rb_tree_nodeIS2_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_</fun> </sframe>
    <sframe> <fun>_ZNSt3setIN6tiledb2sm10FilesystemESt4lessIS2_ESaIS2_EE6insertEOS2_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEEE8allocateERS5_m
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeIJS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_
   fun:_ZNKSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeclIS2_EEPSt13_Rb_tree_nodeIS2_EOT_
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_
   fun:_ZNSt3setIN6tiledb2sm10FilesystemESt4lessIS2_ESaIS2_EE6insertEOS2_
   fun:_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEEE8allocateERS5_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeIJS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeclIS2_EEPSt13_Rb_tree_nodeIS2_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_</fun> </sframe>
    <sframe> <fun>_ZNSt3setIN6tiledb2sm10FilesystemESt4lessIS2_ESaIS2_EE6insertEOS2_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEEE8allocateERS5_m
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeIJS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_
   fun:_ZNKSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeclIS2_EEPSt13_Rb_tree_nodeIS2_EOT_
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_
   fun:_ZNSt3setIN6tiledb2sm10FilesystemESt4lessIS2_ESaIS2_EE6insertEOS2_
   fun:_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x5d9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are possibly lost in loss record 488 of 1,007</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5323139</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;tiledb::sm::Filesystem&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x53221B7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;tiledb::sm::Filesystem&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;tiledb::sm::Filesystem&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x5320F58</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>561</line>
    </frame>
    <frame>
      <ip>0x531F6AB</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;tiledb::sm::Filesystem&gt;* std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_M_create_node&lt;tiledb::sm::Filesystem&gt;(tiledb::sm::Filesystem&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>611</line>
    </frame>
    <frame>
      <ip>0x531D4E2</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;tiledb::sm::Filesystem&gt;* std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_Alloc_node::operator()&lt;tiledb::sm::Filesystem&gt;(tiledb::sm::Filesystem&amp;&amp;) const</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>529</line>
    </frame>
    <frame>
      <ip>0x531A933</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_iterator&lt;tiledb::sm::Filesystem&gt; std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_M_insert_&lt;tiledb::sm::Filesystem, std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, tiledb::sm::Filesystem&amp;&amp;, std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1784</line>
    </frame>
    <frame>
      <ip>0x5317CED</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::pair&lt;std::_Rb_tree_iterator&lt;tiledb::sm::Filesystem&gt;, bool&gt; std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_M_insert_unique&lt;tiledb::sm::Filesystem&gt;(tiledb::sm::Filesystem&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>2129</line>
    </frame>
    <frame>
      <ip>0x5315D5C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::set&lt;tiledb::sm::Filesystem, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::insert(tiledb::sm::Filesystem&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_set.h</file>
      <line>521</line>
    </frame>
    <frame>
      <ip>0x5304470</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::VFS::VFS(tiledb::sm::stats::Stats*, tiledb::common::ThreadPool*, tiledb::common::ThreadPool*, tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/filesystem</dir>
      <file>vfs.cc</file>
      <line>96</line>
    </frame>
    <frame>
      <ip>0x5C084DC</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::ContextResources::ContextResources(tiledb::sm::Config const&amp;, std::shared_ptr&lt;tiledb::common::Logger&gt;, unsigned long, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context_resources.cc</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x5C0561B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Context::Context(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context.cc</file>
      <line>57</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEEE8allocateERS5_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeIJS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeclIS2_EEPSt13_Rb_tree_nodeIS2_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_</fun> </sframe>
    <sframe> <fun>_ZNSt3setIN6tiledb2sm10FilesystemESt4lessIS2_ESaIS2_EE6insertEOS2_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEEE8allocateERS5_m
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeIJS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_
   fun:_ZNKSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeclIS2_EEPSt13_Rb_tree_nodeIS2_EOT_
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_
   fun:_ZNSt3setIN6tiledb2sm10FilesystemESt4lessIS2_ESaIS2_EE6insertEOS2_
   fun:_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEEE8allocateERS5_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeIJS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeclIS2_EEPSt13_Rb_tree_nodeIS2_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_</fun> </sframe>
    <sframe> <fun>_ZNSt3setIN6tiledb2sm10FilesystemESt4lessIS2_ESaIS2_EE6insertEOS2_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEEE8allocateERS5_m
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeIJS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_
   fun:_ZNKSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeclIS2_EEPSt13_Rb_tree_nodeIS2_EOT_
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_
   fun:_ZNSt3setIN6tiledb2sm10FilesystemESt4lessIS2_ESaIS2_EE6insertEOS2_
   fun:_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x5da</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are possibly lost in loss record 489 of 1,007</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5323139</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;tiledb::sm::Filesystem&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x53221B7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;tiledb::sm::Filesystem&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;tiledb::sm::Filesystem&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x5320F58</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>561</line>
    </frame>
    <frame>
      <ip>0x531F6AB</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;tiledb::sm::Filesystem&gt;* std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_M_create_node&lt;tiledb::sm::Filesystem&gt;(tiledb::sm::Filesystem&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>611</line>
    </frame>
    <frame>
      <ip>0x531D4E2</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;tiledb::sm::Filesystem&gt;* std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_Alloc_node::operator()&lt;tiledb::sm::Filesystem&gt;(tiledb::sm::Filesystem&amp;&amp;) const</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>529</line>
    </frame>
    <frame>
      <ip>0x531A933</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_iterator&lt;tiledb::sm::Filesystem&gt; std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_M_insert_&lt;tiledb::sm::Filesystem, std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, tiledb::sm::Filesystem&amp;&amp;, std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1784</line>
    </frame>
    <frame>
      <ip>0x5317CED</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::pair&lt;std::_Rb_tree_iterator&lt;tiledb::sm::Filesystem&gt;, bool&gt; std::_Rb_tree&lt;tiledb::sm::Filesystem, tiledb::sm::Filesystem, std::_Identity&lt;tiledb::sm::Filesystem&gt;, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::_M_insert_unique&lt;tiledb::sm::Filesystem&gt;(tiledb::sm::Filesystem&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>2129</line>
    </frame>
    <frame>
      <ip>0x5315D5C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::set&lt;tiledb::sm::Filesystem, std::less&lt;tiledb::sm::Filesystem&gt;, std::allocator&lt;tiledb::sm::Filesystem&gt; &gt;::insert(tiledb::sm::Filesystem&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_set.h</file>
      <line>521</line>
    </frame>
    <frame>
      <ip>0x5304572</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::VFS::VFS(tiledb::sm::stats::Stats*, tiledb::common::ThreadPool*, tiledb::common::ThreadPool*, tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/filesystem</dir>
      <file>vfs.cc</file>
      <line>117</line>
    </frame>
    <frame>
      <ip>0x5C084DC</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::ContextResources::ContextResources(tiledb::sm::Config const&amp;, std::shared_ptr&lt;tiledb::common::Logger&gt;, unsigned long, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context_resources.cc</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x5C0561B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Context::Context(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context.cc</file>
      <line>57</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEEE8allocateERS5_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeIJS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeclIS2_EEPSt13_Rb_tree_nodeIS2_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_</fun> </sframe>
    <sframe> <fun>_ZNSt3setIN6tiledb2sm10FilesystemESt4lessIS2_ESaIS2_EE6insertEOS2_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEEE8allocateERS5_m
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeIJS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_
   fun:_ZNKSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeclIS2_EEPSt13_Rb_tree_nodeIS2_EOT_
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_
   fun:_ZNSt3setIN6tiledb2sm10FilesystemESt4lessIS2_ESaIS2_EE6insertEOS2_
   fun:_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEEE8allocateERS5_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeIJS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeclIS2_EEPSt13_Rb_tree_nodeIS2_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_</fun> </sframe>
    <sframe> <fun>_ZNSt3setIN6tiledb2sm10FilesystemESt4lessIS2_ESaIS2_EE6insertEOS2_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN6tiledb2sm10FilesystemEEEE8allocateERS5_m
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeIJS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_
   fun:_ZNKSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeclIS2_EEPSt13_Rb_tree_nodeIS2_EOT_
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_
   fun:_ZNSt8_Rb_treeIN6tiledb2sm10FilesystemES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_
   fun:_ZNSt3setIN6tiledb2sm10FilesystemESt4lessIS2_ESaIS2_EE6insertEOS2_
   fun:_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x5dd</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>42 bytes in 1 blocks are possibly lost in loss record 492 of 1,007</text>
    <leakedbytes>42</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x59EFA2D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x5089BD5</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Logger::clone(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/common</dir>
      <file>logger.cc</file>
      <line>262</line>
    </frame>
    <frame>
      <ip>0x5B4D666</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::RestClient::init(tiledb::sm::stats::Stats*, tiledb::sm::Config const*, tiledb::common::ThreadPool*, std::shared_ptr&lt;tiledb::common::Logger&gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/rest</dir>
      <file>rest_client.cc</file>
      <line>97</line>
    </frame>
    <frame>
      <ip>0x5C08647</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::ContextResources::ContextResources(tiledb::sm::Config const&amp;, std::shared_ptr&lt;tiledb::common::Logger&gt;, unsigned long, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context_resources.cc</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x5C0561B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Context::Context(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context.cc</file>
      <line>57</line>
    </frame>
    <frame>
      <ip>0x5D42C8F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb_ctx_handle_t::tiledb_ctx_handle_t(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/api/c_api/context</dir>
      <file>context_api_internal.h</file>
      <line>55</line>
    </frame>
    <frame>
      <ip>0x5D47E72</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;tiledb_ctx_handle_t&gt;::construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x5D47D7F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::enable_if&lt;std::__and_&lt;std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::__construct_helper&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;::type&gt;::value, void&gt;::type std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::_S_construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>251</line>
    </frame>
    <frame>
      <ip>0x5D47BE7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>decltype (_S_construct({parm#1}, {parm#2}, (forward&lt;tiledb::sm::Config&amp;&gt;)({parm#3}))) std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>364</line>
    </frame>
    <frame>
      <ip>0x5D479B9</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>519</line>
    </frame>
    <frame>
      <ip>0x5D475BD</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&amp;&gt;(tiledb_ctx_handle_t*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>650</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common6Logger5cloneERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm10RestClient4initEPNS0_5stats5StatsEPKNS0_6ConfigEPNS_6common10ThreadPoolERKSt10shared_ptrINS8_6LoggerEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNS1_2sm6ConfigEEEES7_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZN6tiledb6common6Logger5cloneERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm
   fun:_ZN6tiledb2sm10RestClient4initEPNS0_5stats5StatsEPKNS0_6ConfigEPNS_6common10ThreadPoolERKSt10shared_ptrINS8_6LoggerEE
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
   fun:_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_
   fun:_ZNSt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNS1_2sm6ConfigEEEES7_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common6Logger5cloneERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm10RestClient4initEPNS0_5stats5StatsEPKNS0_6ConfigEPNS_6common10ThreadPoolERKSt10shared_ptrINS8_6LoggerEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNS1_2sm6ConfigEEEES7_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZN6tiledb6common6Logger5cloneERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm
   fun:_ZN6tiledb2sm10RestClient4initEPNS0_5stats5StatsEPKNS0_6ConfigEPNS_6common10ThreadPoolERKSt10shared_ptrINS8_6LoggerEE
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
   fun:_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_
   fun:_ZNSt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNS1_2sm6ConfigEEEES7_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x5de</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>42 bytes in 1 blocks are possibly lost in loss record 493 of 1,007</text>
    <leakedbytes>42</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x6E68E6E</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E6922C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator=(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5089B54</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Logger::set_name(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/common</dir>
      <file>logger.cc</file>
      <line>257</line>
    </frame>
    <frame>
      <ip>0x5089C36</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Logger::clone(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/common</dir>
      <file>logger.cc</file>
      <line>263</line>
    </frame>
    <frame>
      <ip>0x5B4D666</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::RestClient::init(tiledb::sm::stats::Stats*, tiledb::sm::Config const*, tiledb::common::ThreadPool*, std::shared_ptr&lt;tiledb::common::Logger&gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/rest</dir>
      <file>rest_client.cc</file>
      <line>97</line>
    </frame>
    <frame>
      <ip>0x5C08647</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::ContextResources::ContextResources(tiledb::sm::Config const&amp;, std::shared_ptr&lt;tiledb::common::Logger&gt;, unsigned long, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context_resources.cc</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x5C0561B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Context::Context(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context.cc</file>
      <line>57</line>
    </frame>
    <frame>
      <ip>0x5D42C8F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb_ctx_handle_t::tiledb_ctx_handle_t(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/api/c_api/context</dir>
      <file>context_api_internal.h</file>
      <line>55</line>
    </frame>
    <frame>
      <ip>0x5D47E72</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;tiledb_ctx_handle_t&gt;::construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x5D47D7F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::enable_if&lt;std::__and_&lt;std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::__construct_helper&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;::type&gt;::value, void&gt;::type std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::_S_construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>251</line>
    </frame>
    <frame>
      <ip>0x5D47BE7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>decltype (_S_construct({parm#1}, {parm#2}, (forward&lt;tiledb::sm::Config&amp;&gt;)({parm#3}))) std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>364</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common6Logger8set_nameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common6Logger5cloneERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm10RestClient4initEPNS0_5stats5StatsEPKNS0_6ConfigEPNS_6common10ThreadPoolERKSt10shared_ptrINS8_6LoggerEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_
   fun:_ZN6tiledb6common6Logger8set_nameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb6common6Logger5cloneERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm
   fun:_ZN6tiledb2sm10RestClient4initEPNS0_5stats5StatsEPKNS0_6ConfigEPNS_6common10ThreadPoolERKSt10shared_ptrINS8_6LoggerEE
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
   fun:_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common6Logger8set_nameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common6Logger5cloneERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm10RestClient4initEPNS0_5stats5StatsEPKNS0_6ConfigEPNS_6common10ThreadPoolERKSt10shared_ptrINS8_6LoggerEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_
   fun:_ZN6tiledb6common6Logger8set_nameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb6common6Logger5cloneERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm
   fun:_ZN6tiledb2sm10RestClient4initEPNS0_5stats5StatsEPKNS0_6ConfigEPNS_6common10ThreadPoolERKSt10shared_ptrINS8_6LoggerEE
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
   fun:_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x634</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 579 of 1,007</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x50B8179</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;*&gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x50B72D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;*&gt; &gt;::allocate(std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;*&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x50B5BA1</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Deque_base&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::_M_allocate_map(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>575</line>
    </frame>
    <frame>
      <ip>0x5D2B939</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Deque_base&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::_M_initialize_map(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>624</line>
    </frame>
    <frame>
      <ip>0x5D2ACED</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Deque_base&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::_Deque_base()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>438</line>
    </frame>
    <frame>
      <ip>0x5D2ABA7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::deque&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::deque()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>833</line>
    </frame>
    <frame>
      <ip>0x5D2ABC7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::ProducerConsumerQueue&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::deque&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt; &gt;::ProducerConsumerQueue()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/thread_pool</dir>
      <file>producer_consumer_queue.h</file>
      <line>50</line>
    </frame>
    <frame>
      <ip>0x5D29229</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::ThreadPool::ThreadPool(unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/common/thread_pool</dir>
      <file>thread_pool.cc</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x5C0843B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::ContextResources::ContextResources(tiledb::sm::Config const&amp;, std::shared_ptr&lt;tiledb::common::Logger&gt;, unsigned long, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context_resources.cc</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x5C0561B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Context::Context(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context.cc</file>
      <line>57</line>
    </frame>
    <frame>
      <ip>0x5D42C8F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb_ctx_handle_t::tiledb_ctx_handle_t(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/api/c_api/context</dir>
      <file>context_api_internal.h</file>
      <line>55</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIPSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIPSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEEE8allocateERS9_m</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE15_M_allocate_mapEm</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_initialize_mapEm</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EEC1Ev</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EEC1Ev</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common21ProducerConsumerQueueISt10shared_ptrISt13packaged_taskIFNS0_6StatusEvEEESt5dequeIS7_SaIS7_EEEC1Ev</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10ThreadPoolC1Em</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaIPSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEEE8allocateERS9_m
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE15_M_allocate_mapEm
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_initialize_mapEm
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EEC1Ev
   fun:_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EEC1Ev
   fun:_ZN6tiledb6common21ProducerConsumerQueueISt10shared_ptrISt13packaged_taskIFNS0_6StatusEvEEESt5dequeIS7_SaIS7_EEEC1Ev
   fun:_ZN6tiledb6common10ThreadPoolC1Em
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIPSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIPSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEEE8allocateERS9_m</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE15_M_allocate_mapEm</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_initialize_mapEm</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EEC1Ev</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EEC1Ev</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common21ProducerConsumerQueueISt10shared_ptrISt13packaged_taskIFNS0_6StatusEvEEESt5dequeIS7_SaIS7_EEEC1Ev</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10ThreadPoolC1Em</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaIPSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEEE8allocateERS9_m
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE15_M_allocate_mapEm
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_initialize_mapEm
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EEC1Ev
   fun:_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EEC1Ev
   fun:_ZN6tiledb6common21ProducerConsumerQueueISt10shared_ptrISt13packaged_taskIFNS0_6StatusEvEEESt5dequeIS7_SaIS7_EEEC1Ev
   fun:_ZN6tiledb6common10ThreadPoolC1Em
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x635</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 580 of 1,007</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x52AB149</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::blob_client, tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x52AABFE</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::blob_client, tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::blob_client, tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x52AA3D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::blob_client, tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;::allocate(unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>governed_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x52A9637</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::blob_client, tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::allocate(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::blob_client, tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>318</line>
    </frame>
    <frame>
      <ip>0x52A813B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__allocated_ptr&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::blob_client, tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt; std::__allocate_guarded&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::blob_client, tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::blob_client, tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>allocated_ptr.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x52A64F7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;azure::storage_lite::blob_client, tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(azure::storage_lite::blob_client*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>648</line>
    </frame>
    <frame>
      <ip>0x52A4B35</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;azure::storage_lite::blob_client, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x52A2392</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::blob_client&gt;::shared_ptr&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x529FA90</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::blob_client&gt; std::allocate_shared&lt;azure::storage_lite::blob_client, tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; const&amp;, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x529CC12</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::blob_client&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;azure::storage_lite::blob_client&gt;::make_shared_notrace&lt;std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>198</line>
    </frame>
    <frame>
      <ip>0x52994A0</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::blob_client&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;azure::storage_lite::blob_client&gt;::make_shared&lt;65, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(char const (&amp;) [65], std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>238</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientEN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientEN6tiledb6common17GovernedAllocatorIS3_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite11blob_clientEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRSt10shared_ptrINS5_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite11blob_clientELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRSt10shared_ptrINS1_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite11blob_clientEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRS_INS1_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite11blob_clientEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJRSt10shared_ptrINS1_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESA_IT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite11blob_clientEE19make_shared_notraceIJRSt10shared_ptrINS4_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES8_IS5_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite11blob_clientEE11make_sharedILi65EJRSt10shared_ptrINS4_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES8_IS5_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientEN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientEN6tiledb6common17GovernedAllocatorIS3_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite11blob_clientEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRSt10shared_ptrINS5_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite11blob_clientELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRSt10shared_ptrINS1_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite11blob_clientEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRS_INS1_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite11blob_clientEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJRSt10shared_ptrINS1_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESA_IT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite11blob_clientEE19make_shared_notraceIJRSt10shared_ptrINS4_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES8_IS5_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite11blob_clientEE11make_sharedILi65EJRSt10shared_ptrINS4_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES8_IS5_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientEN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientEN6tiledb6common17GovernedAllocatorIS3_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite11blob_clientEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRSt10shared_ptrINS5_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite11blob_clientELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRSt10shared_ptrINS1_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite11blob_clientEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRS_INS1_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite11blob_clientEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJRSt10shared_ptrINS1_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESA_IT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite11blob_clientEE19make_shared_notraceIJRSt10shared_ptrINS4_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES8_IS5_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite11blob_clientEE11make_sharedILi65EJRSt10shared_ptrINS4_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES8_IS5_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientEN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientEN6tiledb6common17GovernedAllocatorIS3_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite11blob_clientENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite11blob_clientEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRSt10shared_ptrINS5_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite11blob_clientELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRSt10shared_ptrINS1_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite11blob_clientEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRS_INS1_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite11blob_clientEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJRSt10shared_ptrINS1_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESA_IT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite11blob_clientEE19make_shared_notraceIJRSt10shared_ptrINS4_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES8_IS5_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite11blob_clientEE11make_sharedILi65EJRSt10shared_ptrINS4_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES8_IS5_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x636</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 581 of 1,007</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x52A752F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::executor_context, std::allocator&lt;azure::storage_lite::executor_context&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x52A5A82</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::executor_context, std::allocator&lt;azure::storage_lite::executor_context&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::executor_context, std::allocator&lt;azure::storage_lite::executor_context&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x52A426F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::executor_context, std::allocator&lt;azure::storage_lite::executor_context&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::executor_context, std::allocator&lt;azure::storage_lite::executor_context&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::executor_context, std::allocator&lt;azure::storage_lite::executor_context&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>allocated_ptr.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x52A1C7B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;azure::storage_lite::executor_context, std::allocator&lt;azure::storage_lite::executor_context&gt;, std::shared_ptr&lt;azure::storage_lite::tinyxml2_parser&gt;, std::shared_ptr&lt;azure::storage_lite::retry_policy&gt; &gt;(azure::storage_lite::executor_context*&amp;, std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::executor_context&gt; &gt;, std::shared_ptr&lt;azure::storage_lite::tinyxml2_parser&gt;&amp;&amp;, std::shared_ptr&lt;azure::storage_lite::retry_policy&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>648</line>
    </frame>
    <frame>
      <ip>0x529F325</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;azure::storage_lite::executor_context, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;azure::storage_lite::executor_context&gt;, std::shared_ptr&lt;azure::storage_lite::tinyxml2_parser&gt;, std::shared_ptr&lt;azure::storage_lite::retry_policy&gt; &gt;(std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::executor_context&gt; &gt;, std::shared_ptr&lt;azure::storage_lite::tinyxml2_parser&gt;&amp;&amp;, std::shared_ptr&lt;azure::storage_lite::retry_policy&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x529C4A6</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::executor_context&gt;::shared_ptr&lt;std::allocator&lt;azure::storage_lite::executor_context&gt;, std::shared_ptr&lt;azure::storage_lite::tinyxml2_parser&gt;, std::shared_ptr&lt;azure::storage_lite::retry_policy&gt; &gt;(std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::executor_context&gt; &gt;, std::shared_ptr&lt;azure::storage_lite::tinyxml2_parser&gt;&amp;&amp;, std::shared_ptr&lt;azure::storage_lite::retry_policy&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x5298DF6</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::executor_context&gt; std::allocate_shared&lt;azure::storage_lite::executor_context, std::allocator&lt;azure::storage_lite::executor_context&gt;, std::shared_ptr&lt;azure::storage_lite::tinyxml2_parser&gt;, std::shared_ptr&lt;azure::storage_lite::retry_policy&gt; &gt;(std::allocator&lt;azure::storage_lite::executor_context&gt; const&amp;, std::shared_ptr&lt;azure::storage_lite::tinyxml2_parser&gt;&amp;&amp;, std::shared_ptr&lt;azure::storage_lite::retry_policy&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x529600A</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::executor_context&gt; std::make_shared&lt;azure::storage_lite::executor_context, std::shared_ptr&lt;azure::storage_lite::tinyxml2_parser&gt;, std::shared_ptr&lt;azure::storage_lite::retry_policy&gt; &gt;(std::shared_ptr&lt;azure::storage_lite::tinyxml2_parser&gt;&amp;&amp;, std::shared_ptr&lt;azure::storage_lite::retry_policy&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>879</line>
    </frame>
    <frame>
      <ip>0x5294724</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>azure::storage_lite::blob_client::blob_client(std::shared_ptr&lt;azure::storage_lite::storage_account&gt;, int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/build/externals/install/azurecpplite/include/blob</dir>
      <file>blob_client.h</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x52AACA1</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;azure::storage_lite::blob_client&gt;::construct&lt;azure::storage_lite::blob_client, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(azure::storage_lite::blob_client*, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x52AA503</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::enable_if&lt;std::__and_&lt;std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::__construct_helper&lt;azure::storage_lite::blob_client, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::type&gt;::value, void&gt;::type std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::_S_construct&lt;azure::storage_lite::blob_client, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, azure::storage_lite::blob_client*, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>251</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite16executor_contextESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite16executor_contextESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite16executor_contextESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite16executor_contextESaIS6_EJSt10shared_ptrINS5_15tinyxml2_parserEES8_INS5_12retry_policyEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite16executor_contextELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJSt10shared_ptrINS1_15tinyxml2_parserEES8_INS1_12retry_policyEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite16executor_contextEEC1ISaIS2_EJS_INS1_15tinyxml2_parserEES_INS1_12retry_policyEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite16executor_contextESaIS2_EJSt10shared_ptrINS1_15tinyxml2_parserEES4_INS1_12retry_policyEEEES4_IT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt11make_sharedIN5azure12storage_lite16executor_contextEJSt10shared_ptrINS1_15tinyxml2_parserEES3_INS1_12retry_policyEEEES3_IT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite11blob_clientC1ESt10shared_ptrINS0_15storage_accountEEiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite11blob_clientEE9constructIS3_JRSt10shared_ptrINS2_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorIN5azure12storage_lite11blob_clientENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS5_JRSt10shared_ptrINS4_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt9enable_ifIXsrSt6__and_IJNSA_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS9_PSR_DpOSS_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite16executor_contextESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite16executor_contextESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m
   fun:_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite16executor_contextESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite16executor_contextESaIS6_EJSt10shared_ptrINS5_15tinyxml2_parserEES8_INS5_12retry_policyEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite16executor_contextELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJSt10shared_ptrINS1_15tinyxml2_parserEES8_INS1_12retry_policyEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite16executor_contextEEC1ISaIS2_EJS_INS1_15tinyxml2_parserEES_INS1_12retry_policyEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite16executor_contextESaIS2_EJSt10shared_ptrINS1_15tinyxml2_parserEES4_INS1_12retry_policyEEEES4_IT_ERKT0_DpOT1_
   fun:_ZSt11make_sharedIN5azure12storage_lite16executor_contextEJSt10shared_ptrINS1_15tinyxml2_parserEES3_INS1_12retry_policyEEEES3_IT_EDpOT0_
   fun:_ZN5azure12storage_lite11blob_clientC1ESt10shared_ptrINS0_15storage_accountEEiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite11blob_clientEE9constructIS3_JRSt10shared_ptrINS2_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorIN5azure12storage_lite11blob_clientENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS5_JRSt10shared_ptrINS4_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt9enable_ifIXsrSt6__and_IJNSA_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS9_PSR_DpOSS_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite16executor_contextESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite16executor_contextESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite16executor_contextESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite16executor_contextESaIS6_EJSt10shared_ptrINS5_15tinyxml2_parserEES8_INS5_12retry_policyEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite16executor_contextELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJSt10shared_ptrINS1_15tinyxml2_parserEES8_INS1_12retry_policyEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite16executor_contextEEC1ISaIS2_EJS_INS1_15tinyxml2_parserEES_INS1_12retry_policyEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite16executor_contextESaIS2_EJSt10shared_ptrINS1_15tinyxml2_parserEES4_INS1_12retry_policyEEEES4_IT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt11make_sharedIN5azure12storage_lite16executor_contextEJSt10shared_ptrINS1_15tinyxml2_parserEES3_INS1_12retry_policyEEEES3_IT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite11blob_clientC1ESt10shared_ptrINS0_15storage_accountEEiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite11blob_clientEE9constructIS3_JRSt10shared_ptrINS2_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorIN5azure12storage_lite11blob_clientENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS5_JRSt10shared_ptrINS4_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt9enable_ifIXsrSt6__and_IJNSA_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS9_PSR_DpOSS_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite16executor_contextESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite16executor_contextESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m
   fun:_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite16executor_contextESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite16executor_contextESaIS6_EJSt10shared_ptrINS5_15tinyxml2_parserEES8_INS5_12retry_policyEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite16executor_contextELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJSt10shared_ptrINS1_15tinyxml2_parserEES8_INS1_12retry_policyEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite16executor_contextEEC1ISaIS2_EJS_INS1_15tinyxml2_parserEES_INS1_12retry_policyEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite16executor_contextESaIS2_EJSt10shared_ptrINS1_15tinyxml2_parserEES4_INS1_12retry_policyEEEES4_IT_ERKT0_DpOT1_
   fun:_ZSt11make_sharedIN5azure12storage_lite16executor_contextEJSt10shared_ptrINS1_15tinyxml2_parserEES3_INS1_12retry_policyEEEES3_IT_EDpOT0_
   fun:_ZN5azure12storage_lite11blob_clientC1ESt10shared_ptrINS0_15storage_accountEEiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite11blob_clientEE9constructIS3_JRSt10shared_ptrINS2_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorIN5azure12storage_lite11blob_clientENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS5_JRSt10shared_ptrINS4_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt9enable_ifIXsrSt6__and_IJNSA_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS9_PSR_DpOSS_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x637</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 582 of 1,007</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x52A3BFF</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;void**&gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x52A142F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;void**&gt; &gt;::allocate(std::allocator&lt;void**&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x529ECDB</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Deque_base&lt;void*, std::allocator&lt;void*&gt; &gt;::_M_allocate_map(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>575</line>
    </frame>
    <frame>
      <ip>0x529BD03</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Deque_base&lt;void*, std::allocator&lt;void*&gt; &gt;::_M_initialize_map(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>624</line>
    </frame>
    <frame>
      <ip>0x52986A1</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Deque_base&lt;void*, std::allocator&lt;void*&gt; &gt;::_Deque_base()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>438</line>
    </frame>
    <frame>
      <ip>0x5295AD5</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::deque&lt;void*, std::allocator&lt;void*&gt; &gt;::deque()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>833</line>
    </frame>
    <frame>
      <ip>0x5295B48</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::queue&lt;void*, std::deque&lt;void*, std::allocator&lt;void*&gt; &gt; &gt;::queue&lt;std::deque&lt;void*, std::allocator&lt;void*&gt; &gt;, void&gt;()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_queue.h</file>
      <line>167</line>
    </frame>
    <frame>
      <ip>0x5293EA1</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>azure::storage_lite::CurlEasyClient::CurlEasyClient(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/build/externals/install/azurecpplite/include/http</dir>
      <file>libcurl_http_client.h</file>
      <line>283</line>
    </frame>
    <frame>
      <ip>0x52A7874</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;azure::storage_lite::CurlEasyClient&gt;::construct&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(azure::storage_lite::CurlEasyClient*, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x52A5D7E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;::construct&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;&amp;, azure::storage_lite::CurlEasyClient*, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>516</line>
    </frame>
    <frame>
      <ip>0x52A473E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>519</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIPPvE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIPPvEE8allocateERS2_m</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseIPvSaIS0_EE15_M_allocate_mapEm</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseIPvSaIS0_EE17_M_initialize_mapEm</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseIPvSaIS0_EEC1Ev</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeIPvSaIS0_EEC1Ev</fun> </sframe>
    <sframe> <fun>_ZNSt5queueIPvSt5dequeIS0_SaIS0_EEEC1IS3_vEEv</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPPvE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaIPPvEE8allocateERS2_m
   fun:_ZNSt11_Deque_baseIPvSaIS0_EE15_M_allocate_mapEm
   fun:_ZNSt11_Deque_baseIPvSaIS0_EE17_M_initialize_mapEm
   fun:_ZNSt11_Deque_baseIPvSaIS0_EEC1Ev
   fun:_ZNSt5dequeIPvSaIS0_EEC1Ev
   fun:_ZNSt5queueIPvSt5dequeIS0_SaIS0_EEEC1IS3_vEEv
   fun:_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIPPvE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIPPvEE8allocateERS2_m</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseIPvSaIS0_EE15_M_allocate_mapEm</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseIPvSaIS0_EE17_M_initialize_mapEm</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseIPvSaIS0_EEC1Ev</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeIPvSaIS0_EEC1Ev</fun> </sframe>
    <sframe> <fun>_ZNSt5queueIPvSt5dequeIS0_SaIS0_EEEC1IS3_vEEv</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPPvE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaIPPvEE8allocateERS2_m
   fun:_ZNSt11_Deque_baseIPvSaIS0_EE15_M_allocate_mapEm
   fun:_ZNSt11_Deque_baseIPvSaIS0_EE17_M_initialize_mapEm
   fun:_ZNSt11_Deque_baseIPvSaIS0_EEC1Ev
   fun:_ZNSt5dequeIPvSaIS0_EEC1Ev
   fun:_ZNSt5queueIPvSt5dequeIS0_SaIS0_EEEC1IS3_vEEv
   fun:_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x64b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>72 bytes in 1 blocks are possibly lost in loss record 602 of 1,007</text>
    <leakedbytes>72</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x508C977</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x508C863</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x508C713</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;::allocate(unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>governed_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x508C583</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::allocate(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>318</line>
    </frame>
    <frame>
      <ip>0x508C30B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__allocated_ptr&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt; std::__allocate_guarded&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>allocated_ptr.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x5C07FFF</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tiledb::common::Logger::Level&gt;(tiledb::common::Logger*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, tiledb::common::Logger::Level&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>648</line>
    </frame>
    <frame>
      <ip>0x5C07F43</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;tiledb::common::Logger, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tiledb::common::Logger::Level&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, tiledb::common::Logger::Level&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x5C07E60</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::common::Logger&gt;::shared_ptr&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tiledb::common::Logger::Level&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, tiledb::common::Logger::Level&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x5C07D41</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::common::Logger&gt; std::allocate_shared&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tiledb::common::Logger::Level&gt;(tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, tiledb::common::Logger::Level&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x5C07B9C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::common::Logger&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;tiledb::common::Logger&gt;::make_shared_notrace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tiledb::common::Logger::Level&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, tiledb::common::Logger::Level&amp;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>198</line>
    </frame>
    <frame>
      <ip>0x5C078C3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::common::Logger&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;tiledb::common::Logger&gt;::make_shared&lt;71, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tiledb::common::Logger::Level&gt;(char const (&amp;) [71], std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, tiledb::common::Logger::Level&amp;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>238</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS3_17GovernedAllocatorIS4_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS2_17GovernedAllocatorIS3_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_6LoggerENS1_IS3_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES5_S6_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS1_6LoggerENS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS1_6LoggerENS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEESt15__allocated_ptrIT_ERSE_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common6LoggerENS5_17GovernedAllocatorIS6_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS6_5LevelEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN6tiledb6common6LoggerELN9__gnu_cxx12_Lock_policyE2EEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN6tiledb6common6LoggerEEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN6tiledb6common6LoggerENS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE19make_shared_notraceIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEESt10shared_ptrIS3_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE11make_sharedILi71EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEESt10shared_ptrIS3_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS3_17GovernedAllocatorIS4_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS2_17GovernedAllocatorIS3_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSC_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_6LoggerENS1_IS3_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES5_S6_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS1_6LoggerENS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEE8allocateERSC_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS1_6LoggerENS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEESt15__allocated_ptrIT_ERSE_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common6LoggerENS5_17GovernedAllocatorIS6_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS6_5LevelEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN6tiledb6common6LoggerELN9__gnu_cxx12_Lock_policyE2EEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN6tiledb6common6LoggerEEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN6tiledb6common6LoggerENS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE19make_shared_notraceIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEESt10shared_ptrIS3_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE11make_sharedILi71EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEESt10shared_ptrIS3_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS3_17GovernedAllocatorIS4_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS2_17GovernedAllocatorIS3_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_6LoggerENS1_IS3_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES5_S6_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS1_6LoggerENS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS1_6LoggerENS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEESt15__allocated_ptrIT_ERSE_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common6LoggerENS5_17GovernedAllocatorIS6_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS6_5LevelEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN6tiledb6common6LoggerELN9__gnu_cxx12_Lock_policyE2EEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN6tiledb6common6LoggerEEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN6tiledb6common6LoggerENS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE19make_shared_notraceIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEESt10shared_ptrIS3_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE11make_sharedILi71EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEESt10shared_ptrIS3_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS3_17GovernedAllocatorIS4_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS2_17GovernedAllocatorIS3_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSC_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_6LoggerENS1_IS3_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES5_S6_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS1_6LoggerENS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEE8allocateERSC_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS1_6LoggerENS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEESt15__allocated_ptrIT_ERSE_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common6LoggerENS5_17GovernedAllocatorIS6_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS6_5LevelEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN6tiledb6common6LoggerELN9__gnu_cxx12_Lock_policyE2EEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN6tiledb6common6LoggerEEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN6tiledb6common6LoggerENS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS2_5LevelEEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE19make_shared_notraceIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEESt10shared_ptrIS3_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE11make_sharedILi71EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS3_5LevelEEEESt10shared_ptrIS3_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x64c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>72 bytes in 1 blocks are possibly lost in loss record 603 of 1,007</text>
    <leakedbytes>72</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x508C977</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x508C863</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x508C713</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;::allocate(unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>governed_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x508C583</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::allocate(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>318</line>
    </frame>
    <frame>
      <ip>0x508C30B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__allocated_ptr&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt; std::__allocate_guarded&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>allocated_ptr.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x508C169</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::shared_ptr&lt;spdlog::logger&gt; &gt;(tiledb::common::Logger*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::shared_ptr&lt;spdlog::logger&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>648</line>
    </frame>
    <frame>
      <ip>0x508C071</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;tiledb::common::Logger, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::shared_ptr&lt;spdlog::logger&gt; &gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::shared_ptr&lt;spdlog::logger&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x508BFC6</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::common::Logger&gt;::shared_ptr&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::shared_ptr&lt;spdlog::logger&gt; &gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::shared_ptr&lt;spdlog::logger&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x508BF54</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::common::Logger&gt; std::allocate_shared&lt;tiledb::common::Logger, tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::shared_ptr&lt;spdlog::logger&gt; &gt;(tiledb::common::GovernedAllocator&lt;tiledb::common::Logger, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; const&amp;, std::shared_ptr&lt;spdlog::logger&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x508BD9D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::common::Logger&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;tiledb::common::Logger&gt;::make_shared_notrace&lt;std::shared_ptr&lt;spdlog::logger&gt; &gt;(std::shared_ptr&lt;spdlog::logger&gt;&amp;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>198</line>
    </frame>
    <frame>
      <ip>0x508B9BC</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::common::Logger&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;tiledb::common::Logger&gt;::make_shared&lt;59, std::shared_ptr&lt;spdlog::logger&gt; &gt;(char const (&amp;) [59], std::shared_ptr&lt;spdlog::logger&gt;&amp;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>238</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS3_17GovernedAllocatorIS4_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS2_17GovernedAllocatorIS3_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_6LoggerENS1_IS3_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES5_S6_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS1_6LoggerENS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS1_6LoggerENS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEESt15__allocated_ptrIT_ERSE_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common6LoggerENS5_17GovernedAllocatorIS6_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEEJSt10shared_ptrIN6spdlog6loggerEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN6tiledb6common6LoggerELN9__gnu_cxx12_Lock_policyE2EEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJSt10shared_ptrIN6spdlog6loggerEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN6tiledb6common6LoggerEEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJS_IN6spdlog6loggerEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN6tiledb6common6LoggerENS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJSt10shared_ptrIN6spdlog6loggerEEEES8_IT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE19make_shared_notraceIJSt10shared_ptrIN6spdlog6loggerEEEEES6_IS3_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE11make_sharedILi59EJSt10shared_ptrIN6spdlog6loggerEEEEES6_IS3_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS3_17GovernedAllocatorIS4_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS2_17GovernedAllocatorIS3_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSC_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_6LoggerENS1_IS3_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES5_S6_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS1_6LoggerENS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEE8allocateERSC_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS1_6LoggerENS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEESt15__allocated_ptrIT_ERSE_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common6LoggerENS5_17GovernedAllocatorIS6_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEEJSt10shared_ptrIN6spdlog6loggerEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN6tiledb6common6LoggerELN9__gnu_cxx12_Lock_policyE2EEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJSt10shared_ptrIN6spdlog6loggerEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN6tiledb6common6LoggerEEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJS_IN6spdlog6loggerEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN6tiledb6common6LoggerENS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJSt10shared_ptrIN6spdlog6loggerEEEES8_IT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE19make_shared_notraceIJSt10shared_ptrIN6spdlog6loggerEEEEES6_IS3_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE11make_sharedILi59EJSt10shared_ptrIN6spdlog6loggerEEEEES6_IS3_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS3_17GovernedAllocatorIS4_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS2_17GovernedAllocatorIS3_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_6LoggerENS1_IS3_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES5_S6_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS1_6LoggerENS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS1_6LoggerENS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEESt15__allocated_ptrIT_ERSE_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common6LoggerENS5_17GovernedAllocatorIS6_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEEJSt10shared_ptrIN6spdlog6loggerEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN6tiledb6common6LoggerELN9__gnu_cxx12_Lock_policyE2EEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJSt10shared_ptrIN6spdlog6loggerEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN6tiledb6common6LoggerEEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJS_IN6spdlog6loggerEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN6tiledb6common6LoggerENS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJSt10shared_ptrIN6spdlog6loggerEEEES8_IT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE19make_shared_notraceIJSt10shared_ptrIN6spdlog6loggerEEEEES6_IS3_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE11make_sharedILi59EJSt10shared_ptrIN6spdlog6loggerEEEEES6_IS3_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS3_17GovernedAllocatorIS4_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6tiledb6common6LoggerENS2_17GovernedAllocatorIS3_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSC_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_6LoggerENS1_IS3_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES5_S6_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS1_6LoggerENS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEE8allocateERSC_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS1_6LoggerENS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEESt15__allocated_ptrIT_ERSE_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common6LoggerENS5_17GovernedAllocatorIS6_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEEJSt10shared_ptrIN6spdlog6loggerEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN6tiledb6common6LoggerELN9__gnu_cxx12_Lock_policyE2EEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJSt10shared_ptrIN6spdlog6loggerEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN6tiledb6common6LoggerEEC1INS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJS_IN6spdlog6loggerEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN6tiledb6common6LoggerENS1_17GovernedAllocatorIS2_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEJSt10shared_ptrIN6spdlog6loggerEEEES8_IT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE19make_shared_notraceIJSt10shared_ptrIN6spdlog6loggerEEEEES6_IS3_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS0_6LoggerEE11make_sharedILi59EJSt10shared_ptrIN6spdlog6loggerEEEEES6_IS3_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x64f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>78 bytes in 4 blocks are possibly lost in loss record 606 of 1,007</text>
    <leakedbytes>78</leakedbytes>
    <leakedblocks>4</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x59EFA2D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x525F60B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, 0ul&gt;(std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;, std::tuple&lt;&gt;&amp;, std::_Index_tuple&lt;0ul&gt;, std::_Index_tuple&lt;&gt;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>tuple</file>
      <line>1823</line>
    </frame>
    <frame>
      <ip>0x525F46C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::piecewise_construct_t, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>tuple</file>
      <line>1813</line>
    </frame>
    <frame>
      <ip>0x5B603FC</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x5B5F9A4</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;&amp;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>516</line>
    </frame>
    <frame>
      <ip>0x5B5EFEA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>hashtable_policy.h</file>
      <line>1878</line>
    </frame>
    <frame>
      <ip>0x5B5E1CA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;*, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>hashtable.h</file>
      <line>304</line>
    </frame>
    <frame>
      <ip>0x5B5D5B0</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>hashtable_policy.h</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x5B5CBE8</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>unordered_map.h</file>
      <line>980</line>
    </frame>
    <frame>
      <ip>0x5C18A01</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::StorageManagerCanonical::set_tag(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>storage_manager.cc</file>
      <line>1611</line>
    </frame>
    <frame>
      <ip>0x5C1C22C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::StorageManagerCanonical::set_default_tags()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>storage_manager.cc</file>
      <line>2011</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1IJRS6_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1IJRS6_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_ELb1EEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRSA_EESI_IJEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEvRSC_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEPSB_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEEPNSA_16_Hashtable_allocISaINSA_10_Hash_nodeIS8_Lb1EEEEEEDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_S6_ESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS8_</fun> </sframe>
    <sframe> <fun>_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S5_EEEixERSB_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical7set_tagERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical16set_default_tagsEv</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1IJRS6_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1IJRS6_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE
   fun:_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_ELb1EEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRSA_EESI_IJEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEvRSC_PT_DpOT0_
   fun:_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEPSB_DpOT_
   fun:_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEEPNSA_16_Hashtable_allocISaINSA_10_Hash_nodeIS8_Lb1EEEEEEDpOT_
   fun:_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_S6_ESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS8_
   fun:_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S5_EEEixERSB_
   fun:_ZN6tiledb2sm23StorageManagerCanonical7set_tagERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_
   fun:_ZN6tiledb2sm23StorageManagerCanonical16set_default_tagsEv
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1IJRS6_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1IJRS6_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_ELb1EEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRSA_EESI_IJEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEvRSC_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEPSB_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEEPNSA_16_Hashtable_allocISaINSA_10_Hash_nodeIS8_Lb1EEEEEEDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_S6_ESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS8_</fun> </sframe>
    <sframe> <fun>_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S5_EEEixERSB_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical7set_tagERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical16set_default_tagsEv</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1IJRS6_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1IJRS6_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE
   fun:_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_ELb1EEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRSA_EESI_IJEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEvRSC_PT_DpOT0_
   fun:_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEPSB_DpOT_
   fun:_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEEPNSA_16_Hashtable_allocISaINSA_10_Hash_nodeIS8_Lb1EEEEEEDpOT_
   fun:_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_S6_ESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS8_
   fun:_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S5_EEEixERSB_
   fun:_ZN6tiledb2sm23StorageManagerCanonical7set_tagERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_
   fun:_ZN6tiledb2sm23StorageManagerCanonical16set_default_tagsEv
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x652</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>80 bytes in 1 blocks are possibly lost in loss record 609 of 1,007</text>
    <leakedbytes>80</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x52AAFB5</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::shared_key_credential, tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x52AA951</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::shared_key_credential, tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::shared_key_credential, tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x52A9F3B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::shared_key_credential, tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;::allocate(unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>governed_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x52A90D5</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::shared_key_credential, tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::allocate(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::shared_key_credential, tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>318</line>
    </frame>
    <frame>
      <ip>0x52A7933</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__allocated_ptr&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::shared_key_credential, tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt; std::__allocate_guarded&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::shared_key_credential, tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::shared_key_credential, tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>allocated_ptr.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x52A5EB9</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;azure::storage_lite::shared_key_credential, tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(azure::storage_lite::shared_key_credential*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>648</line>
    </frame>
    <frame>
      <ip>0x52A493B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;azure::storage_lite::shared_key_credential, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x52A21B8</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::shared_key_credential&gt;::shared_ptr&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x529F80A</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::shared_key_credential&gt; std::allocate_shared&lt;azure::storage_lite::shared_key_credential, tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(tiledb::common::GovernedAllocator&lt;azure::storage_lite::shared_key_credential, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x529C8AE</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::shared_key_credential&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;azure::storage_lite::shared_key_credential&gt;::make_shared_notrace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>198</line>
    </frame>
    <frame>
      <ip>0x52991F4</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::shared_key_credential&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;azure::storage_lite::shared_key_credential&gt;::make_shared&lt;65, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(char const (&amp;) [65], std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>238</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialEN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialEN6tiledb6common17GovernedAllocatorIS3_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite21shared_key_credentialEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESK_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite21shared_key_credentialELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESK_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite21shared_key_credentialEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESI_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite21shared_key_credentialEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESG_EESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite21shared_key_credentialEE19make_shared_notraceIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_EEESt10shared_ptrIS5_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite21shared_key_credentialEE11make_sharedILi65EJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_EEESt10shared_ptrIS5_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialEN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialEN6tiledb6common17GovernedAllocatorIS3_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite21shared_key_credentialEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESK_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite21shared_key_credentialELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESK_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite21shared_key_credentialEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESI_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite21shared_key_credentialEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESG_EESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite21shared_key_credentialEE19make_shared_notraceIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_EEESt10shared_ptrIS5_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite21shared_key_credentialEE11make_sharedILi65EJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_EEESt10shared_ptrIS5_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialEN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialEN6tiledb6common17GovernedAllocatorIS3_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite21shared_key_credentialEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESK_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite21shared_key_credentialELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESK_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite21shared_key_credentialEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESI_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite21shared_key_credentialEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESG_EESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite21shared_key_credentialEE19make_shared_notraceIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_EEESt10shared_ptrIS5_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite21shared_key_credentialEE11make_sharedILi65EJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_EEESt10shared_ptrIS5_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialEN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialEN6tiledb6common17GovernedAllocatorIS3_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite21shared_key_credentialENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite21shared_key_credentialEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESK_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite21shared_key_credentialELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESK_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite21shared_key_credentialEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESI_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite21shared_key_credentialEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESG_EESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite21shared_key_credentialEE19make_shared_notraceIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_EEESt10shared_ptrIS5_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite21shared_key_credentialEE11make_sharedILi65EJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_EEESt10shared_ptrIS5_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x653</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>80 bytes in 1 blocks are possibly lost in loss record 610 of 1,007</text>
    <leakedbytes>80</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5B6036B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x5B5F92A</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::allocate(std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x5B5EF5D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>hashtable_policy.h</file>
      <line>1873</line>
    </frame>
    <frame>
      <ip>0x5B5E1CA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;*, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>hashtable.h</file>
      <line>304</line>
    </frame>
    <frame>
      <ip>0x5B5D5B0</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>hashtable_policy.h</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x5B5CBE8</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>unordered_map.h</file>
      <line>980</line>
    </frame>
    <frame>
      <ip>0x5C18A01</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::StorageManagerCanonical::set_tag(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>storage_manager.cc</file>
      <line>1611</line>
    </frame>
    <frame>
      <ip>0x5C1C22C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::StorageManagerCanonical::set_default_tags()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>storage_manager.cc</file>
      <line>2011</line>
    </frame>
    <frame>
      <ip>0x5C0A9FD</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::StorageManagerCanonical::init()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>storage_manager.cc</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x5C0A867</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::StorageManagerCanonical::StorageManagerCanonical(tiledb::sm::ContextResources&amp;, std::shared_ptr&lt;tiledb::common::Logger&gt;, tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>storage_manager.cc</file>
      <line>102</line>
    </frame>
    <frame>
      <ip>0x5C05691</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Context::Context(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context.cc</file>
      <line>66</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_ELb1EEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEPSB_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEEPNSA_16_Hashtable_allocISaINSA_10_Hash_nodeIS8_Lb1EEEEEEDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_S6_ESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS8_</fun> </sframe>
    <sframe> <fun>_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S5_EEEixERSB_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical7set_tagERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical16set_default_tagsEv</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical4initEv</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonicalC1ERNS0_16ContextResourcesESt10shared_ptrINS_6common6LoggerEERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_ELb1EEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE8allocateERSC_m
   fun:_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEPSB_DpOT_
   fun:_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEEPNSA_16_Hashtable_allocISaINSA_10_Hash_nodeIS8_Lb1EEEEEEDpOT_
   fun:_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_S6_ESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS8_
   fun:_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S5_EEEixERSB_
   fun:_ZN6tiledb2sm23StorageManagerCanonical7set_tagERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_
   fun:_ZN6tiledb2sm23StorageManagerCanonical16set_default_tagsEv
   fun:_ZN6tiledb2sm23StorageManagerCanonical4initEv
   fun:_ZN6tiledb2sm23StorageManagerCanonicalC1ERNS0_16ContextResourcesESt10shared_ptrINS_6common6LoggerEERKNS0_6ConfigE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_ELb1EEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEPSB_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEEPNSA_16_Hashtable_allocISaINSA_10_Hash_nodeIS8_Lb1EEEEEEDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_S6_ESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS8_</fun> </sframe>
    <sframe> <fun>_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S5_EEEixERSB_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical7set_tagERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical16set_default_tagsEv</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical4initEv</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonicalC1ERNS0_16ContextResourcesESt10shared_ptrINS_6common6LoggerEERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_ELb1EEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE8allocateERSC_m
   fun:_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEPSB_DpOT_
   fun:_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEEPNSA_16_Hashtable_allocISaINSA_10_Hash_nodeIS8_Lb1EEEEEEDpOT_
   fun:_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_S6_ESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS8_
   fun:_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S5_EEEixERSB_
   fun:_ZN6tiledb2sm23StorageManagerCanonical7set_tagERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_
   fun:_ZN6tiledb2sm23StorageManagerCanonical16set_default_tagsEv
   fun:_ZN6tiledb2sm23StorageManagerCanonical4initEv
   fun:_ZN6tiledb2sm23StorageManagerCanonicalC1ERNS0_16ContextResourcesESt10shared_ptrINS_6common6LoggerEERKNS0_6ConfigE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x659</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>86 bytes in 4 blocks are possibly lost in loss record 616 of 1,007</text>
    <leakedbytes>86</leakedbytes>
    <leakedblocks>4</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x59EFA2D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x50B7ADA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_pair.h</file>
      <line>314</line>
    </frame>
    <frame>
      <ip>0x50B7B4C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x50B6BAA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>516</line>
    </frame>
    <frame>
      <ip>0x50B4FFF</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>595</line>
    </frame>
    <frame>
      <ip>0x50B508B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>612</line>
    </frame>
    <frame>
      <ip>0x525EE0F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>476</line>
    </frame>
    <frame>
      <ip>0x525E0D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>645</line>
    </frame>
    <frame>
      <ip>0x525C9D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1849</line>
    </frame>
    <frame>
      <ip>0x525CA13</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1856</line>
    </frame>
    <frame>
      <ip>0x525CA13</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1856</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x65a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>86 bytes in 4 blocks are possibly lost in loss record 617 of 1,007</text>
    <leakedbytes>86</leakedbytes>
    <leakedblocks>4</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x59EFA2D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x50B7ADA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_pair.h</file>
      <line>314</line>
    </frame>
    <frame>
      <ip>0x50B7B4C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x50B6BAA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>516</line>
    </frame>
    <frame>
      <ip>0x50B4FFF</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>595</line>
    </frame>
    <frame>
      <ip>0x525EDEA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>472</line>
    </frame>
    <frame>
      <ip>0x525E0D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>645</line>
    </frame>
    <frame>
      <ip>0x525C9D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1849</line>
    </frame>
    <frame>
      <ip>0x525CA13</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1856</line>
    </frame>
    <frame>
      <ip>0x525CA13</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1856</line>
    </frame>
    <frame>
      <ip>0x525CA9B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1866</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x671</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>104 bytes in 1 blocks are possibly lost in loss record 640 of 1,007</text>
    <leakedbytes>104</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x52B1AA4</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::MemFilesystem::Directory* tiledb::common::tiledb_new&lt;tiledb::sm::MemFilesystem::Directory&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common</dir>
      <file>heap_memory.h</file>
      <line>66</line>
    </frame>
    <frame>
      <ip>0x52ACE31</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::MemFilesystem::MemFilesystem()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/filesystem</dir>
      <file>mem_filesystem.cc</file>
      <line>344</line>
    </frame>
    <frame>
      <ip>0x5304204</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::VFS::VFS(tiledb::sm::stats::Stats*, tiledb::common::ThreadPool*, tiledb::common::ThreadPool*, tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/filesystem</dir>
      <file>vfs.cc</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x5C084DC</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::ContextResources::ContextResources(tiledb::sm::Config const&amp;, std::shared_ptr&lt;tiledb::common::Logger&gt;, unsigned long, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context_resources.cc</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x5C0561B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Context::Context(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context.cc</file>
      <line>57</line>
    </frame>
    <frame>
      <ip>0x5D42C8F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb_ctx_handle_t::tiledb_ctx_handle_t(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/api/c_api/context</dir>
      <file>context_api_internal.h</file>
      <line>55</line>
    </frame>
    <frame>
      <ip>0x5D47E72</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;tiledb_ctx_handle_t&gt;::construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x5D47D7F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::enable_if&lt;std::__and_&lt;std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::__construct_helper&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;::type&gt;::value, void&gt;::type std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::_S_construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>251</line>
    </frame>
    <frame>
      <ip>0x5D47BE7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>decltype (_S_construct({parm#1}, {parm#2}, (forward&lt;tiledb::sm::Config&amp;&gt;)({parm#3}))) std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>364</line>
    </frame>
    <frame>
      <ip>0x5D479B9</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>519</line>
    </frame>
    <frame>
      <ip>0x5D475BD</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&amp;&gt;(tiledb_ctx_handle_t*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>650</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10tiledb_newINS_2sm13MemFilesystem9DirectoryEJEEEPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEDpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm13MemFilesystemC1Ev</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNS1_2sm6ConfigEEEES7_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN6tiledb6common10tiledb_newINS_2sm13MemFilesystem9DirectoryEJEEEPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEDpOT0_
   fun:_ZN6tiledb2sm13MemFilesystemC1Ev
   fun:_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
   fun:_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_
   fun:_ZNSt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNS1_2sm6ConfigEEEES7_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10tiledb_newINS_2sm13MemFilesystem9DirectoryEJEEEPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEDpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm13MemFilesystemC1Ev</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNS1_2sm6ConfigEEEES7_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN6tiledb6common10tiledb_newINS_2sm13MemFilesystem9DirectoryEJEEEPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEDpOT0_
   fun:_ZN6tiledb2sm13MemFilesystemC1Ev
   fun:_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
   fun:_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_
   fun:_ZNSt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNS1_2sm6ConfigEEEES7_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x68b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>128 bytes in 1 blocks are possibly lost in loss record 666 of 1,007</text>
    <leakedbytes>128</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x520006F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_config_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x51FFB52</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_config_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_config_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x51FF34F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_config_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;::allocate(unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>governed_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x51FE717</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_config_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::allocate(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_config_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>318</line>
    </frame>
    <frame>
      <ip>0x51FD611</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__allocated_ptr&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_config_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt; std::__allocate_guarded&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_config_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_config_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>allocated_ptr.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x51FC743</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;tiledb_config_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&gt;(tiledb_config_handle_t*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, tiledb::sm::Config&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>648</line>
    </frame>
    <frame>
      <ip>0x51FB7C7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;tiledb_config_handle_t, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, tiledb::sm::Config&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x51FAB7A</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb_config_handle_t&gt;::shared_ptr&lt;tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, tiledb::sm::Config&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x51F9F0E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb_config_handle_t&gt; std::allocate_shared&lt;tiledb_config_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&gt;(tiledb::common::GovernedAllocator&lt;tiledb_config_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; const&amp;, tiledb::sm::Config&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x51F8CD9</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb_config_handle_t&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;tiledb_config_handle_t&gt;::make_shared_notrace&lt;tiledb::sm::Config&gt;(tiledb::sm::Config&amp;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>198</line>
    </frame>
    <frame>
      <ip>0x51D4FCF</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb_config_handle_t&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;tiledb_config_handle_t&gt;::make_shared&lt;86, tiledb::sm::Config&gt;(char const (&amp;) [86], tiledb::sm::Config&amp;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>238</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tN6tiledb6common17GovernedAllocatorIS1_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tNS1_IS3_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES5_S6_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tNS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tNS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEESt15__allocated_ptrIT_ERSE_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I22tiledb_config_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrI22tiledb_config_handle_tLN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS0_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJNS5_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrI22tiledb_config_handle_tEC1IN6tiledb6common17GovernedAllocatorIS0_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJNS3_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedI22tiledb_config_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJNS1_2sm6ConfigEEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsI22tiledb_config_handle_tE19make_shared_notraceIJNS_2sm6ConfigEEEESt10shared_ptrIS3_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsI22tiledb_config_handle_tE11make_sharedILi86EJNS_2sm6ConfigEEEESt10shared_ptrIS3_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tN6tiledb6common17GovernedAllocatorIS1_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSC_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tNS1_IS3_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES5_S6_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tNS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEE8allocateERSC_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tNS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEESt15__allocated_ptrIT_ERSE_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I22tiledb_config_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrI22tiledb_config_handle_tLN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS0_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJNS5_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrI22tiledb_config_handle_tEC1IN6tiledb6common17GovernedAllocatorIS0_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJNS3_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedI22tiledb_config_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJNS1_2sm6ConfigEEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsI22tiledb_config_handle_tE19make_shared_notraceIJNS_2sm6ConfigEEEESt10shared_ptrIS3_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsI22tiledb_config_handle_tE11make_sharedILi86EJNS_2sm6ConfigEEEESt10shared_ptrIS3_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tN6tiledb6common17GovernedAllocatorIS1_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tNS1_IS3_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES5_S6_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tNS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tNS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEESt15__allocated_ptrIT_ERSE_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I22tiledb_config_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrI22tiledb_config_handle_tLN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS0_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJNS5_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrI22tiledb_config_handle_tEC1IN6tiledb6common17GovernedAllocatorIS0_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJNS3_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedI22tiledb_config_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJNS1_2sm6ConfigEEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsI22tiledb_config_handle_tE19make_shared_notraceIJNS_2sm6ConfigEEEESt10shared_ptrIS3_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsI22tiledb_config_handle_tE11make_sharedILi86EJNS_2sm6ConfigEEEESt10shared_ptrIS3_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tN6tiledb6common17GovernedAllocatorIS1_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSC_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tNS1_IS3_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES5_S6_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tNS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEE8allocateERSC_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI22tiledb_config_handle_tNS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEESt15__allocated_ptrIT_ERSE_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I22tiledb_config_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrI22tiledb_config_handle_tLN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS0_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJNS5_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrI22tiledb_config_handle_tEC1IN6tiledb6common17GovernedAllocatorIS0_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJNS3_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedI22tiledb_config_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJNS1_2sm6ConfigEEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsI22tiledb_config_handle_tE19make_shared_notraceIJNS_2sm6ConfigEEEESt10shared_ptrIS3_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsI22tiledb_config_handle_tE11make_sharedILi86EJNS_2sm6ConfigEEEESt10shared_ptrIS3_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x693</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>144 bytes in 1 blocks are possibly lost in loss record 674 of 1,007</text>
    <leakedbytes>144</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5315B94</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::VFS::ReadAheadCache* tiledb::common::tiledb_new&lt;tiledb::sm::VFS::ReadAheadCache, unsigned long&amp;&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common</dir>
      <file>heap_memory.h</file>
      <line>66</line>
    </frame>
    <frame>
      <ip>0x530433C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::VFS::VFS(tiledb::sm::stats::Stats*, tiledb::common::ThreadPool*, tiledb::common::ThreadPool*, tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/filesystem</dir>
      <file>vfs.cc</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x5C084DC</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::ContextResources::ContextResources(tiledb::sm::Config const&amp;, std::shared_ptr&lt;tiledb::common::Logger&gt;, unsigned long, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context_resources.cc</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x5C0561B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Context::Context(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context.cc</file>
      <line>57</line>
    </frame>
    <frame>
      <ip>0x5D42C8F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb_ctx_handle_t::tiledb_ctx_handle_t(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/api/c_api/context</dir>
      <file>context_api_internal.h</file>
      <line>55</line>
    </frame>
    <frame>
      <ip>0x5D47E72</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;tiledb_ctx_handle_t&gt;::construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x5D47D7F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::enable_if&lt;std::__and_&lt;std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::__construct_helper&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;::type&gt;::value, void&gt;::type std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::_S_construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>251</line>
    </frame>
    <frame>
      <ip>0x5D47BE7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>decltype (_S_construct({parm#1}, {parm#2}, (forward&lt;tiledb::sm::Config&amp;&gt;)({parm#3}))) std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>364</line>
    </frame>
    <frame>
      <ip>0x5D479B9</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>519</line>
    </frame>
    <frame>
      <ip>0x5D475BD</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&amp;&gt;(tiledb_ctx_handle_t*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>650</line>
    </frame>
    <frame>
      <ip>0x5D4732D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;tiledb_ctx_handle_t, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&amp;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10tiledb_newINS_2sm3VFS14ReadAheadCacheEJRmEEEPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEDpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNS1_2sm6ConfigEEEES7_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrI19tiledb_ctx_handle_tLN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS0_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN6tiledb6common10tiledb_newINS_2sm3VFS14ReadAheadCacheEJRmEEEPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEDpOT0_
   fun:_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
   fun:_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_
   fun:_ZNSt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNS1_2sm6ConfigEEEES7_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrI19tiledb_ctx_handle_tLN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS0_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10tiledb_newINS_2sm3VFS14ReadAheadCacheEJRmEEEPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEDpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNS1_2sm6ConfigEEEES7_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrI19tiledb_ctx_handle_tLN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS0_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN6tiledb6common10tiledb_newINS_2sm3VFS14ReadAheadCacheEJRmEEEPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEDpOT0_
   fun:_ZN6tiledb2sm3VFSC1EPNS0_5stats5StatsEPNS_6common10ThreadPoolES7_RKNS0_6ConfigE
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
   fun:_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_
   fun:_ZNSt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNS1_2sm6ConfigEEEES7_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrI19tiledb_ctx_handle_tLN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS0_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x694</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>157 bytes in 5 blocks are possibly lost in loss record 675 of 1,007</text>
    <leakedbytes>157</leakedbytes>
    <leakedblocks>5</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x6E68E6E</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E6922C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator=(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5FA0ED0</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>azure::storage_lite::storage_url::set_domain(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/build/externals/src/ep_azuresdk/include</dir>
      <file>storage_url.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x5FA071C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>azure::storage_lite::storage_account::storage_account(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/build/externals/src/ep_azuresdk/src</dir>
      <file>storage_account.cpp</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x52AAB74</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;azure::storage_lite::storage_account&gt;::construct&lt;azure::storage_lite::storage_account, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(azure::storage_lite::storage_account*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x52AA375</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::enable_if&lt;std::__and_&lt;std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::__construct_helper&lt;azure::storage_lite::storage_account, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::value, void&gt;::type std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::_S_construct&lt;azure::storage_lite::storage_account, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, azure::storage_lite::storage_account*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>251</line>
    </frame>
    <frame>
      <ip>0x52A95B3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>decltype (_S_construct({parm#1}, {parm#2}, (forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;)({parm#3}), (forward&lt;std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;&gt;)({parm#3}), (forward&lt;bool&amp;&gt;)({parm#3}), (forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;)({parm#3}))) std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::construct&lt;azure::storage_lite::storage_account, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, azure::storage_lite::storage_account*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>364</line>
    </frame>
    <frame>
      <ip>0x52A8038</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::storage_account, tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>519</line>
    </frame>
    <frame>
      <ip>0x52A6357</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;azure::storage_lite::storage_account, tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(azure::storage_lite::storage_account*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>650</line>
    </frame>
    <frame>
      <ip>0x52A4A7F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;azure::storage_lite::storage_account, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x52A22E8</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::storage_account&gt;::shared_ptr&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite11storage_url10set_domainERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite15storage_accountC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10shared_ptrINS0_18storage_credentialEEbS9_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite15storage_accountEE9constructIS3_JRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS2_18storage_credentialEERbSC_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorIN5azure12storage_lite15storage_accountENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS5_JRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS4_18storage_credentialEERbSI_EEENSt9enable_ifIXsrSt6__and_IJNSA_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS9_PSR_DpOSS_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorIN5azure12storage_lite15storage_accountENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS5_JRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS4_18storage_credentialEERbSI_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS9_PT_DpOSO_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS1_18storage_credentialEERbSK_EEES9_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS5_18storage_credentialEERbSK_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite15storage_accountELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS1_18storage_credentialEERbSK_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite15storage_accountEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS_INS1_18storage_credentialEERbSI_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_
   fun:_ZN5azure12storage_lite11storage_url10set_domainERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN5azure12storage_lite15storage_accountC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10shared_ptrINS0_18storage_credentialEEbS9_
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite15storage_accountEE9constructIS3_JRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS2_18storage_credentialEERbSC_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorIN5azure12storage_lite15storage_accountENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS5_JRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS4_18storage_credentialEERbSI_EEENSt9enable_ifIXsrSt6__and_IJNSA_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS9_PSR_DpOSS_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorIN5azure12storage_lite15storage_accountENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS5_JRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS4_18storage_credentialEERbSI_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS9_PT_DpOSO_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS1_18storage_credentialEERbSK_EEES9_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS5_18storage_credentialEERbSK_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite15storage_accountELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS1_18storage_credentialEERbSK_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite15storage_accountEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS_INS1_18storage_credentialEERbSI_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite11storage_url10set_domainERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite15storage_accountC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10shared_ptrINS0_18storage_credentialEEbS9_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite15storage_accountEE9constructIS3_JRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS2_18storage_credentialEERbSC_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorIN5azure12storage_lite15storage_accountENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS5_JRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS4_18storage_credentialEERbSI_EEENSt9enable_ifIXsrSt6__and_IJNSA_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS9_PSR_DpOSS_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorIN5azure12storage_lite15storage_accountENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS5_JRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS4_18storage_credentialEERbSI_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS9_PT_DpOSO_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS1_18storage_credentialEERbSK_EEES9_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS5_18storage_credentialEERbSK_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite15storage_accountELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS1_18storage_credentialEERbSK_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite15storage_accountEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS_INS1_18storage_credentialEERbSI_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_
   fun:_ZN5azure12storage_lite11storage_url10set_domainERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN5azure12storage_lite15storage_accountC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10shared_ptrINS0_18storage_credentialEEbS9_
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite15storage_accountEE9constructIS3_JRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS2_18storage_credentialEERbSC_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorIN5azure12storage_lite15storage_accountENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS5_JRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS4_18storage_credentialEERbSI_EEENSt9enable_ifIXsrSt6__and_IJNSA_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS9_PSR_DpOSS_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorIN5azure12storage_lite15storage_accountENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS5_JRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS4_18storage_credentialEERbSI_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS9_PT_DpOSO_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEC1IJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS1_18storage_credentialEERbSK_EEES9_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS5_18storage_credentialEERbSK_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite15storage_accountELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS1_18storage_credentialEERbSK_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite15storage_accountEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS_INS1_18storage_credentialEERbSI_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x6a5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>208 bytes in 2 blocks are possibly lost in loss record 692 of 1,007</text>
    <leakedbytes>208</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x14010B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/examples/cpp_api/vcfdebug_cpp</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x13FE7A</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/examples/cpp_api/vcfdebug_cpp</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate(std::allocator&lt;std::__detail::_Hash_node_base*&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x5B60A74</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_buckets(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>hashtable_policy.h</file>
      <line>1927</line>
    </frame>
    <frame>
      <ip>0x5B604C6</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>hashtable.h</file>
      <line>440</line>
    </frame>
    <frame>
      <ip>0x5B5FA08</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux(unsigned long, std::integral_constant&lt;bool, true&gt;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>hashtable.h</file>
      <line>2382</line>
    </frame>
    <frame>
      <ip>0x5B5F075</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash(unsigned long, unsigned long const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>hashtable.h</file>
      <line>2361</line>
    </frame>
    <frame>
      <ip>0x5B5E2B3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>hashtable.h</file>
      <line>2021</line>
    </frame>
    <frame>
      <ip>0x5B5D5CE</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>hashtable_policy.h</file>
      <line>714</line>
    </frame>
    <frame>
      <ip>0x5B5CBE8</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>unordered_map.h</file>
      <line>980</line>
    </frame>
    <frame>
      <ip>0x5C18A01</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::StorageManagerCanonical::set_tag(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>storage_manager.cc</file>
      <line>1611</line>
    </frame>
    <frame>
      <ip>0x5C1C22C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::StorageManagerCanonical::set_default_tags()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>storage_manager.cc</file>
      <line>2011</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m</fun> </sframe>
    <sframe> <fun>_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE19_M_allocate_bucketsEm</fun> </sframe>
    <sframe> <fun>_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm</fun> </sframe>
    <sframe> <fun>_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE</fun> </sframe>
    <sframe> <fun>_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmRKm</fun> </sframe>
    <sframe> <fun>_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm</fun> </sframe>
    <sframe> <fun>_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_S6_ESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS8_</fun> </sframe>
    <sframe> <fun>_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S5_EEEixERSB_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical7set_tagERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical16set_default_tagsEv</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m
   fun:_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE19_M_allocate_bucketsEm
   fun:_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm
   fun:_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE
   fun:_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmRKm
   fun:_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm
   fun:_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_S6_ESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS8_
   fun:_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S5_EEEixERSB_
   fun:_ZN6tiledb2sm23StorageManagerCanonical7set_tagERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_
   fun:_ZN6tiledb2sm23StorageManagerCanonical16set_default_tagsEv
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m</fun> </sframe>
    <sframe> <fun>_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE19_M_allocate_bucketsEm</fun> </sframe>
    <sframe> <fun>_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm</fun> </sframe>
    <sframe> <fun>_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE</fun> </sframe>
    <sframe> <fun>_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmRKm</fun> </sframe>
    <sframe> <fun>_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm</fun> </sframe>
    <sframe> <fun>_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_S6_ESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS8_</fun> </sframe>
    <sframe> <fun>_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S5_EEEixERSB_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical7set_tagERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical16set_default_tagsEv</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m
   fun:_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE19_M_allocate_bucketsEm
   fun:_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_allocate_bucketsEm
   fun:_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE
   fun:_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_rehashEmRKm
   fun:_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSA_10_Hash_nodeIS8_Lb1EEEm
   fun:_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_S6_ESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS8_
   fun:_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S5_EEEixERSB_
   fun:_ZN6tiledb2sm23StorageManagerCanonical7set_tagERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_
   fun:_ZN6tiledb2sm23StorageManagerCanonical16set_default_tagsEv
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x6b6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>224 bytes in 1 blocks are possibly lost in loss record 709 of 1,007</text>
    <leakedbytes>224</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x60BC4FF</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;spdlog::logger, std::allocator&lt;spdlog::logger&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x60B84D8</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;spdlog::logger, std::allocator&lt;spdlog::logger&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;spdlog::logger, std::allocator&lt;spdlog::logger&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x60B3DD7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;spdlog::logger, std::allocator&lt;spdlog::logger&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;spdlog::logger, std::allocator&lt;spdlog::logger&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;spdlog::logger, std::allocator&lt;spdlog::logger&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>allocated_ptr.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x60B30B3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;spdlog::logger, std::allocator&lt;spdlog::logger&gt;, spdlog::logger&amp;&gt;(spdlog::logger*&amp;, std::_Sp_alloc_shared_tag&lt;std::allocator&lt;spdlog::logger&gt; &gt;, spdlog::logger&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>648</line>
    </frame>
    <frame>
      <ip>0x60AD64F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;spdlog::logger, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;spdlog::logger&gt;, spdlog::logger&amp;&gt;(std::_Sp_alloc_shared_tag&lt;std::allocator&lt;spdlog::logger&gt; &gt;, spdlog::logger&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x60A6140</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;spdlog::logger&gt;::shared_ptr&lt;std::allocator&lt;spdlog::logger&gt;, spdlog::logger&amp;&gt;(std::_Sp_alloc_shared_tag&lt;std::allocator&lt;spdlog::logger&gt; &gt;, spdlog::logger&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x609A287</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;spdlog::logger&gt; std::allocate_shared&lt;spdlog::logger, std::allocator&lt;spdlog::logger&gt;, spdlog::logger&amp;&gt;(std::allocator&lt;spdlog::logger&gt; const&amp;, spdlog::logger&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x608FAAF</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;spdlog::logger&gt; std::make_shared&lt;spdlog::logger, spdlog::logger&amp;&gt;(spdlog::logger&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>879</line>
    </frame>
    <frame>
      <ip>0x60853FA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>spdlog::logger::clone(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/build/externals/src/ep_spdlog/include/spdlog</dir>
      <file>logger-inl.h</file>
      <line>160</line>
    </frame>
    <frame>
      <ip>0x5089BE6</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Logger::clone(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/common</dir>
      <file>logger.cc</file>
      <line>262</line>
    </frame>
    <frame>
      <ip>0x5B4D666</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::RestClient::init(tiledb::sm::stats::Stats*, tiledb::sm::Config const*, tiledb::common::ThreadPool*, std::shared_ptr&lt;tiledb::common::Logger&gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/rest</dir>
      <file>rest_client.cc</file>
      <line>97</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6spdlog6loggerESaIS3_ELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6spdlog6loggerESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS7_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN6spdlog6loggerESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERS9_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6spdlog6loggerESaIS5_EJRS5_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN6spdlog6loggerELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS1_EJRS1_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN6spdlog6loggerEEC1ISaIS1_EJRS1_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN6spdlog6loggerESaIS1_EJRS1_EESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt11make_sharedIN6spdlog6loggerEJRS1_EESt10shared_ptrIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6spdlog6logger5cloneENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common6Logger5cloneERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm10RestClient4initEPNS0_5stats5StatsEPKNS0_6ConfigEPNS_6common10ThreadPoolERKSt10shared_ptrINS8_6LoggerEE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6spdlog6loggerESaIS3_ELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6spdlog6loggerESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS7_m
   fun:_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN6spdlog6loggerESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERS9_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6spdlog6loggerESaIS5_EJRS5_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN6spdlog6loggerELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS1_EJRS1_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN6spdlog6loggerEEC1ISaIS1_EJRS1_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN6spdlog6loggerESaIS1_EJRS1_EESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZSt11make_sharedIN6spdlog6loggerEJRS1_EESt10shared_ptrIT_EDpOT0_
   fun:_ZN6spdlog6logger5cloneENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb6common6Logger5cloneERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm
   fun:_ZN6tiledb2sm10RestClient4initEPNS0_5stats5StatsEPKNS0_6ConfigEPNS_6common10ThreadPoolERKSt10shared_ptrINS8_6LoggerEE
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6spdlog6loggerESaIS3_ELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6spdlog6loggerESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS7_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN6spdlog6loggerESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERS9_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6spdlog6loggerESaIS5_EJRS5_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN6spdlog6loggerELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS1_EJRS1_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN6spdlog6loggerEEC1ISaIS1_EJRS1_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN6spdlog6loggerESaIS1_EJRS1_EESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt11make_sharedIN6spdlog6loggerEJRS1_EESt10shared_ptrIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6spdlog6logger5cloneENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common6Logger5cloneERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm10RestClient4initEPNS0_5stats5StatsEPKNS0_6ConfigEPNS_6common10ThreadPoolERKSt10shared_ptrINS8_6LoggerEE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6spdlog6loggerESaIS3_ELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6spdlog6loggerESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS7_m
   fun:_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN6spdlog6loggerESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERS9_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6spdlog6loggerESaIS5_EJRS5_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN6spdlog6loggerELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS1_EJRS1_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN6spdlog6loggerEEC1ISaIS1_EJRS1_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN6spdlog6loggerESaIS1_EJRS1_EESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZSt11make_sharedIN6spdlog6loggerEJRS1_EESt10shared_ptrIT_EDpOT0_
   fun:_ZN6spdlog6logger5cloneENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb6common6Logger5cloneERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm
   fun:_ZN6tiledb2sm10RestClient4initEPNS0_5stats5StatsEPKNS0_6ConfigEPNS_6common10ThreadPoolERKSt10shared_ptrINS8_6LoggerEE
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x6c2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>240 bytes in 3 blocks are possibly lost in loss record 721 of 1,007</text>
    <leakedbytes>240</leakedbytes>
    <leakedblocks>3</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5B6036B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x5B5F92A</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::allocate(std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x5B5EF5D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>hashtable_policy.h</file>
      <line>1873</line>
    </frame>
    <frame>
      <ip>0x5B5E1CA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;*, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>hashtable.h</file>
      <line>304</line>
    </frame>
    <frame>
      <ip>0x5B5D5B0</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>hashtable_policy.h</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x5B5CBE8</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>unordered_map.h</file>
      <line>980</line>
    </frame>
    <frame>
      <ip>0x5B4DD5F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::RestClient::set_header(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/rest</dir>
      <file>rest_client.cc</file>
      <line>130</line>
    </frame>
    <frame>
      <ip>0x5C18A4C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::StorageManagerCanonical::set_tag(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>storage_manager.cc</file>
      <line>1615</line>
    </frame>
    <frame>
      <ip>0x5C1C22C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::StorageManagerCanonical::set_default_tags()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>storage_manager.cc</file>
      <line>2011</line>
    </frame>
    <frame>
      <ip>0x5C0A9FD</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::StorageManagerCanonical::init()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>storage_manager.cc</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x5C0A867</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::StorageManagerCanonical::StorageManagerCanonical(tiledb::sm::ContextResources&amp;, std::shared_ptr&lt;tiledb::common::Logger&gt;, tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>storage_manager.cc</file>
      <line>102</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_ELb1EEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEPSB_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEEPNSA_16_Hashtable_allocISaINSA_10_Hash_nodeIS8_Lb1EEEEEEDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_S6_ESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS8_</fun> </sframe>
    <sframe> <fun>_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S5_EEEixERSB_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm10RestClient10set_headerERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical7set_tagERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical16set_default_tagsEv</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical4initEv</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonicalC1ERNS0_16ContextResourcesESt10shared_ptrINS_6common6LoggerEERKNS0_6ConfigE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_ELb1EEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE8allocateERSC_m
   fun:_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEPSB_DpOT_
   fun:_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEEPNSA_16_Hashtable_allocISaINSA_10_Hash_nodeIS8_Lb1EEEEEEDpOT_
   fun:_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_S6_ESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS8_
   fun:_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S5_EEEixERSB_
   fun:_ZN6tiledb2sm10RestClient10set_headerERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_
   fun:_ZN6tiledb2sm23StorageManagerCanonical7set_tagERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_
   fun:_ZN6tiledb2sm23StorageManagerCanonical16set_default_tagsEv
   fun:_ZN6tiledb2sm23StorageManagerCanonical4initEv
   fun:_ZN6tiledb2sm23StorageManagerCanonicalC1ERNS0_16ContextResourcesESt10shared_ptrINS_6common6LoggerEERKNS0_6ConfigE
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_ELb1EEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEPSB_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEEPNSA_16_Hashtable_allocISaINSA_10_Hash_nodeIS8_Lb1EEEEEEDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_S6_ESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS8_</fun> </sframe>
    <sframe> <fun>_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S5_EEEixERSB_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm10RestClient10set_headerERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical7set_tagERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical16set_default_tagsEv</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical4initEv</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonicalC1ERNS0_16ContextResourcesESt10shared_ptrINS_6common6LoggerEERKNS0_6ConfigE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_ELb1EEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE8allocateERSC_m
   fun:_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ELb1EEEEE16_M_allocate_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEPSB_DpOT_
   fun:_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE12_Scoped_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEEPNSA_16_Hashtable_allocISaINSA_10_Hash_nodeIS8_Lb1EEEEEEDpOT_
   fun:_ZNSt8__detail9_Map_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS6_S6_ESaIS9_ENS_10_Select1stESt8equal_toIS6_ESt4hashIS6_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb1ELb0ELb1EEELb1EEixERS8_
   fun:_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S5_EEEixERSB_
   fun:_ZN6tiledb2sm10RestClient10set_headerERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_
   fun:_ZN6tiledb2sm23StorageManagerCanonical7set_tagERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_
   fun:_ZN6tiledb2sm23StorageManagerCanonical16set_default_tagsEv
   fun:_ZN6tiledb2sm23StorageManagerCanonical4initEv
   fun:_ZN6tiledb2sm23StorageManagerCanonicalC1ERNS0_16ContextResourcesESt10shared_ptrINS_6common6LoggerEERKNS0_6ConfigE
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x6c4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>248 bytes in 1 blocks are possibly lost in loss record 723 of 1,007</text>
    <leakedbytes>248</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5C09F65</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::RestClient, tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x5C09DF6</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::RestClient, tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::RestClient, tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x5C09C17</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::RestClient, tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;::allocate(unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>governed_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x5C09937</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::RestClient, tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::allocate(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::RestClient, tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>318</line>
    </frame>
    <frame>
      <ip>0x5C0952B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__allocated_ptr&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::RestClient, tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt; std::__allocate_guarded&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::RestClient, tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb::sm::RestClient, tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>allocated_ptr.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x5C09111</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;tiledb::sm::RestClient, tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&gt;(tiledb::sm::RestClient*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>648</line>
    </frame>
    <frame>
      <ip>0x5C08E85</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;tiledb::sm::RestClient, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x5C08DBC</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::sm::RestClient&gt;::shared_ptr&lt;tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x5C08CED</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::sm::RestClient&gt; std::allocate_shared&lt;tiledb::sm::RestClient, tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&gt;(tiledb::common::GovernedAllocator&lt;tiledb::sm::RestClient, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x5C08BBB</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::sm::RestClient&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;tiledb::sm::RestClient&gt;::make_shared_notrace&lt;&gt;()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>198</line>
    </frame>
    <frame>
      <ip>0x5C08A8A</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb::sm::RestClient&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;tiledb::sm::RestClient&gt;::make_shared&lt;81&gt;(char const (&amp;) [81])</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>238</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6tiledb2sm10RestClientENS2_6common17GovernedAllocatorIS4_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6tiledb2sm10RestClientENS1_6common17GovernedAllocatorIS3_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSD_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS_2sm10RestClientENS1_IS4_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_2sm10RestClientENS2_IS5_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_EEE8allocateERSD_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_2sm10RestClientENS2_IS5_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_EEESt15__allocated_ptrIT_ERSF_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb2sm10RestClientENS4_6common17GovernedAllocatorIS6_NS7_12_GLOBAL__N_121TiledbTracedAllocatorENS7_8GovernorEEEJEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN6tiledb2sm10RestClientELN9__gnu_cxx12_Lock_policyE2EEC1INS0_6common17GovernedAllocatorIS2_NS7_12_GLOBAL__N_121TiledbTracedAllocatorENS7_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN6tiledb2sm10RestClientEEC1INS0_6common17GovernedAllocatorIS2_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN6tiledb2sm10RestClientENS0_6common17GovernedAllocatorIS2_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEEJEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS_2sm10RestClientEE19make_shared_notraceIJEEESt10shared_ptrIS4_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS_2sm10RestClientEE11make_sharedILi81EJEEESt10shared_ptrIS4_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6tiledb2sm10RestClientENS2_6common17GovernedAllocatorIS4_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6tiledb2sm10RestClientENS1_6common17GovernedAllocatorIS3_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSD_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS_2sm10RestClientENS1_IS4_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_2sm10RestClientENS2_IS5_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_EEE8allocateERSD_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_2sm10RestClientENS2_IS5_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_EEESt15__allocated_ptrIT_ERSF_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb2sm10RestClientENS4_6common17GovernedAllocatorIS6_NS7_12_GLOBAL__N_121TiledbTracedAllocatorENS7_8GovernorEEEJEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN6tiledb2sm10RestClientELN9__gnu_cxx12_Lock_policyE2EEC1INS0_6common17GovernedAllocatorIS2_NS7_12_GLOBAL__N_121TiledbTracedAllocatorENS7_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN6tiledb2sm10RestClientEEC1INS0_6common17GovernedAllocatorIS2_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN6tiledb2sm10RestClientENS0_6common17GovernedAllocatorIS2_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEEJEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS_2sm10RestClientEE19make_shared_notraceIJEEESt10shared_ptrIS4_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS_2sm10RestClientEE11make_sharedILi81EJEEESt10shared_ptrIS4_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6tiledb2sm10RestClientENS2_6common17GovernedAllocatorIS4_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6tiledb2sm10RestClientENS1_6common17GovernedAllocatorIS3_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSD_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS_2sm10RestClientENS1_IS4_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_2sm10RestClientENS2_IS5_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_EEE8allocateERSD_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_2sm10RestClientENS2_IS5_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_EEESt15__allocated_ptrIT_ERSF_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb2sm10RestClientENS4_6common17GovernedAllocatorIS6_NS7_12_GLOBAL__N_121TiledbTracedAllocatorENS7_8GovernorEEEJEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN6tiledb2sm10RestClientELN9__gnu_cxx12_Lock_policyE2EEC1INS0_6common17GovernedAllocatorIS2_NS7_12_GLOBAL__N_121TiledbTracedAllocatorENS7_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN6tiledb2sm10RestClientEEC1INS0_6common17GovernedAllocatorIS2_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN6tiledb2sm10RestClientENS0_6common17GovernedAllocatorIS2_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEEJEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS_2sm10RestClientEE19make_shared_notraceIJEEESt10shared_ptrIS4_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS_2sm10RestClientEE11make_sharedILi81EJEEESt10shared_ptrIS4_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6tiledb2sm10RestClientENS2_6common17GovernedAllocatorIS4_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN6tiledb2sm10RestClientENS1_6common17GovernedAllocatorIS3_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSD_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS_2sm10RestClientENS1_IS4_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_2sm10RestClientENS2_IS5_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_EEE8allocateERSD_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceINS0_2sm10RestClientENS2_IS5_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_EEESt15__allocated_ptrIT_ERSF_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb2sm10RestClientENS4_6common17GovernedAllocatorIS6_NS7_12_GLOBAL__N_121TiledbTracedAllocatorENS7_8GovernorEEEJEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN6tiledb2sm10RestClientELN9__gnu_cxx12_Lock_policyE2EEC1INS0_6common17GovernedAllocatorIS2_NS7_12_GLOBAL__N_121TiledbTracedAllocatorENS7_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN6tiledb2sm10RestClientEEC1INS0_6common17GovernedAllocatorIS2_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEEJEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN6tiledb2sm10RestClientENS0_6common17GovernedAllocatorIS2_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEEJEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS_2sm10RestClientEE19make_shared_notraceIJEEESt10shared_ptrIS4_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsINS_2sm10RestClientEE11make_sharedILi81EJEEESt10shared_ptrIS4_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x6cc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>272 bytes in 1 blocks are possibly lost in loss record 731 of 1,007</text>
    <leakedbytes>272</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x52A7701</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x52A5C00</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x52A450D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>allocated_ptr.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x52A1E8B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(azure::storage_lite::CurlEasyClient*&amp;, std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>648</line>
    </frame>
    <frame>
      <ip>0x529F4C1</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;azure::storage_lite::CurlEasyClient, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x529C68C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::CurlEasyClient&gt;::shared_ptr&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x5298FA7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::CurlEasyClient&gt; std::allocate_shared&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; const&amp;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x5296137</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::CurlEasyClient&gt; std::make_shared&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>879</line>
    </frame>
    <frame>
      <ip>0x5294776</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>azure::storage_lite::blob_client::blob_client(std::shared_ptr&lt;azure::storage_lite::storage_account&gt;, int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/build/externals/install/azurecpplite/include/blob</dir>
      <file>blob_client.h</file>
      <line>53</line>
    </frame>
    <frame>
      <ip>0x52AACA1</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;azure::storage_lite::blob_client&gt;::construct&lt;azure::storage_lite::blob_client, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(azure::storage_lite::blob_client*, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x52AA503</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::enable_if&lt;std::__and_&lt;std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::__construct_helper&lt;azure::storage_lite::blob_client, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::type&gt;::value, void&gt;::type std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::_S_construct&lt;azure::storage_lite::blob_client, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(tiledb::common::GovernedAllocator&lt;azure::storage_lite::blob_client, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, azure::storage_lite::blob_client*, std::shared_ptr&lt;azure::storage_lite::storage_account&gt;&amp;, unsigned long&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>251</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite14CurlEasyClientEEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite14CurlEasyClientESaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt11make_sharedIN5azure12storage_lite14CurlEasyClientEJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite11blob_clientC1ESt10shared_ptrINS0_15storage_accountEEiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite11blob_clientEE9constructIS3_JRSt10shared_ptrINS2_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorIN5azure12storage_lite11blob_clientENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS5_JRSt10shared_ptrINS4_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt9enable_ifIXsrSt6__and_IJNSA_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS9_PSR_DpOSS_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m
   fun:_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite14CurlEasyClientEEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite14CurlEasyClientESaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZSt11make_sharedIN5azure12storage_lite14CurlEasyClientEJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_EDpOT0_
   fun:_ZN5azure12storage_lite11blob_clientC1ESt10shared_ptrINS0_15storage_accountEEiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite11blob_clientEE9constructIS3_JRSt10shared_ptrINS2_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorIN5azure12storage_lite11blob_clientENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS5_JRSt10shared_ptrINS4_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt9enable_ifIXsrSt6__and_IJNSA_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS9_PSR_DpOSS_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite14CurlEasyClientEEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite14CurlEasyClientESaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt11make_sharedIN5azure12storage_lite14CurlEasyClientEJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite11blob_clientC1ESt10shared_ptrINS0_15storage_accountEEiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite11blob_clientEE9constructIS3_JRSt10shared_ptrINS2_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorIN5azure12storage_lite11blob_clientENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS5_JRSt10shared_ptrINS4_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt9enable_ifIXsrSt6__and_IJNSA_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS9_PSR_DpOSS_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m
   fun:_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite14CurlEasyClientEEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite14CurlEasyClientESaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZSt11make_sharedIN5azure12storage_lite14CurlEasyClientEJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_EDpOT0_
   fun:_ZN5azure12storage_lite11blob_clientC1ESt10shared_ptrINS0_15storage_accountEEiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite11blob_clientEE9constructIS3_JRSt10shared_ptrINS2_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorIN5azure12storage_lite11blob_clientENS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS5_JRSt10shared_ptrINS4_15storage_accountEEmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt9enable_ifIXsrSt6__and_IJNSA_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS9_PSR_DpOSS_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x6d3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>304 bytes in 1 blocks are possibly lost in loss record 738 of 1,007</text>
    <leakedbytes>304</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x484DA83</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x40147D9</ip>
      <obj>/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2</obj>
      <fn>calloc</fn>
      <dir>./elf/../include</dir>
      <file>rtld-malloc.h</file>
      <line>44</line>
    </frame>
    <frame>
      <ip>0x40147D9</ip>
      <obj>/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2</obj>
      <fn>allocate_dtv</fn>
      <dir>./elf/../elf</dir>
      <file>dl-tls.c</file>
      <line>375</line>
    </frame>
    <frame>
      <ip>0x40147D9</ip>
      <obj>/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2</obj>
      <fn>_dl_allocate_tls</fn>
      <dir>./elf/../elf</dir>
      <file>dl-tls.c</file>
      <line>634</line>
    </frame>
    <frame>
      <ip>0x6FFC834</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libc.so.6</obj>
      <fn>allocate_stack</fn>
      <dir>./nptl/./nptl</dir>
      <file>allocatestack.c</file>
      <line>430</line>
    </frame>
    <frame>
      <ip>0x6FFC834</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libc.so.6</obj>
      <fn>pthread_create@@GLIBC_2.34</fn>
      <dir>./nptl/./nptl</dir>
      <file>pthread_create.c</file>
      <line>647</line>
    </frame>
    <frame>
      <ip>0x6DF9388</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30</obj>
      <fn>std::thread::_M_start_thread(std::unique_ptr&lt;std::thread::_State, std::default_delete&lt;std::thread::_State&gt; &gt;, void (*)())</fn>
    </frame>
    <frame>
      <ip>0x53D9DA9</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::thread::thread&lt;tiledb::sm::global_state::Watchdog::initialize()::{lambda()#1}, , void&gt;(tiledb::sm::global_state::Watchdog::initialize()::{lambda()#1}&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>std_thread.h</file>
      <line>143</line>
    </frame>
    <frame>
      <ip>0x53D99EC</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::global_state::Watchdog::initialize()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/global_state</dir>
      <file>watchdog.cc</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x53D7406</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::global_state::GlobalState::init(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/global_state</dir>
      <file>global_state.cc</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x5C0A9A2</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::StorageManagerCanonical::init()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>storage_manager.cc</file>
      <line>107</line>
    </frame>
    <frame>
      <ip>0x5C0A867</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::StorageManagerCanonical::StorageManagerCanonical(tiledb::sm::ContextResources&amp;, std::shared_ptr&lt;tiledb::common::Logger&gt;, tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>storage_manager.cc</file>
      <line>102</line>
    </frame>
    <frame>
      <ip>0x5C05691</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Context::Context(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context.cc</file>
      <line>66</line>
    </frame>
    <frame>
      <ip>0x5D42C8F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb_ctx_handle_t::tiledb_ctx_handle_t(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/api/c_api/context</dir>
      <file>context_api_internal.h</file>
      <line>55</line>
    </frame>
    <frame>
      <ip>0x5D47E72</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;tiledb_ctx_handle_t&gt;::construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>calloc</fun> </sframe>
    <sframe> <fun>calloc</fun> </sframe>
    <sframe> <fun>allocate_dtv</fun> </sframe>
    <sframe> <fun>_dl_allocate_tls</fun> </sframe>
    <sframe> <fun>allocate_stack</fun> </sframe>
    <sframe> <fun>pthread_create@@GLIBC_2.34</fun> </sframe>
    <sframe> <fun>_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE</fun> </sframe>
    <sframe> <fun>_ZNSt6threadC1IZN6tiledb2sm12global_state8Watchdog10initializeEvEUlvE_JEvEEOT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm12global_state8Watchdog10initializeEv</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm12global_state11GlobalState4initERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical4initEv</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonicalC1ERNS0_16ContextResourcesESt10shared_ptrINS_6common6LoggerEERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:calloc
   fun:calloc
   fun:allocate_dtv
   fun:_dl_allocate_tls
   fun:allocate_stack
   fun:pthread_create@@GLIBC_2.34
   fun:_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE
   fun:_ZNSt6threadC1IZN6tiledb2sm12global_state8Watchdog10initializeEvEUlvE_JEvEEOT_DpOT0_
   fun:_ZN6tiledb2sm12global_state8Watchdog10initializeEv
   fun:_ZN6tiledb2sm12global_state11GlobalState4initERKNS0_6ConfigE
   fun:_ZN6tiledb2sm23StorageManagerCanonical4initEv
   fun:_ZN6tiledb2sm23StorageManagerCanonicalC1ERNS0_16ContextResourcesESt10shared_ptrINS_6common6LoggerEERKNS0_6ConfigE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
   fun:_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>calloc</fun> </sframe>
    <sframe> <fun>calloc</fun> </sframe>
    <sframe> <fun>allocate_dtv</fun> </sframe>
    <sframe> <fun>_dl_allocate_tls</fun> </sframe>
    <sframe> <fun>allocate_stack</fun> </sframe>
    <sframe> <fun>pthread_create@@GLIBC_2.34</fun> </sframe>
    <sframe> <fun>_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE</fun> </sframe>
    <sframe> <fun>_ZNSt6threadC1IZN6tiledb2sm12global_state8Watchdog10initializeEvEUlvE_JEvEEOT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm12global_state8Watchdog10initializeEv</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm12global_state11GlobalState4initERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonical4initEv</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm23StorageManagerCanonicalC1ERNS0_16ContextResourcesESt10shared_ptrINS_6common6LoggerEERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:calloc
   fun:calloc
   fun:allocate_dtv
   fun:_dl_allocate_tls
   fun:allocate_stack
   fun:pthread_create@@GLIBC_2.34
   fun:_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE
   fun:_ZNSt6threadC1IZN6tiledb2sm12global_state8Watchdog10initializeEvEUlvE_JEvEEOT_DpOT0_
   fun:_ZN6tiledb2sm12global_state8Watchdog10initializeEv
   fun:_ZN6tiledb2sm12global_state11GlobalState4initERKNS0_6ConfigE
   fun:_ZN6tiledb2sm23StorageManagerCanonical4initEv
   fun:_ZN6tiledb2sm23StorageManagerCanonicalC1ERNS0_16ContextResourcesESt10shared_ptrINS_6common6LoggerEERKNS0_6ConfigE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
   fun:_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x711</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>320 bytes in 2 blocks are possibly lost in loss record 800 of 1,007</text>
    <leakedbytes>320</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5D2D633</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::thread&gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x5D2CB0F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::thread&gt; &gt;::allocate(std::allocator&lt;std::thread&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x5D2BB79</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Vector_base&lt;std::thread, std::allocator&lt;std::thread&gt; &gt;::_M_allocate(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_vector.h</file>
      <line>346</line>
    </frame>
    <frame>
      <ip>0x5D2AE39</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::vector&lt;std::thread, std::allocator&lt;std::thread&gt; &gt;::reserve(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>vector.tcc</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x5D293B0</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::ThreadPool::ThreadPool(unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/common/thread_pool</dir>
      <file>thread_pool.cc</file>
      <line>64</line>
    </frame>
    <frame>
      <ip>0x5C0843B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::ContextResources::ContextResources(tiledb::sm::Config const&amp;, std::shared_ptr&lt;tiledb::common::Logger&gt;, unsigned long, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context_resources.cc</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x5C0561B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Context::Context(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context.cc</file>
      <line>57</line>
    </frame>
    <frame>
      <ip>0x5D42C8F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb_ctx_handle_t::tiledb_ctx_handle_t(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/api/c_api/context</dir>
      <file>context_api_internal.h</file>
      <line>55</line>
    </frame>
    <frame>
      <ip>0x5D47E72</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;tiledb_ctx_handle_t&gt;::construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x5D47D7F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::enable_if&lt;std::__and_&lt;std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::__construct_helper&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;::type&gt;::value, void&gt;::type std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::_S_construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>251</line>
    </frame>
    <frame>
      <ip>0x5D47BE7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>decltype (_S_construct({parm#1}, {parm#2}, (forward&lt;tiledb::sm::Config&amp;&gt;)({parm#3}))) std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>364</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt6threadE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt6threadEE8allocateERS1_m</fun> </sframe>
    <sframe> <fun>_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt6vectorISt6threadSaIS0_EE7reserveEm</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10ThreadPoolC1Em</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt6threadE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt6threadEE8allocateERS1_m
   fun:_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm
   fun:_ZNSt6vectorISt6threadSaIS0_EE7reserveEm
   fun:_ZN6tiledb6common10ThreadPoolC1Em
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
   fun:_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt6threadE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt6threadEE8allocateERS1_m</fun> </sframe>
    <sframe> <fun>_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt6vectorISt6threadSaIS0_EE7reserveEm</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10ThreadPoolC1Em</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt6threadE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt6threadEE8allocateERS1_m
   fun:_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm
   fun:_ZNSt6vectorISt6threadSaIS0_EE7reserveEm
   fun:_ZN6tiledb6common10ThreadPoolC1Em
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
   fun:_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x712</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>320 bytes in 20 blocks are possibly lost in loss record 801 of 1,007</text>
    <leakedbytes>320</leakedbytes>
    <leakedblocks>20</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x484DA83</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x6041DAA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>Curl_resolver_init</fn>
    </frame>
    <frame>
      <ip>0x6015978</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>Curl_open</fn>
    </frame>
    <frame>
      <ip>0x601368C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>curl_easy_init</fn>
    </frame>
    <frame>
      <ip>0x5293EDD</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>azure::storage_lite::CurlEasyClient::CurlEasyClient(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/build/externals/install/azurecpplite/include/http</dir>
      <file>libcurl_http_client.h</file>
      <line>287</line>
    </frame>
    <frame>
      <ip>0x52A7874</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;azure::storage_lite::CurlEasyClient&gt;::construct&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(azure::storage_lite::CurlEasyClient*, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x52A5D7E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;::construct&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;&amp;, azure::storage_lite::CurlEasyClient*, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>516</line>
    </frame>
    <frame>
      <ip>0x52A473E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>519</line>
    </frame>
    <frame>
      <ip>0x52A1EFE</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(azure::storage_lite::CurlEasyClient*&amp;, std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>650</line>
    </frame>
    <frame>
      <ip>0x529F4C1</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;azure::storage_lite::CurlEasyClient, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x529C68C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::CurlEasyClient&gt;::shared_ptr&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x5298FA7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::CurlEasyClient&gt; std::allocate_shared&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; const&amp;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>calloc</fun> </sframe>
    <sframe> <fun>Curl_resolver_init</fun> </sframe>
    <sframe> <fun>Curl_open</fun> </sframe>
    <sframe> <fun>curl_easy_init</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite14CurlEasyClientEEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite14CurlEasyClientESaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:calloc
   fun:Curl_resolver_init
   fun:Curl_open
   fun:curl_easy_init
   fun:_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite14CurlEasyClientEEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite14CurlEasyClientESaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_ERKT0_DpOT1_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>calloc</fun> </sframe>
    <sframe> <fun>Curl_resolver_init</fun> </sframe>
    <sframe> <fun>Curl_open</fun> </sframe>
    <sframe> <fun>curl_easy_init</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite14CurlEasyClientEEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite14CurlEasyClientESaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:calloc
   fun:Curl_resolver_init
   fun:Curl_open
   fun:curl_easy_init
   fun:_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite14CurlEasyClientEEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite14CurlEasyClientESaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_ERKT0_DpOT1_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x718</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>344 bytes in 16 blocks are possibly lost in loss record 807 of 1,007</text>
    <leakedbytes>344</leakedbytes>
    <leakedblocks>16</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x59EFA2D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x50B7ADA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_pair.h</file>
      <line>314</line>
    </frame>
    <frame>
      <ip>0x50B7B4C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x50B6BAA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>516</line>
    </frame>
    <frame>
      <ip>0x50B4FFF</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>595</line>
    </frame>
    <frame>
      <ip>0x50B508B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>612</line>
    </frame>
    <frame>
      <ip>0x50B50C4</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;) const</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>529</line>
    </frame>
    <frame>
      <ip>0x50B20F3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>645</line>
    </frame>
    <frame>
      <ip>0x50ADDB7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1849</line>
    </frame>
    <frame>
      <ip>0x50ADDF7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1856</line>
    </frame>
    <frame>
      <ip>0x50ADDF7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1856</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x72d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>512 bytes in 1 blocks are possibly lost in loss record 828 of 1,007</text>
    <leakedbytes>512</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x52A3D7F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;void*&gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x52A183C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;void*&gt; &gt;::allocate(std::allocator&lt;void*&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x529F007</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Deque_base&lt;void*, std::allocator&lt;void*&gt; &gt;::_M_allocate_node()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>561</line>
    </frame>
    <frame>
      <ip>0x529ED58</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Deque_base&lt;void*, std::allocator&lt;void*&gt; &gt;::_M_create_nodes(void***, void***)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>662</line>
    </frame>
    <frame>
      <ip>0x529BD59</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Deque_base&lt;void*, std::allocator&lt;void*&gt; &gt;::_M_initialize_map(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>636</line>
    </frame>
    <frame>
      <ip>0x52986A1</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Deque_base&lt;void*, std::allocator&lt;void*&gt; &gt;::_Deque_base()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>438</line>
    </frame>
    <frame>
      <ip>0x5295AD5</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::deque&lt;void*, std::allocator&lt;void*&gt; &gt;::deque()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>833</line>
    </frame>
    <frame>
      <ip>0x5295B48</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::queue&lt;void*, std::deque&lt;void*, std::allocator&lt;void*&gt; &gt; &gt;::queue&lt;std::deque&lt;void*, std::allocator&lt;void*&gt; &gt;, void&gt;()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_queue.h</file>
      <line>167</line>
    </frame>
    <frame>
      <ip>0x5293EA1</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>azure::storage_lite::CurlEasyClient::CurlEasyClient(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/build/externals/install/azurecpplite/include/http</dir>
      <file>libcurl_http_client.h</file>
      <line>283</line>
    </frame>
    <frame>
      <ip>0x52A7874</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;azure::storage_lite::CurlEasyClient&gt;::construct&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(azure::storage_lite::CurlEasyClient*, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x52A5D7E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;::construct&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;&amp;, azure::storage_lite::CurlEasyClient*, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>516</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIPvE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIPvEE8allocateERS1_m</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseIPvSaIS0_EE16_M_allocate_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseIPvSaIS0_EE15_M_create_nodesEPPS0_S4_</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseIPvSaIS0_EE17_M_initialize_mapEm</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseIPvSaIS0_EEC1Ev</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeIPvSaIS0_EEC1Ev</fun> </sframe>
    <sframe> <fun>_ZNSt5queueIPvSt5dequeIS0_SaIS0_EEEC1IS3_vEEv</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPvE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaIPvEE8allocateERS1_m
   fun:_ZNSt11_Deque_baseIPvSaIS0_EE16_M_allocate_nodeEv
   fun:_ZNSt11_Deque_baseIPvSaIS0_EE15_M_create_nodesEPPS0_S4_
   fun:_ZNSt11_Deque_baseIPvSaIS0_EE17_M_initialize_mapEm
   fun:_ZNSt11_Deque_baseIPvSaIS0_EEC1Ev
   fun:_ZNSt5dequeIPvSaIS0_EEC1Ev
   fun:_ZNSt5queueIPvSt5dequeIS0_SaIS0_EEEC1IS3_vEEv
   fun:_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIPvE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIPvEE8allocateERS1_m</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseIPvSaIS0_EE16_M_allocate_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseIPvSaIS0_EE15_M_create_nodesEPPS0_S4_</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseIPvSaIS0_EE17_M_initialize_mapEm</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseIPvSaIS0_EEC1Ev</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeIPvSaIS0_EEC1Ev</fun> </sframe>
    <sframe> <fun>_ZNSt5queueIPvSt5dequeIS0_SaIS0_EEEC1IS3_vEEv</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPvE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaIPvEE8allocateERS1_m
   fun:_ZNSt11_Deque_baseIPvSaIS0_EE16_M_allocate_nodeEv
   fun:_ZNSt11_Deque_baseIPvSaIS0_EE15_M_create_nodesEPPS0_S4_
   fun:_ZNSt11_Deque_baseIPvSaIS0_EE17_M_initialize_mapEm
   fun:_ZNSt11_Deque_baseIPvSaIS0_EEC1Ev
   fun:_ZNSt5dequeIPvSaIS0_EEC1Ev
   fun:_ZNSt5queueIPvSt5dequeIS0_SaIS0_EEEC1IS3_vEEv
   fun:_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x72e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>512 bytes in 1 blocks are possibly lost in loss record 829 of 1,007</text>
    <leakedbytes>512</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x50B5C69</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x50B3600</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x50AF6F3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Deque_base&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::_M_allocate_node()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>561</line>
    </frame>
    <frame>
      <ip>0x50AB2A7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::deque&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::_M_push_front_aux&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; const&amp;&gt;(std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>deque.tcc</file>
      <line>536</line>
    </frame>
    <frame>
      <ip>0x50A64B6</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::deque&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::push_front(std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>1468</line>
    </frame>
    <frame>
      <ip>0x50A1195</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::ProducerConsumerQueue&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::deque&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt; &gt;::push(std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/thread_pool</dir>
      <file>producer_consumer_queue.h</file>
      <line>71</line>
    </frame>
    <frame>
      <ip>0x509D3BA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>auto tiledb::common::ThreadPool::async&lt;std::function&lt;tiledb::common::Status ()&gt;&gt;(std::function&lt;tiledb::common::Status ()&gt;&amp;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/thread_pool</dir>
      <file>thread_pool.h</file>
      <line>113</line>
    </frame>
    <frame>
      <ip>0x509D4E2</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>auto tiledb::common::ThreadPool::execute&lt;std::function&lt;tiledb::common::Status ()&gt;&gt;(std::function&lt;tiledb::common::Status ()&gt;&amp;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/thread_pool</dir>
      <file>thread_pool.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x5A92053</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status tiledb::sm::parallel_for_2d&lt;tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1}&gt;(tiledb::common::ThreadPool*, unsigned long, unsigned long, unsigned long, unsigned long, tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)::{lambda(unsigned long, unsigned long)#1} const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/sm/misc</dir>
      <file>parallel_functions.h</file>
      <line>393</line>
    </frame>
    <frame>
      <ip>0x5A88A39</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::copy_offsets_tiles&lt;unsigned long&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, bool, unsigned long, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt; const&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, tiledb::sm::QueryBuffer&amp;, std::vector&lt;void const*, std::allocator&lt;void const*&gt; &gt;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/query/readers</dir>
      <file>sparse_unordered_with_dups_reader.cc</file>
      <line>833</line>
    </frame>
    <frame>
      <ip>0x5A80854</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::Status tiledb::sm::SparseUnorderedWithDupsReader&lt;unsigned long&gt;::process_tiles&lt;unsigned long&gt;(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::vector&lt;tiledb::sm::ResultTile*, std::allocator&lt;tiledb::sm::ResultTile*&gt; &gt;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/query/readers</dir>
      <file>sparse_unordered_with_dups_reader.cc</file>
      <line>1703</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEEE8allocateERS8_m</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE16_M_allocate_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_push_front_auxIJRKS7_EEEvDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE10push_frontERKS7_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common21ProducerConsumerQueueISt10shared_ptrISt13packaged_taskIFNS0_6StatusEvEEESt5dequeIS7_SaIS7_EEE4pushERKS7_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10ThreadPool5asyncISt8functionIFNS0_6StatusEvEEJEEEDaOT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10ThreadPool7executeISt8functionIFNS0_6StatusEvEEJEEEDaOT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm15parallel_for_2dIZNS0_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISI_EERKSG_ImSaImEERNS0_11QueryBufferERSG_IPKvSaISU_EEEUlmmE_EES6_PNS5_10ThreadPoolEmmmmRKSF_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISH_EERKSF_ImSaImEERNS0_11QueryBufferERSF_IPKvSaIST_EE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm29SparseUnorderedWithDupsReaderImE13process_tilesImEENS_6common6StatusERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISC_EERS6_IPNS0_10ResultTileESaISH_EE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEEE8allocateERS8_m
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE16_M_allocate_nodeEv
   fun:_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_push_front_auxIJRKS7_EEEvDpOT_
   fun:_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE10push_frontERKS7_
   fun:_ZN6tiledb6common21ProducerConsumerQueueISt10shared_ptrISt13packaged_taskIFNS0_6StatusEvEEESt5dequeIS7_SaIS7_EEE4pushERKS7_
   fun:_ZN6tiledb6common10ThreadPool5asyncISt8functionIFNS0_6StatusEvEEJEEEDaOT_DpOT0_
   fun:_ZN6tiledb6common10ThreadPool7executeISt8functionIFNS0_6StatusEvEEJEEEDaOT_DpOT0_
   fun:_ZN6tiledb2sm15parallel_for_2dIZNS0_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISI_EERKSG_ImSaImEERNS0_11QueryBufferERSG_IPKvSaISU_EEEUlmmE_EES6_PNS5_10ThreadPoolEmmmmRKSF_
   fun:_ZN6tiledb2sm29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISH_EERKSF_ImSaImEERNS0_11QueryBufferERSF_IPKvSaIST_EE
   fun:_ZN6tiledb2sm29SparseUnorderedWithDupsReaderImE13process_tilesImEENS_6common6StatusERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISC_EERS6_IPNS0_10ResultTileESaISH_EE
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEEE8allocateERS8_m</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE16_M_allocate_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_push_front_auxIJRKS7_EEEvDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE10push_frontERKS7_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common21ProducerConsumerQueueISt10shared_ptrISt13packaged_taskIFNS0_6StatusEvEEESt5dequeIS7_SaIS7_EEE4pushERKS7_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10ThreadPool5asyncISt8functionIFNS0_6StatusEvEEJEEEDaOT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10ThreadPool7executeISt8functionIFNS0_6StatusEvEEJEEEDaOT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm15parallel_for_2dIZNS0_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISI_EERKSG_ImSaImEERNS0_11QueryBufferERSG_IPKvSaISU_EEEUlmmE_EES6_PNS5_10ThreadPoolEmmmmRKSF_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISH_EERKSF_ImSaImEERNS0_11QueryBufferERSF_IPKvSaIST_EE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm29SparseUnorderedWithDupsReaderImE13process_tilesImEENS_6common6StatusERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISC_EERS6_IPNS0_10ResultTileESaISH_EE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEEE8allocateERS8_m
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE16_M_allocate_nodeEv
   fun:_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_push_front_auxIJRKS7_EEEvDpOT_
   fun:_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE10push_frontERKS7_
   fun:_ZN6tiledb6common21ProducerConsumerQueueISt10shared_ptrISt13packaged_taskIFNS0_6StatusEvEEESt5dequeIS7_SaIS7_EEE4pushERKS7_
   fun:_ZN6tiledb6common10ThreadPool5asyncISt8functionIFNS0_6StatusEvEEJEEEDaOT_DpOT0_
   fun:_ZN6tiledb6common10ThreadPool7executeISt8functionIFNS0_6StatusEvEEJEEEDaOT_DpOT0_
   fun:_ZN6tiledb2sm15parallel_for_2dIZNS0_29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISI_EERKSG_ImSaImEERNS0_11QueryBufferERSG_IPKvSaISU_EEEUlmmE_EES6_PNS5_10ThreadPoolEmmmmRKSF_
   fun:_ZN6tiledb2sm29SparseUnorderedWithDupsReaderImE18copy_offsets_tilesImEENS_6common6StatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmbT_RKSt6vectorIPNS0_10ResultTileESaISH_EERKSF_ImSaImEERNS0_11QueryBufferERSF_IPKvSaIST_EE
   fun:_ZN6tiledb2sm29SparseUnorderedWithDupsReaderImE13process_tilesImEENS_6common6StatusERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISC_EERS6_IPNS0_10ResultTileESaISH_EE
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x73b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>592 bytes in 1 blocks are possibly lost in loss record 842 of 1,007</text>
    <leakedbytes>592</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x52AB0CC</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::storage_account, tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x52AAAB2</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::storage_account, tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::storage_account, tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x52AA21B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::storage_account, tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;::allocate(unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>governed_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x52A9441</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::storage_account, tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::allocate(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::storage_account, tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>318</line>
    </frame>
    <frame>
      <ip>0x52A7E63</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__allocated_ptr&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::storage_account, tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt; std::__allocate_guarded&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::storage_account, tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::storage_account, tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>allocated_ptr.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x52A62AA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;azure::storage_lite::storage_account, tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(azure::storage_lite::storage_account*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>648</line>
    </frame>
    <frame>
      <ip>0x52A4A7F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;azure::storage_lite::storage_account, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x52A22E8</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::storage_account&gt;::shared_ptr&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x529F9DC</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::storage_account&gt; std::allocate_shared&lt;azure::storage_lite::storage_account, tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(tiledb::common::GovernedAllocator&lt;azure::storage_lite::storage_account, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x529CB22</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::storage_account&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;azure::storage_lite::storage_account&gt;::make_shared_notrace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>198</line>
    </frame>
    <frame>
      <ip>0x52993FE</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::storage_account&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;azure::storage_lite::storage_account&gt;::make_shared&lt;65, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(char const (&amp;) [65], std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;azure::storage_lite::storage_credential&gt;&amp;, bool&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>238</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS3_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS5_18storage_credentialEERbSK_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite15storage_accountELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS1_18storage_credentialEERbSK_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite15storage_accountEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS_INS1_18storage_credentialEERbSI_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS1_18storage_credentialEERbSG_EESH_IT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite15storage_accountEE19make_shared_notraceIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS4_18storage_credentialEERbSE_EEESF_IS5_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite15storage_accountEE11make_sharedILi65EJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS4_18storage_credentialEERbSE_EEESF_IS5_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS3_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS5_18storage_credentialEERbSK_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite15storage_accountELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS1_18storage_credentialEERbSK_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite15storage_accountEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS_INS1_18storage_credentialEERbSI_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS1_18storage_credentialEERbSG_EESH_IT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite15storage_accountEE19make_shared_notraceIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS4_18storage_credentialEERbSE_EEESF_IS5_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite15storage_accountEE11make_sharedILi65EJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS4_18storage_credentialEERbSE_EEESF_IS5_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS3_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS5_18storage_credentialEERbSK_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite15storage_accountELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS1_18storage_credentialEERbSK_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite15storage_accountEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS_INS1_18storage_credentialEERbSI_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS1_18storage_credentialEERbSG_EESH_IT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite15storage_accountEE19make_shared_notraceIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS4_18storage_credentialEERbSE_EEESF_IS5_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite15storage_accountEE11make_sharedILi65EJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS4_18storage_credentialEERbSE_EEESF_IS5_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS3_NS5_12_GLOBAL__N_121TiledbTracedAllocatorENS5_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSE_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountENS1_IS5_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES7_S8_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEE8allocateERSE_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceIN5azure12storage_lite15storage_accountENS2_IS6_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_EEESt15__allocated_ptrIT_ERSG_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS6_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS5_18storage_credentialEERbSK_EEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite15storage_accountELN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS2_NS8_12_GLOBAL__N_121TiledbTracedAllocatorENS8_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS1_18storage_credentialEERbSK_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite15storage_accountEEC1IN6tiledb6common17GovernedAllocatorIS2_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS_INS1_18storage_credentialEERbSI_EEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite15storage_accountEN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS1_18storage_credentialEERbSG_EESH_IT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite15storage_accountEE19make_shared_notraceIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS4_18storage_credentialEERbSE_EEESF_IS5_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsIN5azure12storage_lite15storage_accountEE11make_sharedILi65EJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10shared_ptrINS4_18storage_credentialEERbSE_EEESF_IS5_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x73c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>608 bytes in 19 blocks are possibly lost in loss record 843 of 1,007</text>
    <leakedbytes>608</leakedbytes>
    <leakedblocks>19</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x50B9663</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x50B947B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x50B8F6B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;::allocate(unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>governed_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x50B88C7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::allocate(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>318</line>
    </frame>
    <frame>
      <ip>0x50B7E57</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__allocated_ptr&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt; std::__allocate_guarded&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>allocated_ptr.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x50B7067</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::common::ThreadPool::async&lt;std::function&lt;tiledb::common::Status ()&gt;&gt;(std::function&lt;tiledb::common::Status ()&gt;&amp;&amp;)::{lambda()#1}&gt;(std::packaged_task&lt;tiledb::common::Status ()&gt;*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, tiledb::common::ThreadPool::async&lt;std::function&lt;tiledb::common::Status ()&gt;&gt;(std::function&lt;tiledb::common::Status ()&gt;&amp;&amp;)::{lambda()#1}&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>648</line>
    </frame>
    <frame>
      <ip>0x50B5A7D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::common::ThreadPool::async&lt;std::function&lt;tiledb::common::Status ()&gt;&gt;(std::function&lt;tiledb::common::Status ()&gt;&amp;&amp;)::{lambda()#1}&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, tiledb::common::ThreadPool::async&lt;std::function&lt;tiledb::common::Status ()&gt;&gt;(std::function&lt;tiledb::common::Status ()&gt;&amp;&amp;)::{lambda()#1}&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x50B32AE</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;::shared_ptr&lt;tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::common::ThreadPool::async&lt;std::function&lt;tiledb::common::Status ()&gt;&gt;(std::function&lt;tiledb::common::Status ()&gt;&amp;&amp;)::{lambda()#1}&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, tiledb::common::ThreadPool::async&lt;std::function&lt;tiledb::common::Status ()&gt;&gt;(std::function&lt;tiledb::common::Status ()&gt;&amp;&amp;)::{lambda()#1}&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x50AF556</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; std::allocate_shared&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::common::ThreadPool::async&lt;std::function&lt;tiledb::common::Status ()&gt;&gt;(std::function&lt;tiledb::common::Status ()&gt;&amp;&amp;)::{lambda()#1}&gt;(tiledb::common::GovernedAllocator&lt;std::packaged_task&lt;tiledb::common::Status ()&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; const&amp;, tiledb::common::ThreadPool::async&lt;std::function&lt;tiledb::common::Status ()&gt;&gt;(std::function&lt;tiledb::common::Status ()&gt;&amp;&amp;)::{lambda()#1}&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x50AB0E7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;::make_shared_notrace&lt;tiledb::common::ThreadPool::async&lt;std::function&lt;tiledb::common::Status ()&gt;&gt;(std::function&lt;tiledb::common::Status ()&gt;&amp;&amp;)::{lambda()#1}&gt;(tiledb::common::ThreadPool::async&lt;std::function&lt;tiledb::common::Status ()&gt;&gt;(std::function&lt;tiledb::common::Status ()&gt;&amp;&amp;)::{lambda()#1}&amp;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>198</line>
    </frame>
    <frame>
      <ip>0x50A63B9</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;::make_shared&lt;85, tiledb::common::ThreadPool::async&lt;std::function&lt;tiledb::common::Status ()&gt;&gt;(std::function&lt;tiledb::common::Status ()&gt;&amp;&amp;)::{lambda()#1}&gt;(char const (&amp;) [85], tiledb::common::ThreadPool::async&lt;std::function&lt;tiledb::common::Status ()&gt;&gt;(std::function&lt;tiledb::common::Status ()&gt;&amp;&amp;)::{lambda()#1}&amp;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>238</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFN6tiledb6common6StatusEvEENS4_17GovernedAllocatorIS7_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFN6tiledb6common6StatusEvEENS3_17GovernedAllocatorIS6_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSF_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFNS0_6StatusEvEENS1_IS6_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFNS1_6StatusEvEENS2_IS7_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES9_SA_EEE8allocateERSF_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFNS1_6StatusEvEENS2_IS7_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES9_SA_EEESt15__allocated_ptrIT_ERSH_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1ISt13packaged_taskIFN6tiledb6common6StatusEvEENS6_17GovernedAllocatorIS9_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJZNS6_10ThreadPool5asyncISt8functionIS8_EJEEEDaOT_DpOT0_EUlvE_EEERPSJ_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEELN9__gnu_cxx12_Lock_policyE2EEC1INS2_17GovernedAllocatorIS5_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJZNS2_10ThreadPool5asyncISt8functionIS4_EJEEEDaOT_DpOT0_EUlvE_EEESt20_Sp_alloc_shared_tagISJ_ESN_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEC1INS2_17GovernedAllocatorIS5_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJZNS2_10ThreadPool5asyncISt8functionIS4_EJEEEDaOT_DpOT0_EUlvE_EEESt20_Sp_alloc_shared_tagISH_ESL_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedISt13packaged_taskIFN6tiledb6common6StatusEvEENS2_17GovernedAllocatorIS5_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJZNS2_10ThreadPool5asyncISt8functionIS4_EJEEEDaOT_DpOT0_EUlvE_EESt10shared_ptrISF_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsISt13packaged_taskIFNS0_6StatusEvEEE19make_shared_notraceIJZNS0_10ThreadPool5asyncISt8functionIS5_EJEEEDaOT_DpOT0_EUlvE_EEESt10shared_ptrIS6_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsISt13packaged_taskIFNS0_6StatusEvEEE11make_sharedILi85EJZNS0_10ThreadPool5asyncISt8functionIS5_EJEEEDaOT_DpOT0_EUlvE_EEESt10shared_ptrIS6_ERAT__KcSH_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFN6tiledb6common6StatusEvEENS4_17GovernedAllocatorIS7_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFN6tiledb6common6StatusEvEENS3_17GovernedAllocatorIS6_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSF_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFNS0_6StatusEvEENS1_IS6_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFNS1_6StatusEvEENS2_IS7_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES9_SA_EEE8allocateERSF_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFNS1_6StatusEvEENS2_IS7_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES9_SA_EEESt15__allocated_ptrIT_ERSH_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1ISt13packaged_taskIFN6tiledb6common6StatusEvEENS6_17GovernedAllocatorIS9_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJZNS6_10ThreadPool5asyncISt8functionIS8_EJEEEDaOT_DpOT0_EUlvE_EEERPSJ_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEELN9__gnu_cxx12_Lock_policyE2EEC1INS2_17GovernedAllocatorIS5_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJZNS2_10ThreadPool5asyncISt8functionIS4_EJEEEDaOT_DpOT0_EUlvE_EEESt20_Sp_alloc_shared_tagISJ_ESN_
   fun:_ZNSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEC1INS2_17GovernedAllocatorIS5_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJZNS2_10ThreadPool5asyncISt8functionIS4_EJEEEDaOT_DpOT0_EUlvE_EEESt20_Sp_alloc_shared_tagISH_ESL_
   fun:_ZSt15allocate_sharedISt13packaged_taskIFN6tiledb6common6StatusEvEENS2_17GovernedAllocatorIS5_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJZNS2_10ThreadPool5asyncISt8functionIS4_EJEEEDaOT_DpOT0_EUlvE_EESt10shared_ptrISF_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsISt13packaged_taskIFNS0_6StatusEvEEE19make_shared_notraceIJZNS0_10ThreadPool5asyncISt8functionIS5_EJEEEDaOT_DpOT0_EUlvE_EEESt10shared_ptrIS6_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsISt13packaged_taskIFNS0_6StatusEvEEE11make_sharedILi85EJZNS0_10ThreadPool5asyncISt8functionIS5_EJEEEDaOT_DpOT0_EUlvE_EEESt10shared_ptrIS6_ERAT__KcSH_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFN6tiledb6common6StatusEvEENS4_17GovernedAllocatorIS7_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFN6tiledb6common6StatusEvEENS3_17GovernedAllocatorIS6_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSF_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFNS0_6StatusEvEENS1_IS6_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFNS1_6StatusEvEENS2_IS7_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES9_SA_EEE8allocateERSF_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFNS1_6StatusEvEENS2_IS7_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES9_SA_EEESt15__allocated_ptrIT_ERSH_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1ISt13packaged_taskIFN6tiledb6common6StatusEvEENS6_17GovernedAllocatorIS9_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJZNS6_10ThreadPool5asyncISt8functionIS8_EJEEEDaOT_DpOT0_EUlvE_EEERPSJ_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEELN9__gnu_cxx12_Lock_policyE2EEC1INS2_17GovernedAllocatorIS5_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJZNS2_10ThreadPool5asyncISt8functionIS4_EJEEEDaOT_DpOT0_EUlvE_EEESt20_Sp_alloc_shared_tagISJ_ESN_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEC1INS2_17GovernedAllocatorIS5_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJZNS2_10ThreadPool5asyncISt8functionIS4_EJEEEDaOT_DpOT0_EUlvE_EEESt20_Sp_alloc_shared_tagISH_ESL_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedISt13packaged_taskIFN6tiledb6common6StatusEvEENS2_17GovernedAllocatorIS5_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJZNS2_10ThreadPool5asyncISt8functionIS4_EJEEEDaOT_DpOT0_EUlvE_EESt10shared_ptrISF_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsISt13packaged_taskIFNS0_6StatusEvEEE19make_shared_notraceIJZNS0_10ThreadPool5asyncISt8functionIS5_EJEEEDaOT_DpOT0_EUlvE_EEESt10shared_ptrIS6_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsISt13packaged_taskIFNS0_6StatusEvEEE11make_sharedILi85EJZNS0_10ThreadPool5asyncISt8functionIS5_EJEEEDaOT_DpOT0_EUlvE_EEESt10shared_ptrIS6_ERAT__KcSH_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFN6tiledb6common6StatusEvEENS4_17GovernedAllocatorIS7_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFN6tiledb6common6StatusEvEENS3_17GovernedAllocatorIS6_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSF_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFNS0_6StatusEvEENS1_IS6_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES8_S9_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFNS1_6StatusEvEENS2_IS7_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES9_SA_EEE8allocateERSF_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceISt13packaged_taskIFNS1_6StatusEvEENS2_IS7_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES9_SA_EEESt15__allocated_ptrIT_ERSH_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1ISt13packaged_taskIFN6tiledb6common6StatusEvEENS6_17GovernedAllocatorIS9_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJZNS6_10ThreadPool5asyncISt8functionIS8_EJEEEDaOT_DpOT0_EUlvE_EEERPSJ_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEELN9__gnu_cxx12_Lock_policyE2EEC1INS2_17GovernedAllocatorIS5_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJZNS2_10ThreadPool5asyncISt8functionIS4_EJEEEDaOT_DpOT0_EUlvE_EEESt20_Sp_alloc_shared_tagISJ_ESN_
   fun:_ZNSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEC1INS2_17GovernedAllocatorIS5_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJZNS2_10ThreadPool5asyncISt8functionIS4_EJEEEDaOT_DpOT0_EUlvE_EEESt20_Sp_alloc_shared_tagISH_ESL_
   fun:_ZSt15allocate_sharedISt13packaged_taskIFN6tiledb6common6StatusEvEENS2_17GovernedAllocatorIS5_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJZNS2_10ThreadPool5asyncISt8functionIS4_EJEEEDaOT_DpOT0_EUlvE_EESt10shared_ptrISF_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsISt13packaged_taskIFNS0_6StatusEvEEE19make_shared_notraceIJZNS0_10ThreadPool5asyncISt8functionIS5_EJEEEDaOT_DpOT0_EUlvE_EEESt10shared_ptrIS6_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsISt13packaged_taskIFNS0_6StatusEvEEE11make_sharedILi85EJZNS0_10ThreadPool5asyncISt8functionIS5_EJEEEDaOT_DpOT0_EUlvE_EEESt10shared_ptrIS6_ERAT__KcSH_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x743</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>633 bytes in 24 blocks are possibly lost in loss record 850 of 1,007</text>
    <leakedbytes>633</leakedbytes>
    <leakedblocks>24</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x59EFA2D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x50B7ABF</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_pair.h</file>
      <line>314</line>
    </frame>
    <frame>
      <ip>0x50B7B4C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x50B6BAA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>516</line>
    </frame>
    <frame>
      <ip>0x50B4FFF</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>595</line>
    </frame>
    <frame>
      <ip>0x50B508B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>612</line>
    </frame>
    <frame>
      <ip>0x50B50C4</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;) const</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>529</line>
    </frame>
    <frame>
      <ip>0x50B20F3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>645</line>
    </frame>
    <frame>
      <ip>0x50ADE33</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1862</line>
    </frame>
    <frame>
      <ip>0x50ADE7F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1866</line>
    </frame>
    <frame>
      <ip>0x50A9B76</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>890</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x74f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>700 bytes in 20 blocks are possibly lost in loss record 862 of 1,007</text>
    <leakedbytes>700</leakedbytes>
    <leakedblocks>20</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4848899</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x700F60E</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libc.so.6</obj>
      <fn>strdup</fn>
      <dir>./string/./string</dir>
      <file>strdup.c</file>
      <line>42</line>
    </frame>
    <frame>
      <ip>0x6030215</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>Curl_setstropt</fn>
    </frame>
    <frame>
      <ip>0x6015905</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>Curl_init_userdefined</fn>
    </frame>
    <frame>
      <ip>0x60159A4</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>Curl_open</fn>
    </frame>
    <frame>
      <ip>0x601368C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>curl_easy_init</fn>
    </frame>
    <frame>
      <ip>0x5293EDD</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>azure::storage_lite::CurlEasyClient::CurlEasyClient(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/build/externals/install/azurecpplite/include/http</dir>
      <file>libcurl_http_client.h</file>
      <line>287</line>
    </frame>
    <frame>
      <ip>0x52A7874</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;azure::storage_lite::CurlEasyClient&gt;::construct&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(azure::storage_lite::CurlEasyClient*, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x52A5D7E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;::construct&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;&amp;, azure::storage_lite::CurlEasyClient*, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>516</line>
    </frame>
    <frame>
      <ip>0x52A473E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>519</line>
    </frame>
    <frame>
      <ip>0x52A1EFE</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(azure::storage_lite::CurlEasyClient*&amp;, std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>650</line>
    </frame>
    <frame>
      <ip>0x529F4C1</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;azure::storage_lite::CurlEasyClient, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>malloc</fun> </sframe>
    <sframe> <fun>strdup</fun> </sframe>
    <sframe> <fun>Curl_setstropt</fun> </sframe>
    <sframe> <fun>Curl_init_userdefined</fun> </sframe>
    <sframe> <fun>Curl_open</fun> </sframe>
    <sframe> <fun>curl_easy_init</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:strdup
   fun:Curl_setstropt
   fun:Curl_init_userdefined
   fun:Curl_open
   fun:curl_easy_init
   fun:_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>malloc</fun> </sframe>
    <sframe> <fun>strdup</fun> </sframe>
    <sframe> <fun>Curl_setstropt</fun> </sframe>
    <sframe> <fun>Curl_init_userdefined</fun> </sframe>
    <sframe> <fun>Curl_open</fun> </sframe>
    <sframe> <fun>curl_easy_init</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:strdup
   fun:Curl_setstropt
   fun:Curl_init_userdefined
   fun:Curl_open
   fun:curl_easy_init
   fun:_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x750</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>700 bytes in 20 blocks are possibly lost in loss record 863 of 1,007</text>
    <leakedbytes>700</leakedbytes>
    <leakedblocks>20</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4848899</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x700F60E</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libc.so.6</obj>
      <fn>strdup</fn>
      <dir>./string/./string</dir>
      <file>strdup.c</file>
      <line>42</line>
    </frame>
    <frame>
      <ip>0x6030215</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>Curl_setstropt</fn>
    </frame>
    <frame>
      <ip>0x6015918</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>Curl_init_userdefined</fn>
    </frame>
    <frame>
      <ip>0x60159A4</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>Curl_open</fn>
    </frame>
    <frame>
      <ip>0x601368C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>curl_easy_init</fn>
    </frame>
    <frame>
      <ip>0x5293EDD</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>azure::storage_lite::CurlEasyClient::CurlEasyClient(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/build/externals/install/azurecpplite/include/http</dir>
      <file>libcurl_http_client.h</file>
      <line>287</line>
    </frame>
    <frame>
      <ip>0x52A7874</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;azure::storage_lite::CurlEasyClient&gt;::construct&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(azure::storage_lite::CurlEasyClient*, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x52A5D7E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;::construct&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;&amp;, azure::storage_lite::CurlEasyClient*, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>516</line>
    </frame>
    <frame>
      <ip>0x52A473E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>519</line>
    </frame>
    <frame>
      <ip>0x52A1EFE</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(azure::storage_lite::CurlEasyClient*&amp;, std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>650</line>
    </frame>
    <frame>
      <ip>0x529F4C1</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;azure::storage_lite::CurlEasyClient, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>malloc</fun> </sframe>
    <sframe> <fun>strdup</fun> </sframe>
    <sframe> <fun>Curl_setstropt</fun> </sframe>
    <sframe> <fun>Curl_init_userdefined</fun> </sframe>
    <sframe> <fun>Curl_open</fun> </sframe>
    <sframe> <fun>curl_easy_init</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:strdup
   fun:Curl_setstropt
   fun:Curl_init_userdefined
   fun:Curl_open
   fun:curl_easy_init
   fun:_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>malloc</fun> </sframe>
    <sframe> <fun>strdup</fun> </sframe>
    <sframe> <fun>Curl_setstropt</fun> </sframe>
    <sframe> <fun>Curl_init_userdefined</fun> </sframe>
    <sframe> <fun>Curl_open</fun> </sframe>
    <sframe> <fun>curl_easy_init</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:strdup
   fun:Curl_setstropt
   fun:Curl_init_userdefined
   fun:Curl_open
   fun:curl_easy_init
   fun:_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x767</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>1,024 bytes in 2 blocks are possibly lost in loss record 886 of 1,007</text>
    <leakedbytes>1024</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x50B5C69</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x50B3600</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x50AF6F3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Deque_base&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::_M_allocate_node()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>561</line>
    </frame>
    <frame>
      <ip>0x5D2C9FC</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Deque_base&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::_M_create_nodes(std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;**, std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;**)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>662</line>
    </frame>
    <frame>
      <ip>0x5D2B98F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Deque_base&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::_M_initialize_map(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>636</line>
    </frame>
    <frame>
      <ip>0x5D2ACED</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Deque_base&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::_Deque_base()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>438</line>
    </frame>
    <frame>
      <ip>0x5D2ABA7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::deque&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::deque()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>833</line>
    </frame>
    <frame>
      <ip>0x5D2ABC7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::ProducerConsumerQueue&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::deque&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt; &gt;::ProducerConsumerQueue()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/thread_pool</dir>
      <file>producer_consumer_queue.h</file>
      <line>50</line>
    </frame>
    <frame>
      <ip>0x5D29229</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::ThreadPool::ThreadPool(unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/common/thread_pool</dir>
      <file>thread_pool.cc</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x5C0843B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::ContextResources::ContextResources(tiledb::sm::Config const&amp;, std::shared_ptr&lt;tiledb::common::Logger&gt;, unsigned long, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context_resources.cc</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x5C0561B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Context::Context(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context.cc</file>
      <line>57</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEEE8allocateERS8_m</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE16_M_allocate_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE15_M_create_nodesEPPS7_SB_</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_initialize_mapEm</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EEC1Ev</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EEC1Ev</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common21ProducerConsumerQueueISt10shared_ptrISt13packaged_taskIFNS0_6StatusEvEEESt5dequeIS7_SaIS7_EEEC1Ev</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10ThreadPoolC1Em</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEEE8allocateERS8_m
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE16_M_allocate_nodeEv
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE15_M_create_nodesEPPS7_SB_
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_initialize_mapEm
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EEC1Ev
   fun:_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EEC1Ev
   fun:_ZN6tiledb6common21ProducerConsumerQueueISt10shared_ptrISt13packaged_taskIFNS0_6StatusEvEEESt5dequeIS7_SaIS7_EEEC1Ev
   fun:_ZN6tiledb6common10ThreadPoolC1Em
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEEE8allocateERS8_m</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE16_M_allocate_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE15_M_create_nodesEPPS7_SB_</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_initialize_mapEm</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EEC1Ev</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EEC1Ev</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common21ProducerConsumerQueueISt10shared_ptrISt13packaged_taskIFNS0_6StatusEvEEESt5dequeIS7_SaIS7_EEEC1Ev</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10ThreadPoolC1Em</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEEE8allocateERS8_m
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE16_M_allocate_nodeEv
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE15_M_create_nodesEPPS7_SB_
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_initialize_mapEm
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EEC1Ev
   fun:_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EEC1Ev
   fun:_ZN6tiledb6common21ProducerConsumerQueueISt10shared_ptrISt13packaged_taskIFNS0_6StatusEvEEESt5dequeIS7_SaIS7_EEEC1Ev
   fun:_ZN6tiledb6common10ThreadPoolC1Em
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x77b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>1,264 bytes in 1 blocks are possibly lost in loss record 906 of 1,007</text>
    <leakedbytes>1264</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x50B8179</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;*&gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x50B72D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;*&gt; &gt;::allocate(std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;*&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x50B5BA1</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Deque_base&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::_M_allocate_map(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>575</line>
    </frame>
    <frame>
      <ip>0x50B34FE</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::deque&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::_M_reallocate_map(unsigned long, bool)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>deque.tcc</file>
      <line>959</line>
    </frame>
    <frame>
      <ip>0x50AF6C4</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::deque&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::_M_reserve_map_at_front(unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>2137</line>
    </frame>
    <frame>
      <ip>0x50AB28F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::deque&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::_M_push_front_aux&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; const&amp;&gt;(std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>deque.tcc</file>
      <line>535</line>
    </frame>
    <frame>
      <ip>0x50A64B6</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::deque&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt;::push_front(std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_deque.h</file>
      <line>1468</line>
    </frame>
    <frame>
      <ip>0x50A1195</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::ProducerConsumerQueue&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::deque&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; &gt; &gt; &gt;::push(std::shared_ptr&lt;std::packaged_task&lt;tiledb::common::Status ()&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/thread_pool</dir>
      <file>producer_consumer_queue.h</file>
      <line>71</line>
    </frame>
    <frame>
      <ip>0x582DD06</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>auto tiledb::common::ThreadPool::async&lt;tiledb::sm::FilteredData::queue_last_block_for_read(tiledb::sm::FilteredData::TileType)::{lambda()#1}&gt;(tiledb::sm::FilteredData::queue_last_block_for_read(tiledb::sm::FilteredData::TileType)::{lambda()#1}&amp;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/thread_pool</dir>
      <file>thread_pool.h</file>
      <line>113</line>
    </frame>
    <frame>
      <ip>0x582DE34</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>auto tiledb::common::ThreadPool::execute&lt;tiledb::sm::FilteredData::queue_last_block_for_read(tiledb::sm::FilteredData::TileType)::{lambda()#1}&gt;(tiledb::sm::FilteredData::queue_last_block_for_read(tiledb::sm::FilteredData::TileType)::{lambda()#1}&amp;&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/thread_pool</dir>
      <file>thread_pool.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x582DFA2</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::FilteredData::queue_last_block_for_read(tiledb::sm::FilteredData::TileType)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/sm/query/readers</dir>
      <file>filtered_data.h</file>
      <line>350</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIPSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIPSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEEE8allocateERS9_m</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE15_M_allocate_mapEm</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_reallocate_mapEmb</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE23_M_reserve_map_at_frontEm</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_push_front_auxIJRKS7_EEEvDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE10push_frontERKS7_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common21ProducerConsumerQueueISt10shared_ptrISt13packaged_taskIFNS0_6StatusEvEEESt5dequeIS7_SaIS7_EEE4pushERKS7_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10ThreadPool5asyncIZNS_2sm12FilteredData25queue_last_block_for_readENS4_8TileTypeEEUlvE_JEEEDaOT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10ThreadPool7executeIZNS_2sm12FilteredData25queue_last_block_for_readENS4_8TileTypeEEUlvE_JEEEDaOT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm12FilteredData25queue_last_block_for_readENS1_8TileTypeE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaIPSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEEE8allocateERS9_m
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE15_M_allocate_mapEm
   fun:_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_reallocate_mapEmb
   fun:_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE23_M_reserve_map_at_frontEm
   fun:_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_push_front_auxIJRKS7_EEEvDpOT_
   fun:_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE10push_frontERKS7_
   fun:_ZN6tiledb6common21ProducerConsumerQueueISt10shared_ptrISt13packaged_taskIFNS0_6StatusEvEEESt5dequeIS7_SaIS7_EEE4pushERKS7_
   fun:_ZN6tiledb6common10ThreadPool5asyncIZNS_2sm12FilteredData25queue_last_block_for_readENS4_8TileTypeEEUlvE_JEEEDaOT_DpOT0_
   fun:_ZN6tiledb6common10ThreadPool7executeIZNS_2sm12FilteredData25queue_last_block_for_readENS4_8TileTypeEEUlvE_JEEEDaOT_DpOT0_
   fun:_ZN6tiledb2sm12FilteredData25queue_last_block_for_readENS1_8TileTypeE
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIPSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIPSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEEE8allocateERS9_m</fun> </sframe>
    <sframe> <fun>_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE15_M_allocate_mapEm</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_reallocate_mapEmb</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE23_M_reserve_map_at_frontEm</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_push_front_auxIJRKS7_EEEvDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE10push_frontERKS7_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common21ProducerConsumerQueueISt10shared_ptrISt13packaged_taskIFNS0_6StatusEvEEESt5dequeIS7_SaIS7_EEE4pushERKS7_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10ThreadPool5asyncIZNS_2sm12FilteredData25queue_last_block_for_readENS4_8TileTypeEEUlvE_JEEEDaOT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10ThreadPool7executeIZNS_2sm12FilteredData25queue_last_block_for_readENS4_8TileTypeEEUlvE_JEEEDaOT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm12FilteredData25queue_last_block_for_readENS1_8TileTypeE</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorIPSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaIPSt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEEEE8allocateERS9_m
   fun:_ZNSt11_Deque_baseISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE15_M_allocate_mapEm
   fun:_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_reallocate_mapEmb
   fun:_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE23_M_reserve_map_at_frontEm
   fun:_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE17_M_push_front_auxIJRKS7_EEEvDpOT_
   fun:_ZNSt5dequeISt10shared_ptrISt13packaged_taskIFN6tiledb6common6StatusEvEEESaIS7_EE10push_frontERKS7_
   fun:_ZN6tiledb6common21ProducerConsumerQueueISt10shared_ptrISt13packaged_taskIFNS0_6StatusEvEEESt5dequeIS7_SaIS7_EEE4pushERKS7_
   fun:_ZN6tiledb6common10ThreadPool5asyncIZNS_2sm12FilteredData25queue_last_block_for_readENS4_8TileTypeEEUlvE_JEEEDaOT_DpOT0_
   fun:_ZN6tiledb6common10ThreadPool7executeIZNS_2sm12FilteredData25queue_last_block_for_readENS4_8TileTypeEEUlvE_JEEEDaOT_DpOT0_
   fun:_ZN6tiledb2sm12FilteredData25queue_last_block_for_readENS1_8TileTypeE
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x780</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>1,440 bytes in 15 blocks are possibly lost in loss record 911 of 1,007</text>
    <leakedbytes>1440</leakedbytes>
    <leakedblocks>15</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x50B51E0</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x50B22B9</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x50AE098</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>561</line>
    </frame>
    <frame>
      <ip>0x50B5065</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>611</line>
    </frame>
    <frame>
      <ip>0x525EE0F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>476</line>
    </frame>
    <frame>
      <ip>0x525E0D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>645</line>
    </frame>
    <frame>
      <ip>0x525C9D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1849</line>
    </frame>
    <frame>
      <ip>0x525CA13</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1856</line>
    </frame>
    <frame>
      <ip>0x525CA13</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1856</line>
    </frame>
    <frame>
      <ip>0x525CA13</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1856</line>
    </frame>
    <frame>
      <ip>0x525CA9B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1866</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x790</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>2,304 bytes in 24 blocks are possibly lost in loss record 927 of 1,007</text>
    <leakedbytes>2304</leakedbytes>
    <leakedblocks>24</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x50B51E0</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x50B22B9</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x50AE098</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>561</line>
    </frame>
    <frame>
      <ip>0x50B5065</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>611</line>
    </frame>
    <frame>
      <ip>0x525EE0F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>476</line>
    </frame>
    <frame>
      <ip>0x525E0D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>645</line>
    </frame>
    <frame>
      <ip>0x525CA4F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1862</line>
    </frame>
    <frame>
      <ip>0x525CA13</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1856</line>
    </frame>
    <frame>
      <ip>0x525CA13</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1856</line>
    </frame>
    <frame>
      <ip>0x525CA9B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1866</line>
    </frame>
    <frame>
      <ip>0x525B2AA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>890</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x795</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>2,952 bytes in 1 blocks are possibly lost in loss record 932 of 1,007</text>
    <leakedbytes>2952</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5D47F1A</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x5D47DAE</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x5D47C2B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;::allocate(unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>governed_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x5D47A5D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::allocate(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>318</line>
    </frame>
    <frame>
      <ip>0x5D476F3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__allocated_ptr&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt; std::__allocate_guarded&lt;tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;(tiledb::common::GovernedAllocator&lt;std::_Sp_counted_ptr_inplace&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, (__gnu_cxx::_Lock_policy)2&gt;, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>allocated_ptr.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x5D47565</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&amp;&gt;(tiledb_ctx_handle_t*&amp;, std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>648</line>
    </frame>
    <frame>
      <ip>0x5D4732D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;tiledb_ctx_handle_t, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&amp;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x5D4725C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb_ctx_handle_t&gt;::shared_ptr&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&amp;&gt;(std::_Sp_alloc_shared_tag&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x5D471A8</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb_ctx_handle_t&gt; std::allocate_shared&lt;tiledb_ctx_handle_t, tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;, tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; const&amp;, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x5D470A2</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb_ctx_handle_t&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;tiledb_ctx_handle_t&gt;::make_shared_notrace&lt;tiledb::sm::Config&amp;&gt;(tiledb::sm::Config&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>198</line>
    </frame>
    <frame>
      <ip>0x5D45B44</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;tiledb_ctx_handle_t&gt; tiledb::common::(anonymous namespace)::AllocationFunctions&lt;tiledb_ctx_handle_t&gt;::make_shared&lt;86, tiledb::sm::Config&amp;&gt;(char const (&amp;) [86], tiledb::sm::Config&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/../tiledb/common/dynamic_memory</dir>
      <file>dynamic_memory.h</file>
      <line>238</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS1_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tNS1_IS3_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES5_S6_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tNS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tNS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEESt15__allocated_ptrIT_ERSE_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrI19tiledb_ctx_handle_tLN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS0_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrI19tiledb_ctx_handle_tEC1IN6tiledb6common17GovernedAllocatorIS0_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJRNS3_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJRNS1_2sm6ConfigEEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsI19tiledb_ctx_handle_tE19make_shared_notraceIJRNS_2sm6ConfigEEEESt10shared_ptrIS3_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsI19tiledb_ctx_handle_tE11make_sharedILi86EJRNS_2sm6ConfigEEEESt10shared_ptrIS3_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS1_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSC_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tNS1_IS3_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES5_S6_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tNS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEE8allocateERSC_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tNS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEESt15__allocated_ptrIT_ERSE_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrI19tiledb_ctx_handle_tLN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS0_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrI19tiledb_ctx_handle_tEC1IN6tiledb6common17GovernedAllocatorIS0_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJRNS3_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJRNS1_2sm6ConfigEEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsI19tiledb_ctx_handle_tE19make_shared_notraceIJRNS_2sm6ConfigEEEESt10shared_ptrIS3_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsI19tiledb_ctx_handle_tE11make_sharedILi86EJRNS_2sm6ConfigEEEESt10shared_ptrIS3_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS1_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tNS1_IS3_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES5_S6_E8allocateEm</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tNS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEE8allocateERSC_m</fun> </sframe>
    <sframe> <fun>_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tNS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEESt15__allocated_ptrIT_ERSE_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrI19tiledb_ctx_handle_tLN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS0_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrI19tiledb_ctx_handle_tEC1IN6tiledb6common17GovernedAllocatorIS0_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJRNS3_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJRNS1_2sm6ConfigEEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsI19tiledb_ctx_handle_tE19make_shared_notraceIJRNS_2sm6ConfigEEEESt10shared_ptrIS3_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsI19tiledb_ctx_handle_tE11make_sharedILi86EJRNS_2sm6ConfigEEEESt10shared_ptrIS3_ERAT__KcDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS2_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEELNS_12_Lock_policyE2EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS1_NS3_12_GLOBAL__N_121TiledbTracedAllocatorENS3_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERSC_m
   fun:_ZN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tNS1_IS3_NS0_12_GLOBAL__N_121TiledbTracedAllocatorENS0_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES5_S6_E8allocateEm
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tNS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEE8allocateERSC_m
   fun:_ZSt18__allocate_guardedIN6tiledb6common17GovernedAllocatorISt23_Sp_counted_ptr_inplaceI19tiledb_ctx_handle_tNS2_IS4_NS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEELN9__gnu_cxx12_Lock_policyE2EES6_S7_EEESt15__allocated_ptrIT_ERSE_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1I19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS4_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrI19tiledb_ctx_handle_tLN9__gnu_cxx12_Lock_policyE2EEC1IN6tiledb6common17GovernedAllocatorIS0_NS6_12_GLOBAL__N_121TiledbTracedAllocatorENS6_8GovernorEEEJRNS5_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrI19tiledb_ctx_handle_tEC1IN6tiledb6common17GovernedAllocatorIS0_NS4_12_GLOBAL__N_121TiledbTracedAllocatorENS4_8GovernorEEEJRNS3_2sm6ConfigEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedI19tiledb_ctx_handle_tN6tiledb6common17GovernedAllocatorIS0_NS2_12_GLOBAL__N_121TiledbTracedAllocatorENS2_8GovernorEEEJRNS1_2sm6ConfigEEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsI19tiledb_ctx_handle_tE19make_shared_notraceIJRNS_2sm6ConfigEEEESt10shared_ptrIS3_EDpOT_
   fun:_ZN6tiledb6common12_GLOBAL__N_119AllocationFunctionsI19tiledb_ctx_handle_tE11make_sharedILi86EJRNS_2sm6ConfigEEEESt10shared_ptrIS3_ERAT__KcDpOT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x798</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>3,233 bytes in 119 blocks are possibly lost in loss record 935 of 1,007</text>
    <leakedbytes>3233</leakedbytes>
    <leakedblocks>119</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x59EFA2D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x50B7ABF</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_pair.h</file>
      <line>314</line>
    </frame>
    <frame>
      <ip>0x50B7B4C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x50B6BAA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>516</line>
    </frame>
    <frame>
      <ip>0x50B4FFF</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>595</line>
    </frame>
    <frame>
      <ip>0x50B508B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>612</line>
    </frame>
    <frame>
      <ip>0x525EE0F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>476</line>
    </frame>
    <frame>
      <ip>0x525E0D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>645</line>
    </frame>
    <frame>
      <ip>0x525C9D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1849</line>
    </frame>
    <frame>
      <ip>0x525B2AA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>890</line>
    </frame>
    <frame>
      <ip>0x525A41E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator=(std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1757</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEaSERKSE_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEaSERKSE_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEaSERKSE_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEaSERKSE_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x799</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>3,233 bytes in 119 blocks are possibly lost in loss record 936 of 1,007</text>
    <leakedbytes>3233</leakedbytes>
    <leakedblocks>119</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x59EFA2D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x50B7ABF</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_pair.h</file>
      <line>314</line>
    </frame>
    <frame>
      <ip>0x50B7B4C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x50B6BAA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>516</line>
    </frame>
    <frame>
      <ip>0x50B4FFF</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>595</line>
    </frame>
    <frame>
      <ip>0x525EDEA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>472</line>
    </frame>
    <frame>
      <ip>0x525E0D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>645</line>
    </frame>
    <frame>
      <ip>0x525C9D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1849</line>
    </frame>
    <frame>
      <ip>0x525B2AA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>890</line>
    </frame>
    <frame>
      <ip>0x525A41E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator=(std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1757</line>
    </frame>
    <frame>
      <ip>0x525387A</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator=(std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_map.h</file>
      <line>319</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEaSERKSE_</fun> </sframe>
    <sframe> <fun>_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEaSERKSC_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEaSERKSE_
   fun:_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEaSERKSC_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEaSERKSE_</fun> </sframe>
    <sframe> <fun>_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEaSERKSC_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEaSERKSE_
   fun:_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEaSERKSC_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x79e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>8,640 bytes in 90 blocks are possibly lost in loss record 941 of 1,007</text>
    <leakedbytes>8640</leakedbytes>
    <leakedblocks>90</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x50B51E0</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x50B22B9</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x50AE098</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>561</line>
    </frame>
    <frame>
      <ip>0x50B5065</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>611</line>
    </frame>
    <frame>
      <ip>0x50B50C4</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;) const</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>529</line>
    </frame>
    <frame>
      <ip>0x50B20F3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>645</line>
    </frame>
    <frame>
      <ip>0x50ADDB7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1849</line>
    </frame>
    <frame>
      <ip>0x50A9B76</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>890</line>
    </frame>
    <frame>
      <ip>0x50A4726</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy(std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>901</line>
    </frame>
    <frame>
      <ip>0x509F732</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree(std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>939</line>
    </frame>
    <frame>
      <ip>0x509C4F2</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::map(std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_map.h</file>
      <line>207</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyERKSE_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1ERKSE_</fun> </sframe>
    <sframe> <fun>_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEC1ERKSC_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyERKSE_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1ERKSE_
   fun:_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEC1ERKSC_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyERKSE_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1ERKSE_</fun> </sframe>
    <sframe> <fun>_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEC1ERKSC_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyERKSE_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1ERKSE_
   fun:_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEC1ERKSC_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x79f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>9,216 bytes in 96 blocks are possibly lost in loss record 942 of 1,007</text>
    <leakedbytes>9216</leakedbytes>
    <leakedblocks>96</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x50B51E0</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x50B22B9</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x50AE098</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>561</line>
    </frame>
    <frame>
      <ip>0x50B5065</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>611</line>
    </frame>
    <frame>
      <ip>0x50B50C4</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;) const</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>529</line>
    </frame>
    <frame>
      <ip>0x50B20F3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>645</line>
    </frame>
    <frame>
      <ip>0x50ADE33</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1862</line>
    </frame>
    <frame>
      <ip>0x50ADDF7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1856</line>
    </frame>
    <frame>
      <ip>0x50ADDF7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1856</line>
    </frame>
    <frame>
      <ip>0x50ADE7F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1866</line>
    </frame>
    <frame>
      <ip>0x50A9B76</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>890</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x7a2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>12,160 bytes in 40 blocks are possibly lost in loss record 945 of 1,007</text>
    <leakedbytes>12160</leakedbytes>
    <leakedblocks>40</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x484DA83</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x40147D9</ip>
      <obj>/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2</obj>
      <fn>calloc</fn>
      <dir>./elf/../include</dir>
      <file>rtld-malloc.h</file>
      <line>44</line>
    </frame>
    <frame>
      <ip>0x40147D9</ip>
      <obj>/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2</obj>
      <fn>allocate_dtv</fn>
      <dir>./elf/../elf</dir>
      <file>dl-tls.c</file>
      <line>375</line>
    </frame>
    <frame>
      <ip>0x40147D9</ip>
      <obj>/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2</obj>
      <fn>_dl_allocate_tls</fn>
      <dir>./elf/../elf</dir>
      <file>dl-tls.c</file>
      <line>634</line>
    </frame>
    <frame>
      <ip>0x6FFC834</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libc.so.6</obj>
      <fn>allocate_stack</fn>
      <dir>./nptl/./nptl</dir>
      <file>allocatestack.c</file>
      <line>430</line>
    </frame>
    <frame>
      <ip>0x6FFC834</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libc.so.6</obj>
      <fn>pthread_create@@GLIBC_2.34</fn>
      <dir>./nptl/./nptl</dir>
      <file>pthread_create.c</file>
      <line>647</line>
    </frame>
    <frame>
      <ip>0x6DF9388</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30</obj>
      <fn>std::thread::_M_start_thread(std::unique_ptr&lt;std::thread::_State, std::default_delete&lt;std::thread::_State&gt; &gt;, void (*)())</fn>
    </frame>
    <frame>
      <ip>0x5D2AF7F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::thread::thread&lt;void (tiledb::common::ThreadPool::*)(), tiledb::common::ThreadPool*, void&gt;(void (tiledb::common::ThreadPool::*&amp;&amp;)(), tiledb::common::ThreadPool*&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>std_thread.h</file>
      <line>143</line>
    </frame>
    <frame>
      <ip>0x5D29423</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::common::ThreadPool::ThreadPool(unsigned long)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/common/thread_pool</dir>
      <file>thread_pool.cc</file>
      <line>76</line>
    </frame>
    <frame>
      <ip>0x5C0843B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::ContextResources::ContextResources(tiledb::sm::Config const&amp;, std::shared_ptr&lt;tiledb::common::Logger&gt;, unsigned long, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context_resources.cc</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x5C0561B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Context::Context(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/storage_manager</dir>
      <file>context.cc</file>
      <line>57</line>
    </frame>
    <frame>
      <ip>0x5D42C8F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb_ctx_handle_t::tiledb_ctx_handle_t(tiledb::sm::Config const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/api/c_api/context</dir>
      <file>context_api_internal.h</file>
      <line>55</line>
    </frame>
    <frame>
      <ip>0x5D47E72</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;tiledb_ctx_handle_t&gt;::construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x5D47D7F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::enable_if&lt;std::__and_&lt;std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::__construct_helper&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;::type&gt;::value, void&gt;::type std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::_S_construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>251</line>
    </frame>
    <frame>
      <ip>0x5D47BE7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>decltype (_S_construct({parm#1}, {parm#2}, (forward&lt;tiledb::sm::Config&amp;&gt;)({parm#3}))) std::allocator_traits&lt;tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt; &gt;::construct&lt;tiledb_ctx_handle_t, tiledb::sm::Config&amp;&gt;(tiledb::common::GovernedAllocator&lt;tiledb_ctx_handle_t, tiledb::common::(anonymous namespace)::TiledbTracedAllocator, tiledb::common::Governor&gt;&amp;, tiledb_ctx_handle_t*, tiledb::sm::Config&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>364</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>calloc</fun> </sframe>
    <sframe> <fun>calloc</fun> </sframe>
    <sframe> <fun>allocate_dtv</fun> </sframe>
    <sframe> <fun>_dl_allocate_tls</fun> </sframe>
    <sframe> <fun>allocate_stack</fun> </sframe>
    <sframe> <fun>pthread_create@@GLIBC_2.34</fun> </sframe>
    <sframe> <fun>_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE</fun> </sframe>
    <sframe> <fun>_ZNSt6threadC1IMN6tiledb6common10ThreadPoolEFvvEJPS3_EvEEOT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10ThreadPoolC1Em</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:calloc
   fun:calloc
   fun:allocate_dtv
   fun:_dl_allocate_tls
   fun:allocate_stack
   fun:pthread_create@@GLIBC_2.34
   fun:_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE
   fun:_ZNSt6threadC1IMN6tiledb6common10ThreadPoolEFvvEJPS3_EvEEOT_DpOT0_
   fun:_ZN6tiledb6common10ThreadPoolC1Em
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
   fun:_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>calloc</fun> </sframe>
    <sframe> <fun>calloc</fun> </sframe>
    <sframe> <fun>allocate_dtv</fun> </sframe>
    <sframe> <fun>_dl_allocate_tls</fun> </sframe>
    <sframe> <fun>allocate_stack</fun> </sframe>
    <sframe> <fun>pthread_create@@GLIBC_2.34</fun> </sframe>
    <sframe> <fun>_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE</fun> </sframe>
    <sframe> <fun>_ZNSt6threadC1IMN6tiledb6common10ThreadPoolEFvvEJPS3_EvEEOT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb6common10ThreadPoolC1Em</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:calloc
   fun:calloc
   fun:allocate_dtv
   fun:_dl_allocate_tls
   fun:allocate_stack
   fun:pthread_create@@GLIBC_2.34
   fun:_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE
   fun:_ZNSt6threadC1IMN6tiledb6common10ThreadPoolEFvvEJPS3_EvEEOT_DpOT0_
   fun:_ZN6tiledb6common10ThreadPoolC1Em
   fun:_ZN6tiledb2sm16ContextResourcesC1ERKNS0_6ConfigESt10shared_ptrINS_6common6LoggerEEmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN6tiledb2sm7ContextC1ERKNS0_6ConfigE
   fun:_ZN19tiledb_ctx_handle_tC1ERKN6tiledb2sm6ConfigE
   fun:_ZN9__gnu_cxx13new_allocatorI19tiledb_ctx_handle_tE9constructIS1_JRN6tiledb2sm6ConfigEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE12_S_constructIS3_JRNS0_2sm6ConfigEEEENSt9enable_ifIXsrSt6__and_IJNS8_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS7_PSG_DpOSH_
   fun:_ZNSt16allocator_traitsIN6tiledb6common17GovernedAllocatorI19tiledb_ctx_handle_tNS1_12_GLOBAL__N_121TiledbTracedAllocatorENS1_8GovernorEEEE9constructIS3_JRNS0_2sm6ConfigEEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS7_PT_DpOSD_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x7a3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>12,299 bytes in 452 blocks are possibly lost in loss record 946 of 1,007</text>
    <leakedbytes>12299</leakedbytes>
    <leakedblocks>452</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x59EFA2D</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x50B7ABF</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_pair.h</file>
      <line>314</line>
    </frame>
    <frame>
      <ip>0x50B7B4C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x50B6BAA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>516</line>
    </frame>
    <frame>
      <ip>0x50B4FFF</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>595</line>
    </frame>
    <frame>
      <ip>0x50B508B</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>612</line>
    </frame>
    <frame>
      <ip>0x50B50C4</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;) const</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>529</line>
    </frame>
    <frame>
      <ip>0x50B20F3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>645</line>
    </frame>
    <frame>
      <ip>0x50ADDB7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1849</line>
    </frame>
    <frame>
      <ip>0x50A9B76</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>890</line>
    </frame>
    <frame>
      <ip>0x50A4726</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy(std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>901</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyERKSE_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyERKSE_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag</fun> </sframe>
    <sframe> <fun>_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyERKSE_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
   fun:_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC1ERKS7_
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE9constructISA_JRKSA_EEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE9constructIS9_JRKS9_EEEvRSB_PT_DpOT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyERKSE_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x7a5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>20,448 bytes in 213 blocks are possibly lost in loss record 948 of 1,007</text>
    <leakedbytes>20448</leakedbytes>
    <leakedblocks>213</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x50B51E0</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x50B22B9</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x50AE098</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>561</line>
    </frame>
    <frame>
      <ip>0x50B5065</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>611</line>
    </frame>
    <frame>
      <ip>0x525EE0F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>476</line>
    </frame>
    <frame>
      <ip>0x525E0D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>645</line>
    </frame>
    <frame>
      <ip>0x525C9D3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1849</line>
    </frame>
    <frame>
      <ip>0x525B2AA</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt;(std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>890</line>
    </frame>
    <frame>
      <ip>0x525A41E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator=(std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1757</line>
    </frame>
    <frame>
      <ip>0x525387A</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator=(std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_map.h</file>
      <line>319</line>
    </frame>
    <frame>
      <ip>0x5247B1C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>tiledb::sm::Config::Config()</fn>
      <dir>/home/shaun/Code/Clones/tiledb/tiledb/sm/config</dir>
      <file>config.cc</file>
      <line>478</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEaSERKSE_</fun> </sframe>
    <sframe> <fun>_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEaSERKSC_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm6ConfigC1Ev</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEaSERKSE_
   fun:_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEaSERKSC_
   fun:_ZN6tiledb2sm6ConfigC1Ev
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEaSERKSE_</fun> </sframe>
    <sframe> <fun>_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEaSERKSC_</fun> </sframe>
    <sframe> <fun>_ZN6tiledb2sm6ConfigC1Ev</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ERKSE_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEaSERKSE_
   fun:_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEaSERKSC_
   fun:_ZN6tiledb2sm6ConfigC1Ev
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x7a7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30,528 bytes in 318 blocks are possibly lost in loss record 950 of 1,007</text>
    <leakedbytes>30528</leakedbytes>
    <leakedblocks>318</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x50B51E0</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x50B22B9</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>464</line>
    </frame>
    <frame>
      <ip>0x50AE098</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>561</line>
    </frame>
    <frame>
      <ip>0x50B5065</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>611</line>
    </frame>
    <frame>
      <ip>0x50B50C4</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;) const</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>529</line>
    </frame>
    <frame>
      <ip>0x50B20F3</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>645</line>
    </frame>
    <frame>
      <ip>0x50ADDB7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1849</line>
    </frame>
    <frame>
      <ip>0x50ADDF7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1856</line>
    </frame>
    <frame>
      <ip>0x50ADDF7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1856</line>
    </frame>
    <frame>
      <ip>0x50ADDF7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1856</line>
    </frame>
    <frame>
      <ip>0x50ADE7F</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>stl_tree.h</file>
      <line>1866</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>_Znwm</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_</fun> </sframe>
    <sframe> <fun>_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <sframe> <fun>_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE8allocateEmPKv
   fun:_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEEE8allocateERSB_m
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKS8_EEEPSt13_Rb_tree_nodeIS8_EDpOT_
   fun:_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_Alloc_nodeclIRKS8_EEPSt13_Rb_tree_nodeIS8_EOT_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_M_clone_nodeILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_RT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
   fun:_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x7af</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>126,400 bytes in 20 blocks are possibly lost in loss record 958 of 1,007</text>
    <leakedbytes>126400</leakedbytes>
    <leakedblocks>20</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x484DA83</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x6015953</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>Curl_open</fn>
    </frame>
    <frame>
      <ip>0x601368C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>curl_easy_init</fn>
    </frame>
    <frame>
      <ip>0x5293EDD</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>azure::storage_lite::CurlEasyClient::CurlEasyClient(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/shaun/Code/Clones/tiledb/build/externals/install/azurecpplite/include/http</dir>
      <file>libcurl_http_client.h</file>
      <line>287</line>
    </frame>
    <frame>
      <ip>0x52A7874</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void __gnu_cxx::new_allocator&lt;azure::storage_lite::CurlEasyClient&gt;::construct&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(azure::storage_lite::CurlEasyClient*, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/ext</dir>
      <file>new_allocator.h</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x52A5D7E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;::construct&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;&amp;, azure::storage_lite::CurlEasyClient*, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>alloc_traits.h</file>
      <line>516</line>
    </frame>
    <frame>
      <ip>0x52A473E</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>519</line>
    </frame>
    <frame>
      <ip>0x52A1EFE</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(azure::storage_lite::CurlEasyClient*&amp;, std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>650</line>
    </frame>
    <frame>
      <ip>0x529F4C1</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::__shared_ptr&lt;azure::storage_lite::CurlEasyClient, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1342</line>
    </frame>
    <frame>
      <ip>0x529C68C</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::CurlEasyClient&gt;::shared_ptr&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::_Sp_alloc_shared_tag&lt;std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x5298FA7</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::CurlEasyClient&gt; std::allocate_shared&lt;azure::storage_lite::CurlEasyClient, std::allocator&lt;azure::storage_lite::CurlEasyClient&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;azure::storage_lite::CurlEasyClient&gt; const&amp;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>863</line>
    </frame>
    <frame>
      <ip>0x5296137</ip>
      <obj>/home/shaun/Code/Clones/tiledb/build/tiledb/tiledb/libtiledb.so.2.16</obj>
      <fn>std::shared_ptr&lt;azure::storage_lite::CurlEasyClient&gt; std::make_shared&lt;azure::storage_lite::CurlEasyClient, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>shared_ptr.h</file>
      <line>879</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>calloc</fun> </sframe>
    <sframe> <fun>Curl_open</fun> </sframe>
    <sframe> <fun>curl_easy_init</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite14CurlEasyClientEEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite14CurlEasyClientESaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt11make_sharedIN5azure12storage_lite14CurlEasyClientEJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_EDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:calloc
   fun:Curl_open
   fun:curl_easy_init
   fun:_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite14CurlEasyClientEEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite14CurlEasyClientESaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZSt11make_sharedIN5azure12storage_lite14CurlEasyClientEJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_EDpOT0_
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>calloc</fun> </sframe>
    <sframe> <fun>Curl_open</fun> </sframe>
    <sframe> <fun>curl_easy_init</fun> </sframe>
    <sframe> <fun>_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</fun> </sframe>
    <sframe> <fun>_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_</fun> </sframe>
    <sframe> <fun>_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_</fun> </sframe>
    <sframe> <fun>_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZNSt10shared_ptrIN5azure12storage_lite14CurlEasyClientEEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_</fun> </sframe>
    <sframe> <fun>_ZSt15allocate_sharedIN5azure12storage_lite14CurlEasyClientESaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_ERKT0_DpOT1_</fun> </sframe>
    <sframe> <fun>_ZSt11make_sharedIN5azure12storage_lite14CurlEasyClientEJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_EDpOT0_</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:calloc
   fun:Curl_open
   fun:curl_easy_init
   fun:_ZN5azure12storage_lite14CurlEasyClientC1EiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
   fun:_ZN9__gnu_cxx13new_allocatorIN5azure12storage_lite14CurlEasyClientEE9constructIS3_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_
   fun:_ZNSt16allocator_traitsISaIN5azure12storage_lite14CurlEasyClientEEE9constructIS2_JRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvRS3_PT_DpOT0_
   fun:_ZNSt23_Sp_counted_ptr_inplaceIN5azure12storage_lite14CurlEasyClientESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC1IJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEES3_DpOT_
   fun:_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN5azure12storage_lite14CurlEasyClientESaIS6_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
   fun:_ZNSt12__shared_ptrIN5azure12storage_lite14CurlEasyClientELN9__gnu_cxx12_Lock_policyE2EEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZNSt10shared_ptrIN5azure12storage_lite14CurlEasyClientEEC1ISaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
   fun:_ZSt15allocate_sharedIN5azure12storage_lite14CurlEasyClientESaIS2_EJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_ERKT0_DpOT1_
   fun:_ZSt11make_sharedIN5azure12storage_lite14CurlEasyClientEJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt10shared_ptrIT_EDpOT0_
}
]]>
    </rawtext>
  </suppression>
<errorcounts>
  <pair>
    <count>505</count>
    <unique>0x1</unique>
  </pair>
  <pair>
    <count>505</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>



diff --git a/src/base64.cpp b/src/base64.cpp
index 0b3e18e5..123e2274 100644
--- a/src/base64.cpp
+++ b/src/base64.cpp
@@ -35,6 +35,20 @@ namespace azure {  namespace storage_lite {
         unsigned char _2_2 : 2;
     };
 
+    struct _double_byte
+    {
+        unsigned char _1_1 : 2;
+        unsigned char _0 : 6;
+        unsigned char _2_1 : 4;
+        unsigned char _1_2 : 4;
+    };
+
+    struct _single_byte
+    {
+        unsigned char _1_1 : 2;
+        unsigned char _0 : 6;
+    };
+
     std::string to_base64(const std::vector<unsigned char> &input)
     {
         return to_base64(input.data(), input.size());
@@ -65,7 +79,7 @@ namespace azure {  namespace storage_lite {
         switch (size)
         {
         case 1: {
-            const _triple_byte* record = reinterpret_cast<const _triple_byte*>(ptr);
+            const _single_byte* record = reinterpret_cast<const _single_byte*>(ptr);
             unsigned char idx0 = record->_0;
             unsigned char idx1 = (record->_1_1 << 4);
             result.push_back(char(_base64_enctbl[idx0]));
@@ -76,7 +90,7 @@ namespace azure {  namespace storage_lite {
         }
         case 2:
         {
-            const _triple_byte* record = reinterpret_cast<const _triple_byte*>(ptr);
+            const _double_byte* record = reinterpret_cast<const _double_byte*>(ptr);
             unsigned char idx0 = record->_0;
             unsigned char idx1 = (record->_1_1 << 4) | record->_1_2;
             unsigned char idx2 = (record->_2_1 << 2);

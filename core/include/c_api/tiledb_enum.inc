/**
 * @file   tiledb_enum.inc
 *
 * @section LICENSE
 *
 * The MIT License
 *
 * @copyright Copyright (c) 2017 TileDB, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @section DESCRIPTION
 *
 * This file includes enum types.
 */

/** TileDB query type */
#ifdef TILEDB_QUERY_TYPE_ENUM
TILEDB_QUERY_TYPE_ENUM(READ),
TILEDB_QUERY_TYPE_ENUM(WRITE),
#endif

/** TileDB object type */
#ifdef TILEDB_OBJECT_TYPE_ENUM
TILEDB_OBJECT_TYPE_ENUM(INVALID) = 1,
TILEDB_OBJECT_TYPE_ENUM(GROUP),
TILEDB_OBJECT_TYPE_ENUM(ARRAY),
TILEDB_OBJECT_TYPE_ENUM(KEY_VALUE)
#endif

/** TileDB filesystem */
#ifdef TILEDB_FILESYSTEM_ENUM
TILEDB_FILESYSTEM_ENUM(HDFS),
TILEDB_FILESYSTEM_ENUM(S3),
#endif

/** TileDB datatype */
#ifdef TILEDB_DATATYPE_ENUM
TILEDB_DATATYPE_ENUM(INT32),
TILEDB_DATATYPE_ENUM(INT64),
TILEDB_DATATYPE_ENUM(FLOAT32),
TILEDB_DATATYPE_ENUM(FLOAT64),
TILEDB_DATATYPE_ENUM(CHAR),
TILEDB_DATATYPE_ENUM(INT8),
TILEDB_DATATYPE_ENUM(UINT8),
TILEDB_DATATYPE_ENUM(INT16),
TILEDB_DATATYPE_ENUM(UINT16),
TILEDB_DATATYPE_ENUM(UINT32),
TILEDB_DATATYPE_ENUM(UINT64),
#endif

/** TileDB array type */
#ifdef TILEDB_ARRAY_TYPE_ENUM
TILEDB_ARRAY_TYPE_ENUM(DENSE),
TILEDB_ARRAY_TYPE_ENUM(SPARSE),
#endif

/** TileDB layout */
#ifdef TILEDB_LAYOUT_ENUM
TILEDB_LAYOUT_ENUM(ROW_MAJOR),
TILEDB_LAYOUT_ENUM(COL_MAJOR),
TILEDB_LAYOUT_ENUM(GLOBAL_ORDER),
TILEDB_LAYOUT_ENUM(UNORDERED),
#endif

/** TileDB compression */
#ifdef TILEDB_COMPRESSOR_ENUM
#undef BLOSC_LZ4
#undef BLOSC_LZ4HC
#undef BLOSC_SNAPPY
#undef BLOSC_ZLIB
#undef BLOSC_ZSTD
TILEDB_COMPRESSOR_ENUM(NO_COMPRESSION),
TILEDB_COMPRESSOR_ENUM(GZIP),
TILEDB_COMPRESSOR_ENUM(ZSTD),
TILEDB_COMPRESSOR_ENUM(LZ4),
TILEDB_COMPRESSOR_ENUM(BLOSC),
TILEDB_COMPRESSOR_ENUM(BLOSC_LZ4),
TILEDB_COMPRESSOR_ENUM(BLOSC_LZ4HC),
TILEDB_COMPRESSOR_ENUM(BLOSC_SNAPPY),
TILEDB_COMPRESSOR_ENUM(BLOSC_ZLIB),
TILEDB_COMPRESSOR_ENUM(BLOSC_ZSTD),
TILEDB_COMPRESSOR_ENUM(RLE),
TILEDB_COMPRESSOR_ENUM(BZIP2),
TILEDB_COMPRESSOR_ENUM(DOUBLE_DELTA),
#endif

/** TileDB query status */
#ifdef TILEDB_QUERY_STATUS_ENUM
TILEDB_QUERY_STATUS_ENUM(FAILED) = -1,
TILEDB_QUERY_STATUS_ENUM(COMPLETED) = 0,
TILEDB_QUERY_STATUS_ENUM(INPROGRESS) = 1,
TILEDB_QUERY_STATUS_ENUM(INCOMPLETE) = 2,
#endif

/** TileDB walk traversal order */
#ifdef TILEDB_WALK_ORDER_ENUM
TILEDB_WALK_ORDER_ENUM(PREORDER),
TILEDB_WALK_ORDER_ENUM(POSTORDER),
#endif
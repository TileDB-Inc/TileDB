<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="tiledb_8h" kind="file" language="C++">
    <compoundname>tiledb.h</compoundname>
    <includes local="yes">tiledb_version.h</includes>
    <includes local="yes">tiledb/api/c_api/api_external_common.h</includes>
    <includes local="yes">tiledb/api/c_api/buffer/buffer_api_external.h</includes>
    <includes local="yes">tiledb/api/c_api/config/config_api_external.h</includes>
    <includes local="yes">tiledb/api/c_api/context/context_api_external.h</includes>
    <includes local="yes">tiledb/api/c_api/data_order/data_order_api_external.h</includes>
    <includes local="yes">tiledb/api/c_api/datatype/datatype_api_external.h</includes>
    <includes local="yes">tiledb/api/c_api/error/error_api_external.h</includes>
    <includes local="yes">tiledb/api/c_api/filesystem/filesystem_api_external.h</includes>
    <includes local="yes">tiledb/api/c_api/filter/filter_api_external.h</includes>
    <includes local="yes">tiledb/api/c_api/filter_list/filter_list_api_external.h</includes>
    <includes local="yes">tiledb/api/c_api/group/group_api_external.h</includes>
    <includes local="yes">tiledb/api/c_api/object/object_api_external.h</includes>
    <includes local="yes">tiledb/api/c_api/query/query_api_external.h</includes>
    <includes local="yes">tiledb/api/c_api/vfs/vfs_api_external.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="yes">tiledb_enum.h</includes>
    <includedby refid="tiledb__experimental_8h" local="yes">/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_experimental.h</includedby>
    <includedby refid="tiledb__serialization_8h" local="yes">/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h</label>
        <link refid="tiledb_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stdint.h</label>
      </node>
      <node id="18">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>tiledb/api/c_api/api_external_common.h</label>
      </node>
      <node id="4">
        <label>tiledb/api/c_api/buffer/buffer_api_external.h</label>
      </node>
      <node id="5">
        <label>tiledb/api/c_api/config/config_api_external.h</label>
      </node>
      <node id="6">
        <label>tiledb/api/c_api/context/context_api_external.h</label>
      </node>
      <node id="7">
        <label>tiledb/api/c_api/data_order/data_order_api_external.h</label>
      </node>
      <node id="8">
        <label>tiledb/api/c_api/datatype/datatype_api_external.h</label>
      </node>
      <node id="9">
        <label>tiledb/api/c_api/error/error_api_external.h</label>
      </node>
      <node id="10">
        <label>tiledb/api/c_api/filesystem/filesystem_api_external.h</label>
      </node>
      <node id="11">
        <label>tiledb/api/c_api/filter/filter_api_external.h</label>
      </node>
      <node id="12">
        <label>tiledb/api/c_api/filter_list/filter_list_api_external.h</label>
      </node>
      <node id="13">
        <label>tiledb/api/c_api/group/group_api_external.h</label>
      </node>
      <node id="14">
        <label>tiledb/api/c_api/object/object_api_external.h</label>
      </node>
      <node id="15">
        <label>tiledb/api/c_api/query/query_api_external.h</label>
      </node>
      <node id="16">
        <label>tiledb/api/c_api/vfs/vfs_api_external.h</label>
      </node>
      <node id="19">
        <label>tiledb_enum.h</label>
      </node>
      <node id="2">
        <label>tiledb_version.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h</label>
        <link refid="tiledb_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_experimental.h</label>
        <link refid="tiledb__experimental_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h</label>
        <link refid="tiledb__serialization_8h_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="user-defined">
      <header>Constants wrapping special functions</header>
      <memberdef kind="define" id="tiledb_8h_1a026a89c626a68d647f30a9e345d295e7" prot="public" static="no">
        <name>TILEDB_VAR_NUM</name>
        <initializer>tiledb_var_num()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A special value indicating a variable number of elements. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="252" column="9" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tiledb_8h_1a00f795cd2101641b4de032d6726e08d0" prot="public" static="no">
        <name>TILEDB_MAX_PATH</name>
        <initializer>tiledb_max_path()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The maximum path length on the current platform. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="254" column="9" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tiledb_8h_1a02a6471864b04abd7d056dfd691a9813" prot="public" static="no">
        <name>TILEDB_OFFSET_SIZE</name>
        <initializer>tiledb_offset_size()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The size (in bytes) of an offset (used in variable-sized attributes). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="256" column="9" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tiledb_8h_1a2dfd4a5da73401ca14fd0eba6bda87ff" prot="public" static="no">
        <name>TILEDB_TIMESTAMP_NOW_MS</name>
        <initializer>tiledb_timestamp_now_ms()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The current time in milliseconds. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="258" column="9" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tiledb_8h_1a542436d98a8243c0a16cdf1371c779f5" prot="public" static="no">
        <name>TILEDB_TIMESTAMPS</name>
        <initializer>tiledb_timestamps()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A special name indicating the timestamps attribute. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="260" column="9" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="tiledb_8h_1a0673460f6eb0750c4d1ce3dd4e507896" prot="public" static="no">
        <name>TILEDB_QUERY_STATUS_ENUM</name>
        <param><defname>id</defname></param>
        <initializer>TILEDB_##id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro for defining query status enums. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="86" column="9" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tiledb_8h_1a9690e7bb39aa6dc6f8135ad1f0f4404f" prot="public" static="no">
        <name>TILEDB_QUERY_CONDITION_OP_ENUM</name>
        <param><defname>id</defname></param>
        <initializer>TILEDB_##id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro for defining query condition operator enums. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="94" column="9" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tiledb_8h_1aea882dc56aa7cc1281e6a4b8b94866db" prot="public" static="no">
        <name>TILEDB_QUERY_CONDITION_COMBINATION_OP_ENUM</name>
        <param><defname>id</defname></param>
        <initializer>TILEDB_##id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro for defining query condition combination operator enums. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="102" column="9" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tiledb_8h_1a9c14f892bd7171a268b330b4af87b1eb" prot="public" static="no">
        <name>TILEDB_ARRAY_TYPE_ENUM</name>
        <param><defname>id</defname></param>
        <initializer>TILEDB_##id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro for defining array type enums. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="110" column="9" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tiledb_8h_1a28303b1a95d07945912ae8a9f310a3fa" prot="public" static="no">
        <name>TILEDB_LAYOUT_ENUM</name>
        <param><defname>id</defname></param>
        <initializer>TILEDB_##id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro for defining layout type enums. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="118" column="9" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tiledb_8h_1a6780e4cf0cb926f343d80f24b8ee5818" prot="public" static="no">
        <name>TILEDB_ENCRYPTION_TYPE_ENUM</name>
        <param><defname>id</defname></param>
        <initializer>TILEDB_##id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro for defining encryption enums. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="126" column="9" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tiledb_8h_1a37be890b7596567d34a1baa42ff1437f" prot="public" static="no">
        <name>TILEDB_MIME_TYPE_ENUM</name>
        <param><defname>id</defname></param>
        <initializer>TILEDB_##id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro for defining MimeType enums. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="134" column="9" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="tiledb_8h_1aee73abf7a3ef3f631a10b645b316cc91" prot="public" static="no" strong="no">
        <type></type>
        <name>tiledb_query_status_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Query status. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="84" column="1" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="84" bodyend="89"/>
      </memberdef>
      <memberdef kind="enum" id="tiledb_8h_1a2c31d65d7687370c93604034d467aaea" prot="public" static="no" strong="no">
        <type></type>
        <name>tiledb_query_condition_op_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Query condition operator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="92" column="1" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="enum" id="tiledb_8h_1accbb81e89d791cd99940428f747e741e" prot="public" static="no" strong="no">
        <type></type>
        <name>tiledb_query_condition_combination_op_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Query condition combination operator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="100" column="1" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="100" bodyend="105"/>
      </memberdef>
      <memberdef kind="enum" id="tiledb_8h_1ae529823dcc8fbdc51bbf5b6148606fd5" prot="public" static="no" strong="no">
        <type></type>
        <name>tiledb_array_type_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Array type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="108" column="1" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="108" bodyend="113"/>
      </memberdef>
      <memberdef kind="enum" id="tiledb_8h_1a470f1d4c7e9b523e710318327feb91f9" prot="public" static="no" strong="no">
        <type></type>
        <name>tiledb_layout_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tile or cell layout. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="116" column="1" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="116" bodyend="121"/>
      </memberdef>
      <memberdef kind="enum" id="tiledb_8h_1afa33b59b0a3fc59f3b55146ddcaa36d3" prot="public" static="no" strong="no">
        <type></type>
        <name>tiledb_encryption_type_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encryption type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="124" column="1" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="124" bodyend="129"/>
      </memberdef>
      <memberdef kind="enum" id="tiledb_8h_1a9a33ca69346a9ccaec79bc92acfa1f81" prot="public" static="no" strong="no">
        <type></type>
        <name>tiledb_mime_type_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MIME Type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="132" column="1" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="132" bodyend="137"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="tiledb_8h_1a3fd75cdc8527167aef9951c2c1100370" prot="public" static="no">
        <type>struct tiledb_array_t</type>
        <definition>typedef struct tiledb_array_t tiledb_array_t</definition>
        <argsstring></argsstring>
        <name>tiledb_array_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An array object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="282" column="29" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tiledb_8h_1a5335feccac2b0e2d16c0b3e375c6dc4b" prot="public" static="no">
        <type>struct tiledb_subarray_t</type>
        <definition>typedef struct tiledb_subarray_t tiledb_subarray_t</definition>
        <argsstring></argsstring>
        <name>tiledb_subarray_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A subarray object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="285" column="32" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tiledb_8h_1af855376226ecab016be1cf0e93f21a3d" prot="public" static="no">
        <type>struct tiledb_buffer_list_t</type>
        <definition>typedef struct tiledb_buffer_list_t tiledb_buffer_list_t</definition>
        <argsstring></argsstring>
        <name>tiledb_buffer_list_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A generic buffer list object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="288" column="35" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tiledb_8h_1a691f99f4815c8c9c8aece2941b1776e4" prot="public" static="no">
        <type>struct tiledb_attribute_t</type>
        <definition>typedef struct tiledb_attribute_t tiledb_attribute_t</definition>
        <argsstring></argsstring>
        <name>tiledb_attribute_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A TileDB attribute. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="291" column="33" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tiledb_8h_1ae658e7af7ce4ec0217b1c3a109a5952e" prot="public" static="no">
        <type>struct tiledb_array_schema_t</type>
        <definition>typedef struct tiledb_array_schema_t tiledb_array_schema_t</definition>
        <argsstring></argsstring>
        <name>tiledb_array_schema_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A TileDB array schema. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="294" column="36" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tiledb_8h_1acfb893dcf2dbdfc5117adf8d92b5a6af" prot="public" static="no">
        <type>struct tiledb_dimension_t</type>
        <definition>typedef struct tiledb_dimension_t tiledb_dimension_t</definition>
        <argsstring></argsstring>
        <name>tiledb_dimension_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A TileDB dimension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="297" column="33" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tiledb_8h_1aaa0e88dd37512d014a2ccb1bc25e5686" prot="public" static="no">
        <type>struct tiledb_domain_t</type>
        <definition>typedef struct tiledb_domain_t tiledb_domain_t</definition>
        <argsstring></argsstring>
        <name>tiledb_domain_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A TileDB domain. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="300" column="30" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tiledb_8h_1a10761aa376034d5dcc32ddd840b91670" prot="public" static="no">
        <type>struct tiledb_query_t</type>
        <definition>typedef struct tiledb_query_t tiledb_query_t</definition>
        <argsstring></argsstring>
        <name>tiledb_query_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A TileDB query. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="303" column="29" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tiledb_8h_1a84a23fb95cbe8b6c4110d05e60cc5f4a" prot="public" static="no">
        <type>struct tiledb_query_condition_t</type>
        <definition>typedef struct tiledb_query_condition_t tiledb_query_condition_t</definition>
        <argsstring></argsstring>
        <name>tiledb_query_condition_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A TileDB query condition object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="306" column="39" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tiledb_8h_1a58fa45ef5ad20c165fadc30eb0db0fbc" prot="public" static="no">
        <type>struct tiledb_fragment_info_t</type>
        <definition>typedef struct tiledb_fragment_info_t tiledb_fragment_info_t</definition>
        <argsstring></argsstring>
        <name>tiledb_fragment_info_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A fragment info object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="309" column="37" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tiledb_8h_1a1ee5344644e409a10f4c4dfd364114f4" prot="public" static="no">
        <type>struct tiledb_consolidation_plan_t</type>
        <definition>typedef struct tiledb_consolidation_plan_t tiledb_consolidation_plan_t</definition>
        <argsstring></argsstring>
        <name>tiledb_consolidation_plan_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A consolidation plan object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="312" column="42" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tiledb_8h_1a5d22ed540eca75bfa411087d1d1c2ad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_type_to_str</definition>
        <argsstring>(tiledb_array_type_t array_type, const char **str) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_type_to_str</name>
        <param>
          <type>tiledb_array_type_t</type>
          <declname>array_type</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a string representation of the given array type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Array type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to point to a constant string representation of the array type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="150" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="150" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aae2944e0d8ca42ce0430254db575bfe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_type_from_str</definition>
        <argsstring>(const char *str, tiledb_array_type_t *array_type) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_type_from_str</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>tiledb_array_type_t *</type>
          <declname>array_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses a array type from the given string.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String representation to parse </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to the parsed array type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="160" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="160" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ade616be07f594a873608db74bb54eb6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_layout_to_str</definition>
        <argsstring>(tiledb_layout_t layout, const char **str) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_layout_to_str</name>
        <param>
          <type>tiledb_layout_t</type>
          <declname>layout</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a string representation of the given layout.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>Layout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to point to a constant string representation of the layout </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="171" column="1" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="171" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a4cccaa016cfb0a683da2c7d69717b7ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_layout_from_str</definition>
        <argsstring>(const char *str, tiledb_layout_t *layout) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_layout_from_str</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>tiledb_layout_t *</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses a layout from the given string.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String representation to parse </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to the parsed layout </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="180" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="180" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1af89e21a8d5dd28980698e8bca00ed72b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_encryption_type_to_str</definition>
        <argsstring>(tiledb_encryption_type_t encryption_type, const char **str) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_encryption_type_to_str</name>
        <param>
          <type>tiledb_encryption_type_t</type>
          <declname>encryption_type</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a string representation of the given encryption type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>encryption_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Encryption type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to point to a constant string representation of the encryption type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="191" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="191" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a708ca704369dc9fe6806cc1c97a2facd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_encryption_type_from_str</definition>
        <argsstring>(const char *str, tiledb_encryption_type_t *encryption_type) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_encryption_type_from_str</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>tiledb_encryption_type_t *</type>
          <declname>encryption_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses a encryption type from the given string.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String representation to parse </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encryption_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to the parsed encryption type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="201" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="201" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a234f70af094357e5e3963b525ef7573f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_status_to_str</definition>
        <argsstring>(tiledb_query_status_t query_status, const char **str) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_status_to_str</name>
        <param>
          <type>tiledb_query_status_t</type>
          <declname>query_status</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a string representation of the given query status.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>query_status</parametername>
</parameternamelist>
<parameterdescription>
<para>Query status </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to point to a constant string representation of the query status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="212" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="212" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a86c6eb380fbe3fef53fa2927f0fbb68c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_status_from_str</definition>
        <argsstring>(const char *str, tiledb_query_status_t *query_status) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_status_from_str</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>tiledb_query_status_t *</type>
          <declname>query_status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses a query status from the given string.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String representation to parse </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query_status</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to the parsed query status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="222" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="222" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a5567ef7a51a21f6dfbb3fca8492213a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT uint32_t</type>
        <definition>TILEDB_EXPORT uint32_t tiledb_var_num</definition>
        <argsstring>(void) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_var_num</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a special value indicating a variable number of elements. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="230" column="24" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="230" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aa665634be41b3ba726654acf1c52c00f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT uint32_t</type>
        <definition>TILEDB_EXPORT uint32_t tiledb_max_path</definition>
        <argsstring>(void) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_max_path</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the maximum path length on the current platform. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="233" column="24" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="233" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1adf4d63878041107b01579ec8f8354584" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT uint64_t</type>
        <definition>TILEDB_EXPORT uint64_t tiledb_offset_size</definition>
        <argsstring>(void) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_offset_size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the size (in bytes) of an offset (used in variable-sized attributes). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="239" column="24" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="239" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a829abd6dd9fff2f7a83c5798bb6d127a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT uint64_t</type>
        <definition>TILEDB_EXPORT uint64_t tiledb_timestamp_now_ms</definition>
        <argsstring>(void) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_timestamp_now_ms</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the current time in milliseconds. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="242" column="24" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="242" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a2dc5937cb09913e483fe8034145444ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT const char *</type>
        <definition>TILEDB_EXPORT const char * tiledb_timestamps</definition>
        <argsstring>(void) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_timestamps</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a special name indicating the timestamps attribute. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="245" column="26" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="245" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aa0accfa8c757c356dad8293e652da641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT void</type>
        <definition>TILEDB_EXPORT void tiledb_version</definition>
        <argsstring>(int32_t *major, int32_t *minor, int32_t *rev) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_version</name>
        <param>
          <type>int32_t *</type>
          <declname>major</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>minor</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>rev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the version of the TileDB library currently being used.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>major</parametername>
</parameternamelist>
<parameterdescription>
<para>Will store the major version number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minor</parametername>
</parameternamelist>
<parameterdescription>
<para>Will store the minor version number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rev</parametername>
</parameternamelist>
<parameterdescription>
<para>Will store the revision (patch) number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="274" column="20" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="274" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a64c2ebaf79fe678c6f44a02695d57e72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_buffer_list_alloc</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_buffer_list_t **buffer_list) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_buffer_list_alloc</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_buffer_list_t **</type>
          <declname>buffer_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an empty buffer list object.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_buffer_list_t*<sp/>buffer_list;</highlight></codeline>
<codeline><highlight class="normal">tiledb_buffer_list_alloc(ctx,<sp/>&amp;buffer_list);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer list to be created </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="332" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="332" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a269f91f8c61bfdde9f022391dc227b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT void</type>
        <definition>TILEDB_EXPORT void tiledb_buffer_list_free</definition>
        <argsstring>(tiledb_buffer_list_t **buffer_list) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_buffer_list_free</name>
        <param>
          <type>tiledb_buffer_list_t **</type>
          <declname>buffer_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroys a TileDB buffer list, freeing associated memory.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_buffer_t*<sp/>buffer_list;</highlight></codeline>
<codeline><highlight class="normal">tiledb_buffer_list_alloc(ctx,<sp/>&amp;buffer_list);</highlight></codeline>
<codeline><highlight class="normal">tiledb_buffer_list_free(&amp;buffer_list);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer list to be destroyed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="348" column="20" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="348" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a84c221136c4048e657b6a0b9e3aee005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_buffer_list_get_num_buffers</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_buffer_list_t *buffer_list, uint64_t *num_buffers) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_buffer_list_get_num_buffers</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_buffer_list_t *</type>
          <declname>buffer_list</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>num_buffers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the number of buffers in the buffer list.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_buffer_list_t*<sp/>buffer_list;</highlight></codeline>
<codeline><highlight class="normal">tiledb_buffer_list_alloc(ctx,<sp/>&amp;buffer_list);</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>num_buffers;</highlight></codeline>
<codeline><highlight class="normal">tiledb_buffer_list_get_num_buffers(ctx,<sp/>buffer_list,<sp/>&amp;num_buffers);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>num_buffers<sp/>==<sp/>0<sp/>because<sp/>the<sp/>list<sp/>is<sp/>empty.</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer list. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_buffers</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to the number of buffers in the buffer list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="369" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="369" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a8f0fb6805bdb9e801eb72fb14bba2559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_buffer_list_get_buffer</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_buffer_list_t *buffer_list, uint64_t buffer_idx, tiledb_buffer_t **buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_buffer_list_get_buffer</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_buffer_list_t *</type>
          <declname>buffer_list</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>buffer_idx</declname>
        </param>
        <param>
          <type>tiledb_buffer_t **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the buffer at the given index in the buffer list. The returned buffer object is simply a pointer to memory managed by the underlying buffer list, meaning this function does not perform a copy.</para>
<para>It is the caller&apos;s responsibility to free the returned buffer with <computeroutput>tiledb_buffer_free</computeroutput>. Since the returned buffer object does not &quot;own&quot; the underlying allocation, the underlying allocation is not freed when freeing it with <computeroutput>tiledb_buffer_free</computeroutput>.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_buffer_list_t*<sp/>buffer_list;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>and<sp/>populate<sp/>the<sp/>buffer_list</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>buffer<sp/>at<sp/>index<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_buffer_t<sp/>*buff0;</highlight></codeline>
<codeline><highlight class="normal">tiledb_buffer_list_get_buffer(ctx,<sp/>buffer_list,<sp/>0,<sp/>&amp;buff0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Always<sp/>free<sp/>the<sp/>returned<sp/>buffer<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_buffer_free(&amp;buff0);</highlight></codeline>
<codeline><highlight class="normal">tiledb_buffer_list_free(&amp;buffer_list);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer list. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of buffer to get from the buffer list. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to a newly allocated buffer object pointing to the underlying allocation in the buffer list corresponding to the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="406" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="406" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a9a690e3571d82252b1b143503f4f4683" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_buffer_list_get_total_size</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_buffer_list_t *buffer_list, uint64_t *total_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_buffer_list_get_total_size</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_buffer_list_t *</type>
          <declname>buffer_list</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>total_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the total number of bytes in the buffers in the buffer list.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_buffer_list_t*<sp/>buffer_list;</highlight></codeline>
<codeline><highlight class="normal">tiledb_buffer_list_alloc(ctx,<sp/>&amp;buffer_list);</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>total_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_buffer_list_get_total_size(ctx,<sp/>buffer_list,<sp/>&amp;total_size);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>total_size<sp/>==<sp/>0<sp/>because<sp/>the<sp/>list<sp/>is<sp/>empty.</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer list. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>total_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to the total number of bytes in the buffers in the buffer list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="431" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="431" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1af987164088c99971efbb1188c14fb086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_buffer_list_flatten</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_buffer_list_t *buffer_list, tiledb_buffer_t **buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_buffer_list_flatten</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_buffer_list_t *</type>
          <declname>buffer_list</declname>
        </param>
        <param>
          <type>tiledb_buffer_t **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copies and concatenates all the data in the buffer list into a new buffer.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_buffer_t*<sp/>buff;</highlight></codeline>
<codeline><highlight class="normal">tiledb_buffer_list_flatten(ctx,<sp/>buffer_list,<sp/>&amp;buff);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_buffer_free(&amp;buff);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer list. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated buffer holding a copy of the concatenated data from the buffer list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="454" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="454" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1af33a390756f9000b35bc4cbea6e4cbf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_attribute_alloc</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *name, tiledb_datatype_t type, tiledb_attribute_t **attr) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_attribute_alloc</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>tiledb_datatype_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>tiledb_attribute_t **</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a TileDB attribute.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_attribute_t*<sp/>attr;</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;my_attr&quot;</highlight><highlight class="normal">,<sp/>TILEDB_INT32,<sp/>&amp;attr);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute name. Providing an empty string for the name creates an anonymous attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB attribute to be created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>The default number of values per cell is 1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="482" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="482" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ad1d149c48b1316c666ca72488f9d967c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT void</type>
        <definition>TILEDB_EXPORT void tiledb_attribute_free</definition>
        <argsstring>(tiledb_attribute_t **attr) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_attribute_free</name>
        <param>
          <type>tiledb_attribute_t **</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroys a TileDB attribute, freeing associated memory.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_attribute_t*<sp/>attr;</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;my_attr&quot;</highlight><highlight class="normal">,<sp/>TILEDB_INT32,<sp/>&amp;attr);</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_free(&amp;attr);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute to be destroyed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="501" column="20" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="501" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1af1ec5648845d24c167307129c25376fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_attribute_set_nullable</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_attribute_t *attr, uint8_t nullable) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_attribute_set_nullable</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_attribute_t *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>nullable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the nullability of an attribute.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_attribute_set_nullable(ctx,<sp/>attr,<sp/>1);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The target attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nullable</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-zero if the attribute is nullable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="518" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="518" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aa128c731989d7d2b44fdd283103510a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_attribute_set_filter_list</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_attribute_t *attr, tiledb_filter_list_t *filter_list) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_attribute_set_filter_list</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_attribute_t *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>tiledb_filter_list_t *</type>
          <declname>filter_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the filter list for an attribute.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_filter_list_t*<sp/>filter_list;</highlight></codeline>
<codeline><highlight class="normal">tiledb_filter_list_alloc(ctx,<sp/>&amp;filter_list);</highlight></codeline>
<codeline><highlight class="normal">tiledb_filter_list_add_filter(ctx,<sp/>filter_list,<sp/>filter);</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_set_filter_list(ctx,<sp/>attr,<sp/>filter_list);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The target attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The filter_list to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="540" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="540" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a851b9d3ed070f39d204be49076fe4bb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_attribute_set_cell_val_num</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_attribute_t *attr, uint32_t cell_val_num) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_attribute_set_cell_val_num</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_attribute_t *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cell_val_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the number of values per cell for an attribute. If this is not used, the default is <computeroutput>1</computeroutput>.</para>
<para><bold>Examples:</bold></para>
<para>For a fixed-sized attribute:</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_attribute_set_cell_val_num(ctx,<sp/>attr,<sp/>3);</highlight></codeline>
</programlisting></para>
<para>For a variable-sized attribute:</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_attribute_set_cell_val_num(ctx,<sp/>attr,<sp/>TILEDB_VAR_NUM);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The target attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_val_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of values per cell. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="568" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="568" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a769fd1b945101fea258354f33eec610d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_attribute_get_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_attribute_t *attr, const char **name) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_attribute_get_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_attribute_t *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the attribute name.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>attr_name;</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_get_name(ctx,<sp/>attr,<sp/>&amp;attr_name);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="588" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="588" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a06c2cf9873578ed79db735bca22e1cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_attribute_get_type</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_attribute_t *attr, tiledb_datatype_t *type) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_attribute_get_type</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_attribute_t *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>tiledb_datatype_t *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the attribute type.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_datatype_t<sp/>attr_type;</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_get_type(ctx,<sp/>attr,<sp/>&amp;attr_type);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="608" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="608" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1adac7466f4661351641b168f3cc9f7337" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_attribute_get_nullable</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_attribute_t *attr, uint8_t *nullable) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_attribute_get_nullable</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_attribute_t *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>nullable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the nullability of an attribute.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint8_t<sp/>nullable;</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_get_nullable(ctx,<sp/>attr,<sp/>&amp;nullable);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The target attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nullable</parametername>
</parameternamelist>
<parameterdescription>
<para>Output argument, non-zero for nullable and zero for non-nullable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="629" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="629" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a440b595d9620d55fa250cb225150d5ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_attribute_get_filter_list</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_attribute_t *attr, tiledb_filter_list_t **filter_list) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_attribute_get_filter_list</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_attribute_t *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>tiledb_filter_list_t **</type>
          <declname>filter_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the filter list for an attribute.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_filter_list_t*<sp/>filter_list;</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_get_filter_list(ctx,<sp/>attr,<sp/>&amp;filter_list);</highlight></codeline>
<codeline><highlight class="normal">tiledb_filter_list_free(&amp;filter_list);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The target attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The filter list to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="650" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="650" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aedbff19b797e45fc8cdaf8a39511faee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_attribute_get_cell_val_num</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_attribute_t *attr, uint32_t *cell_val_num) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_attribute_get_cell_val_num</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_attribute_t *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>cell_val_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the number of values per cell for the attribute. For variable-sized attributes result is TILEDB_VAR_NUM.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint32_t<sp/>num;</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_get_cell_val_num(ctx,<sp/>attr,<sp/>&amp;num);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_val_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of values per cell to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="671" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="671" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a9fc3bec5bc040989417956dcc0b520ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_attribute_get_cell_size</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_attribute_t *attr, uint64_t *cell_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_attribute_get_cell_size</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_attribute_t *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>cell_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the cell size for this attribute.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>cell_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_get_cell_size(ctx,<sp/>attr,<sp/>&amp;cell_size);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The cell size to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="691" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="691" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ab302b60b066278030987fab7575784a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_attribute_dump</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_attribute_t *attr, FILE *out) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_attribute_dump</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_attribute_t *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dumps the contents of an attribute in ASCII form to some output (e.g., file or stdout).</para>
<para><bold>Example:</bold></para>
<para>The following prints the attribute dump to standard output.</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_attribute_dump(ctx,<sp/>attr,<sp/>stdout);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error./ </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="713" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="713" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a099d6b63a78de84a195d2451e1bb2d59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_attribute_set_fill_value</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_attribute_t *attr, const void *value, uint64_t size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_attribute_set_fill_value</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_attribute_t *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the default fill value for the input attribute. This value will be used for the input attribute whenever querying (1) an empty cell in a dense array, or (2) a non-empty cell (in either dense or sparse array) when values on the input attribute are missing (e.g., if the user writes a subset of the attributes in a write operation).</para>
<para>Applicable to var-sized attributes.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="comment">//<sp/>Assumming<sp/>a<sp/>int32<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value);</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_set_fill_value(ctx,<sp/>attr,<sp/>&amp;value,<sp/>size);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Assumming<sp/>a<sp/>var<sp/>char<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>size<sp/>=<sp/>strlen(value);</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_set_fill_value(ctx,<sp/>attr,<sp/>value,<sp/>size);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The target attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The fill value to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The fill value size in bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>A call to <computeroutput>tiledb_attribute_cell_val_num</computeroutput> sets the fill value of the attribute to its default. Therefore, make sure you invoke <computeroutput>tiledb_attribute_set_fill_value</computeroutput> after deciding on the number of values this attribute will hold in each cell.</para>
</simplesect>
<simplesect kind="note"><para>For fixed-sized attributes, the input <computeroutput>size</computeroutput> should be equal to the cell size. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="755" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="755" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ace91d9570b02a3f208dcf018e5e97dac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_attribute_get_fill_value</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_attribute_t *attr, const void **value, uint64_t *size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_attribute_get_fill_value</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_attribute_t *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the default fill value for the input attribute. This value will be used for the input attribute whenever querying (1) an empty cell in a dense array, or (2) a non-empty cell (in either dense or sparse array) when values on the input attribute are missing (e.g., if the user writes a subset of the attributes in a write operation).</para>
<para>Applicable to both fixed-sized and var-sized attributes.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="comment">//<sp/>Assuming<sp/>a<sp/>int32<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t*<sp/>value;</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_get_fill_value(ctx,<sp/>attr,<sp/>&amp;value,<sp/>&amp;size);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Assuming<sp/>a<sp/>var<sp/>char<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value;</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_get_fill_value(ctx,<sp/>attr,<sp/>&amp;value,<sp/>&amp;size);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The target attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the fill value to get. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the fill value to get. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="790" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="790" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1adc0a1ec11acbcb0d7d5aab3fa91d43e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_attribute_set_fill_value_nullable</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_attribute_t *attr, const void *value, uint64_t size, uint8_t validity) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_attribute_set_fill_value_nullable</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_attribute_t *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>validity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the default fill value for the input, nullable attribute. This value will be used for the input attribute whenever querying (1) an empty cell in a dense array, or (2) a non-empty cell (in either dense or sparse array) when values on the input attribute are missing (e.g., if the user writes a subset of the attributes in a write operation).</para>
<para>Applicable to var-sized attributes.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="comment">//<sp/>Assumming<sp/>a<sp/>int32<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value);</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>valid<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_set_fill_value_nullable(ctx,<sp/>attr,<sp/>&amp;value,<sp/>size,<sp/>valid);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Assumming<sp/>a<sp/>var<sp/>char<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>size<sp/>=<sp/>strlen(value);</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>valid<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_set_fill_value_nullable(ctx,<sp/>attr,<sp/>value,<sp/>size,<sp/>valid);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The target attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The fill value to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The fill value size in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>validity</parametername>
</parameternamelist>
<parameterdescription>
<para>The validity fill value, zero for a null value and non-zero for a valid attribute. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>A call to <computeroutput>tiledb_attribute_cell_val_num</computeroutput> sets the fill value of the attribute to its default. Therefore, make sure you invoke <computeroutput>tiledb_attribute_set_fill_value_nullable</computeroutput> after deciding on the number of values this attribute will hold in each cell.</para>
</simplesect>
<simplesect kind="note"><para>For fixed-sized attributes, the input <computeroutput>size</computeroutput> should be equal to the cell size. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="837" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="837" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a47c23662411065215ddcc166d1cf7dc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_attribute_get_fill_value_nullable</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_attribute_t *attr, const void **value, uint64_t *size, uint8_t *valid) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_attribute_get_fill_value_nullable</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_attribute_t *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>valid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the default fill value for the input, nullable attribute. This value will be used for the input attribute whenever querying (1) an empty cell in a dense array, or (2) a non-empty cell (in either dense or sparse array) when values on the input attribute are missing (e.g., if the user writes a subset of the attributes in a write operation).</para>
<para>Applicable to both fixed-sized and var-sized attributes.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="comment">//<sp/>Assuming<sp/>a<sp/>int32<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t*<sp/>value;</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>size;</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>valid;</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_get_fill_value_nullable(ctx,<sp/>attr,<sp/>&amp;value,<sp/>&amp;size,<sp/>&amp;valid);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Assuming<sp/>a<sp/>var<sp/>char<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value;</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>size;</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>valid;</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_get_fill_value_nullable(ctx,<sp/>attr,<sp/>&amp;value,<sp/>&amp;size,<sp/>&amp;valid);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The target attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the fill value to get. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the fill value to get. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valid</parametername>
</parameternamelist>
<parameterdescription>
<para>The fill value validity to get. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="876" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="876" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1abe691d20d1e565837bf18bcd8c2e7565" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_domain_alloc</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_domain_t **domain) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_domain_alloc</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_domain_t **</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a TileDB domain.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_domain_t*<sp/>domain;</highlight></codeline>
<codeline><highlight class="normal">tiledb_domain_alloc(ctx,<sp/>&amp;domain);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB domain to be created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="901" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="901" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aa4d41b5c7737e3a81ad60017406edaf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT void</type>
        <definition>TILEDB_EXPORT void tiledb_domain_free</definition>
        <argsstring>(tiledb_domain_t **domain) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_domain_free</name>
        <param>
          <type>tiledb_domain_t **</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroys a TileDB domain, freeing associated memory.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_domain_t*<sp/>domain;</highlight></codeline>
<codeline><highlight class="normal">tiledb_domain_alloc(ctx,<sp/>&amp;domain);</highlight></codeline>
<codeline><highlight class="normal">tiledb_domain_free(&amp;domain);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain to be destroyed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="917" column="20" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="917" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a7d11eeddafc30936f9836ba8e0226cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_domain_get_type</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_domain_t *domain, tiledb_datatype_t *type) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_domain_get_type</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_domain_t *</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>tiledb_datatype_t *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the domain&apos;s type.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_datatype_t<sp/>type;</highlight></codeline>
<codeline><highlight class="normal">tiledb_domain_get_type(ctx,<sp/>domain,<sp/>&amp;type);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="934" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="934" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ac34b403827b3317d08f80365ee262c85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_domain_get_ndim</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_domain_t *domain, uint32_t *ndim) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_domain_get_ndim</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_domain_t *</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>ndim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the number of dimensions in a domain.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint32_t<sp/>dim_num;</highlight></codeline>
<codeline><highlight class="normal">tiledb_domain_get_ndim(ctx,<sp/>domain,<sp/>&amp;dim_num);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of dimensions in a domain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="954" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="954" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1af321869ef3c5abec434d87ec4dc5a7b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_domain_add_dimension</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_domain_t *domain, tiledb_dimension_t *dim) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_domain_add_dimension</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_domain_t *</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>tiledb_dimension_t *</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a dimension to a TileDB domain.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_dimension_t*<sp/>dim;</highlight></codeline>
<codeline><highlight class="normal">int64_t<sp/>dim_domain[]<sp/>=<sp/>{1,<sp/>10};</highlight></codeline>
<codeline><highlight class="normal">int64_t<sp/>tile_extent<sp/>=<sp/>5;</highlight></codeline>
<codeline><highlight class="normal">tiledb_dimension_alloc(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/></highlight><highlight class="stringliteral">&quot;dim_0&quot;</highlight><highlight class="normal">,<sp/>TILEDB_INT64,<sp/>dim_domain,<sp/>&amp;tile_extent,<sp/>&amp;dim);</highlight></codeline>
<codeline><highlight class="normal">tiledb_domain_add_dimension(ctx,<sp/>domain,<sp/>dim);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain to add the dimension to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="978" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="978" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a68aef1b42e4a9272ef23f56c5344ce9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_domain_get_dimension_from_index</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_domain_t *domain, uint32_t index, tiledb_dimension_t **dim) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_domain_get_dimension_from_index</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_domain_t *</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>tiledb_dimension_t **</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a dimension object from a domain by index.</para>
<para><bold>Example:</bold></para>
<para>The following retrieves the first dimension from a domain.</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_dimension_t*<sp/>dim;</highlight></codeline>
<codeline><highlight class="normal">tiledb_domain_get_dimension_from_index(ctx,<sp/>domain,<sp/>0,<sp/>&amp;dim);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain to add the dimension to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of domain dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The retrieved dimension object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1001" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1001" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1af4cd36ce6b6469b4647cc54f034f48b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_domain_get_dimension_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_domain_t *domain, const char *name, tiledb_dimension_t **dim) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_domain_get_dimension_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_domain_t *</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>tiledb_dimension_t **</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a dimension object from a domain by name (key).</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_dimension_t*<sp/>dim;</highlight></codeline>
<codeline><highlight class="normal">tiledb_domain_get_dimension_from_name(ctx,<sp/>domain,<sp/></highlight><highlight class="stringliteral">&quot;dim_0&quot;</highlight><highlight class="normal">,<sp/>&amp;dim);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain to add the dimension to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name (key) of the requested dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The retrieved dimension object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1023" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1023" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a9da788bd82e4ec62f3197541356791ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_domain_has_dimension</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_domain_t *domain, const char *name, int32_t *has_dim) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_domain_has_dimension</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_domain_t *</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>has_dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks whether the domain has a dimension of the given name.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">int32_t<sp/>has_dim;</highlight></codeline>
<codeline><highlight class="normal">tiledb_domain_has_dimension(ctx,<sp/>domain,<sp/></highlight><highlight class="stringliteral">&quot;dim_0&quot;</highlight><highlight class="normal">,<sp/>&amp;has_dim);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the dimension to check for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>has_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to <computeroutput>1</computeroutput> if the domain has a dimension of the given name, else <computeroutput>0</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1046" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1046" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a9cf9f1558ba50831cf8ea5a45de2722b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_domain_dump</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_domain_t *domain, FILE *out) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_domain_dump</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_domain_t *</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dumps the info of a domain in ASCII form to some output (e.g., file or <computeroutput>stdout</computeroutput>).</para>
<para><bold>Example:</bold></para>
<para>The following prints the domain dump to the standard output.</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_domain_dump(ctx,<sp/>domain,<sp/>stdout);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1069" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1069" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1abcd82730a995d4e68d1d75d7cecaa904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_dimension_alloc</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *name, tiledb_datatype_t type, const void *dim_domain, const void *tile_extent, tiledb_dimension_t **dim) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_dimension_alloc</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>tiledb_datatype_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>dim_domain</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>tile_extent</declname>
        </param>
        <param>
          <type>tiledb_dimension_t **</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a dimension.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_dimension_t*<sp/>dim;</highlight></codeline>
<codeline><highlight class="normal">int64_t<sp/>dim_domain[]<sp/>=<sp/>{1,<sp/>10};</highlight></codeline>
<codeline><highlight class="normal">int64_t<sp/>tile_extent<sp/>=<sp/>5;</highlight></codeline>
<codeline><highlight class="normal">tiledb_dimension_alloc(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/></highlight><highlight class="stringliteral">&quot;dim_0&quot;</highlight><highlight class="normal">,<sp/>TILEDB_INT64,<sp/>dim_domain,<sp/>&amp;tile_extent,<sp/>&amp;dim);</highlight></codeline>
</programlisting></para>
<para>Note: as laid out in the Storage Format, the following Datatypes are not valid for Dimension: TILEDB_CHAR, TILEDB_BLOB, TILEDB_BOOL, TILEDB_STRING_UTF8, TILEDB_STRING_UTF16, TILEDB_STRING_UTF32, TILEDB_STRING_UCS2, TILEDB_STRING_UCS4, TILEDB_ANY</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tile_extent</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension tile extent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension to be created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1105" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1105" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ae9a6b91f99a6f132e429315efa2cb6f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT void</type>
        <definition>TILEDB_EXPORT void tiledb_dimension_free</definition>
        <argsstring>(tiledb_dimension_t **dim) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_dimension_free</name>
        <param>
          <type>tiledb_dimension_t **</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroys a TileDB dimension, freeing associated memory.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_dimension_free(&amp;dim);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension to be destroyed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1124" column="20" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1124" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a6f66013abc3ab9fa2f8c14add1272b94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_dimension_set_filter_list</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_dimension_t *dim, tiledb_filter_list_t *filter_list) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_dimension_set_filter_list</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_dimension_t *</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>tiledb_filter_list_t *</type>
          <declname>filter_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the filter list for a dimension.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_filter_list_t*<sp/>filter_list;</highlight></codeline>
<codeline><highlight class="normal">tiledb_filter_list_alloc(ctx,<sp/>&amp;filter_list);</highlight></codeline>
<codeline><highlight class="normal">tiledb_filter_list_add_filter(ctx,<sp/>filter_list,<sp/>filter);</highlight></codeline>
<codeline><highlight class="normal">tiledb_dimension_set_filter_list(ctx,<sp/>dim,<sp/>filter_list);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The target dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The filter_list to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1144" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1144" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a79e8ed0bfde8aa94c5af3b1c2c853ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_dimension_set_cell_val_num</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_dimension_t *dim, uint32_t cell_val_num) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_dimension_set_cell_val_num</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_dimension_t *</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cell_val_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the number of values per cell for a dimension. If this is not used, the default is <computeroutput>1</computeroutput>.</para>
<para><bold>Examples:</bold></para>
<para>For a fixed-sized dimension:</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_dimension_set_cell_val_num(ctx,<sp/>dim,<sp/>3);</highlight></codeline>
</programlisting></para>
<para>For a variable-sized dimension:</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_dimension_set_cell_val_num(ctx,<sp/>dim,<sp/>TILEDB_VAR_NUM);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The target dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_val_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of values per cell. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1172" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1172" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aef5c84aa50201d3be5cda1523c0445c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_dimension_get_filter_list</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_dimension_t *dim, tiledb_filter_list_t **filter_list) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_dimension_get_filter_list</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_dimension_t *</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>tiledb_filter_list_t **</type>
          <declname>filter_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the filter list for a dimension.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_filter_list_t*<sp/>filter_list;</highlight></codeline>
<codeline><highlight class="normal">tiledb_dimension_get_filter_list(ctx,<sp/>dim,<sp/>&amp;filter_list);</highlight></codeline>
<codeline><highlight class="normal">tiledb_filter_list_free(&amp;filter_list);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The target dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The filter list to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1193" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1193" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a402a94912ccf75afbc09979212422081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_dimension_get_cell_val_num</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_dimension_t *dim, uint32_t *cell_val_num) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_dimension_get_cell_val_num</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_dimension_t *</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>cell_val_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the number of values per cell for a dimension. For variable-sized dimensions the result is TILEDB_VAR_NUM.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint32_t<sp/>num;</highlight></codeline>
<codeline><highlight class="normal">tiledb_dimension_get_cell_val_num(ctx,<sp/>dim,<sp/>&amp;num);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_val_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of values per cell to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1214" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1214" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a1e06688c316450bb3e0eba4d3f0753e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_dimension_get_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_dimension_t *dim, const char **name) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_dimension_get_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_dimension_t *</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the dimension name.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name;</highlight></codeline>
<codeline><highlight class="normal">tiledb_dimension_get_name(ctx,<sp/>dim,<sp/>&amp;dim_name);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1234" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1234" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ad2487a6427a10de80ab56d0ce1dcdb3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_dimension_get_type</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_dimension_t *dim, tiledb_datatype_t *type) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_dimension_get_type</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_dimension_t *</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>tiledb_datatype_t *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the dimension type.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_datatype_t<sp/>dim_type;</highlight></codeline>
<codeline><highlight class="normal">tiledb_dimension_get_type(ctx,<sp/>dim,<sp/>&amp;dim_type);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1254" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1254" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aa0286d7d1182e964d63b5ff731f3f13e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_dimension_get_domain</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_dimension_t *dim, const void **domain) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_dimension_get_domain</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_dimension_t *</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the domain of the dimension.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t*<sp/>domain;</highlight></codeline>
<codeline><highlight class="normal">tiledb_dimension_get_domain(ctx,<sp/>dim,<sp/>&amp;domain);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain to be retrieved. Note that the defined type of input <computeroutput>domain</computeroutput> must be the same as the dimension type, otherwise the behavior is unpredictable (it will probably segfault). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1276" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1276" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a2bfe8a50493584629ac42e37560f2065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_dimension_get_tile_extent</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_dimension_t *dim, const void **tile_extent) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_dimension_get_tile_extent</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_dimension_t *</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>tile_extent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the tile extent of the dimension.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t*<sp/>tile_extent;</highlight></codeline>
<codeline><highlight class="normal">tiledb_dimension_get_tile_extent(ctx,<sp/>dim,<sp/>&amp;tile_extent);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tile_extent</parametername>
</parameternamelist>
<parameterdescription>
<para>The tile extent (pointer) to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1296" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1296" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aaf66456731b1d2eb14a3fc65ec7e7921" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_dimension_dump</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_dimension_t *dim, FILE *out) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_dimension_dump</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_dimension_t *</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dumps the contents of a dimension in ASCII form to some output (e.g., file or stdout).</para>
<para><bold>Example:</bold></para>
<para>The following prints the dimension dump to standard output.</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_dimension_dump(ctx,<sp/>dim,<sp/>stdout);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1318" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1318" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a5a88cafc1ae3e8855430cd629cfb44c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_alloc</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_type_t array_type, tiledb_array_schema_t **array_schema) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_alloc</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_type_t</type>
          <declname>array_type</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t **</type>
          <declname>array_schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a TileDB array schema object.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_schema_t*<sp/>array_schema;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_alloc(ctx,<sp/>TILEDB_DENSE,<sp/>&amp;array_schema);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The array type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB array schema to be created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1342" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1342" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a71b678b97544fe0e34b7fd1a282a5c5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT void</type>
        <definition>TILEDB_EXPORT void tiledb_array_schema_free</definition>
        <argsstring>(tiledb_array_schema_t **array_schema) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_free</name>
        <param>
          <type>tiledb_array_schema_t **</type>
          <declname>array_schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroys an array schema, freeing associated memory.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_schema_free(&amp;array_schema);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema to be destroyed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1358" column="20" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1358" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a10b9e7e5b91e3296bc11455748a0f238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_add_attribute</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_schema_t *array_schema, tiledb_attribute_t *attr) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_add_attribute</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>tiledb_attribute_t *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds an attribute to an array schema.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_attribute_t*<sp/>attr;</highlight></codeline>
<codeline><highlight class="normal">tiledb_attribute_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;my_attr&quot;</highlight><highlight class="normal">,<sp/>TILEDB_INT32,<sp/>&amp;attr);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_add_attribute(ctx,<sp/>array_schema,<sp/>attr);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1377" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1377" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a671665fcd5ea9f9bff54e6453e40e9aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_set_allows_dups</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_schema_t *array_schema, int allows_dups) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_set_allows_dups</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>int</type>
          <declname>allows_dups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets whether the array can allow coordinate duplicates or not. Applicable only to sparse arrays (it errors out if set to <computeroutput>1</computeroutput> for dense arrays).</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allows_dups<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_set_allows_dups(ctx,<sp/>array_schema,<sp/>allows_dups);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allows_dups</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the array allows coordinate duplicates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1399" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1399" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1afabaef8b45247bd6d3c9e7f3300bcf1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_get_allows_dups</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_schema_t *array_schema, int *allows_dups) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_get_allows_dups</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>allows_dups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets whether the array can allow coordinate duplicates or not. It should always be <computeroutput>0</computeroutput> for dense arrays.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allows_dups;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_get_allows_dups(ctx,<sp/>array_schema,<sp/>&amp;allows_dups);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allows_dups</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the array allows coordinate duplicates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1420" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1420" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a3c2ed45b9d27d4f3473a8204498dba19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_get_version</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_schema_t *array_schema, uint32_t *version) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_get_version</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the array schema version.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint32_t<sp/>version;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_get_version(ctx,<sp/>array_schema,<sp/>&amp;version);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>The version. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1440" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1440" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a49e7de9329652a2d0121bba600a8ddbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_set_domain</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_schema_t *array_schema, tiledb_domain_t *domain) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_set_domain</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>tiledb_domain_t *</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets a domain for the array schema.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_domain_t*<sp/>domain;</highlight></codeline>
<codeline><highlight class="normal">tiledb_domain_alloc(ctx,<sp/>&amp;domain);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>--<sp/>Add<sp/>dimensions<sp/>to<sp/>the<sp/>domain<sp/>here<sp/>--<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_set_domain(ctx,<sp/>array_schema,<sp/>domain);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1462" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1462" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a0ae300acd1c1ebf01fff45e26d699f0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_set_capacity</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_schema_t *array_schema, uint64_t capacity) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_set_capacity</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the tile capacity.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_schema_set_capacity(ctx,<sp/>array_schema,<sp/>10000);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The capacity of a sparse data tile. Note that sparse data tiles exist in sparse fragments, which can be created in both sparse and dense arrays. For more details, see <ulink url="tutorials/tiling-sparse.html">tutorials/tiling-sparse.html</ulink>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1484" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1484" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ab6dbb1118720f58f4c299f111e2a2a7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_set_cell_order</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_schema_t *array_schema, tiledb_layout_t cell_order) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_set_cell_order</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>tiledb_layout_t</type>
          <declname>cell_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the cell order.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_schema_set_cell_order(ctx,<sp/>array_schema,<sp/>TILEDB_ROW_MAJOR);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_order</parametername>
</parameternamelist>
<parameterdescription>
<para>The cell order to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1503" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1503" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a35d38e0be7571ef464c7ac8db43eff0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_set_tile_order</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_schema_t *array_schema, tiledb_layout_t tile_order) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_set_tile_order</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>tiledb_layout_t</type>
          <declname>tile_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the tile order.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_schema_set_cell_order(ctx,<sp/>array_schema,<sp/>TILEDB_COL_MAJOR);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tile_order</parametername>
</parameternamelist>
<parameterdescription>
<para>The tile order to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1522" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1522" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a6acd88e97ae1de8a74c078b6b25f73ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_set_coords_filter_list</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_schema_t *array_schema, tiledb_filter_list_t *filter_list) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_set_coords_filter_list</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>tiledb_filter_list_t *</type>
          <declname>filter_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the filter list to use for the coordinates.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_filter_list_t*<sp/>filter_list;</highlight></codeline>
<codeline><highlight class="normal">tiledb_filter_list_alloc(ctx,<sp/>&amp;filter_list);</highlight></codeline>
<codeline><highlight class="normal">tiledb_filter_list_add_filter(ctx,<sp/>filter_list,<sp/>filter);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_set_coords_filter_list(ctx,<sp/>array_schema,<sp/>filter_list);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The filter list to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1544" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1544" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ad2a0fbdb14245e0a353e5e5f53eb55c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_set_offsets_filter_list</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_schema_t *array_schema, tiledb_filter_list_t *filter_list) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_set_offsets_filter_list</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>tiledb_filter_list_t *</type>
          <declname>filter_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the filter list to use for the offsets of variable-sized attribute values.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_filter_list_t*<sp/>filter_list;</highlight></codeline>
<codeline><highlight class="normal">tiledb_filter_list_alloc(ctx,<sp/>&amp;filter_list);</highlight></codeline>
<codeline><highlight class="normal">tiledb_filter_list_add_filter(ctx,<sp/>filter_list,<sp/>filter);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_set_offsets_filter_list(ctx,<sp/>array_schema,<sp/>filter_list);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The filter list to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1567" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1567" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aa5fc343e64cef3d1046bdcb8e77f8480" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_set_validity_filter_list</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_schema_t *array_schema, tiledb_filter_list_t *filter_list) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_set_validity_filter_list</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>tiledb_filter_list_t *</type>
          <declname>filter_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the filter list to use for the validity array of nullable attribute values.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_filter_list_t*<sp/>filter_list;</highlight></codeline>
<codeline><highlight class="normal">tiledb_filter_list_alloc(ctx,<sp/>&amp;filter_list);</highlight></codeline>
<codeline><highlight class="normal">tiledb_filter_list_add_filter(ctx,<sp/>filter_list,<sp/>filter);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_set_validity_filter_list(ctx,<sp/>array_schema,<sp/>filter_list);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The filter list to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1590" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1590" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a8e5ac93cdd4c99e7fa11e5a07316daa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_check</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_schema_t *array_schema) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_check</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks the correctness of the array schema.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_schema_check(ctx,<sp/>array_schema);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> if the array schema is correct and <computeroutput>TILEDB_ERR</computeroutput> upon any error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1609" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1609" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ab08bc86b9270f3581056a11768862712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_load</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *array_uri, tiledb_array_schema_t **array_schema) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_load</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>array_uri</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t **</type>
          <declname>array_schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the schema of an array from the disk, creating an array schema struct.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_schema_t*<sp/>array_schema;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_load(ctx,<sp/></highlight><highlight class="stringliteral">&quot;s3://tiledb_bucket/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array_schema);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>to<sp/>free<sp/>the<sp/>array<sp/>schema<sp/>in<sp/>the<sp/>end</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The array whose schema will be retrieved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema to be retrieved, or <computeroutput>NULL</computeroutput> upon error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1629" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1629" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a7c53d8da185f9ae70d59f18842f3c100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_array_schema_load_with_key</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *array_uri, tiledb_encryption_type_t encryption_type, const void *encryption_key, uint32_t key_length, tiledb_array_schema_t **array_schema) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_load_with_key</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>array_uri</declname>
        </param>
        <param>
          <type>tiledb_encryption_type_t</type>
          <declname>encryption_type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>encryption_key</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key_length</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t **</type>
          <declname>array_schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the schema of an encrypted array from the disk, creating an array schema struct.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="comment">//<sp/>Load<sp/>AES-256<sp/>key<sp/>from<sp/>disk,<sp/>environment<sp/>variable,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>key[32]<sp/>=<sp/>...;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_t*<sp/>array_schema;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_load_with_key(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/></highlight><highlight class="stringliteral">&quot;s3://tiledb_bucket/my_array&quot;</highlight><highlight class="normal">,<sp/>TILEDB_AES_256_GCM,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>key,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(key),<sp/>&amp;array_schema);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>to<sp/>free<sp/>the<sp/>array<sp/>schema<sp/>in<sp/>the<sp/>end</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The array whose schema will be retrieved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encryption_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The encryption type to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encryption_key</parametername>
</parameternamelist>
<parameterdescription>
<para>The encryption key to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length in bytes of the encryption key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema to be retrieved, or <computeroutput>NULL</computeroutput> upon error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1658" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1658" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a5ed5cab0514ebf8a7303ba1332863a9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_get_array_type</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_schema_t *array_schema, tiledb_array_type_t *array_type) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_get_array_type</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>tiledb_array_type_t *</type>
          <declname>array_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the array type.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_schema_t*<sp/>array_schema;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_load(ctx,<sp/></highlight><highlight class="stringliteral">&quot;s3://tiledb_bucket/my_array&quot;</highlight><highlight class="normal">,<sp/>array_schema);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_type_t*<sp/>array_type;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_get_array_type(ctx,<sp/>array_schema,<sp/>&amp;array_type);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>to<sp/>free<sp/>the<sp/>array<sp/>schema<sp/>in<sp/>the<sp/>end</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The array type to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1684" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1684" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a81bcd8d24bd487f59a6f3849b173e970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_get_capacity</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_schema_t *array_schema, uint64_t *capacity) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_get_capacity</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the capacity.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>capacity;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_get_capacity(ctx,<sp/>array_schema,<sp/>&amp;capacity);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The capacity to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1704" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1704" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a8268a6d916456a1401d4da53b0f1fa4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_get_cell_order</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_schema_t *array_schema, tiledb_layout_t *cell_order) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_get_cell_order</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>tiledb_layout_t *</type>
          <declname>cell_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the cell order.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_layout_t<sp/>cell_order;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_get_cell_order(ctx,<sp/>array_schema,<sp/>&amp;cell_order);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_order</parametername>
</parameternamelist>
<parameterdescription>
<para>The cell order to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1724" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1724" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aba986d390cdffaa4f2df648c00167961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_get_coords_filter_list</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_schema_t *array_schema, tiledb_filter_list_t **filter_list) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_get_coords_filter_list</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>tiledb_filter_list_t **</type>
          <declname>filter_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the filter list used for the coordinates.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_filter_list_t*<sp/>filter_list;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_get_coords_filter_list(ctx,<sp/>array_schema,<sp/>&amp;filter_list);</highlight></codeline>
<codeline><highlight class="normal">tiledb_filter_list_free(ctx,<sp/>&amp;filter_list);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The filter list to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1745" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1745" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ad4008d9ca56c0cdf3e519588263c896d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_get_offsets_filter_list</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_schema_t *array_schema, tiledb_filter_list_t **filter_list) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_get_offsets_filter_list</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>tiledb_filter_list_t **</type>
          <declname>filter_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the filter list used for the offsets.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_filter_list_t*<sp/>filter_list;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_get_offsets_filter_list(ctx,<sp/>array_schema,<sp/>&amp;filter_list);</highlight></codeline>
<codeline><highlight class="normal">tiledb_filter_list_free(ctx,<sp/>&amp;filter_list);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The filter list to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1766" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1766" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a5e7a5956ee3cbd3968add897c5ba24e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_get_validity_filter_list</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_schema_t *array_schema, tiledb_filter_list_t **filter_list) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_get_validity_filter_list</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>tiledb_filter_list_t **</type>
          <declname>filter_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the filter list used for validity maps.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_filter_list_t*<sp/>filter_list;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_get_validity_filter_list(ctx,<sp/>array_schema,</highlight></codeline>
<codeline><highlight class="normal">&amp;filter_list);<sp/>tiledb_filter_list_free(ctx,<sp/>&amp;filter_list);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The filter list to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1787" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1787" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a3545c2128bcdf2ebc332134f0678a645" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_get_domain</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_schema_t *array_schema, tiledb_domain_t **domain) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_get_domain</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>tiledb_domain_t **</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the array domain.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_domain_t*<sp/>domain;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_get_domain(ctx,<sp/>array_schema,<sp/>&amp;domain);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>to<sp/>delete<sp/>domain<sp/>in<sp/>the<sp/>end</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The array domain to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1808" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1808" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a4d82e92c5168750ec92c205524b69902" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_get_tile_order</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_schema_t *array_schema, tiledb_layout_t *tile_order) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_get_tile_order</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>tiledb_layout_t *</type>
          <declname>tile_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the tile order.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_layout_t<sp/>tile_order;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_get_tile_order(ctx,<sp/>array_schema,<sp/>&amp;tile_order);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tile_order</parametername>
</parameternamelist>
<parameterdescription>
<para>The tile order to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1828" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1828" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1af08ad3cfb49e86754665a9e275b9faa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_get_attribute_num</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_schema_t *array_schema, uint32_t *attribute_num) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_get_attribute_num</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>attribute_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the number of array attributes.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint32_t<sp/>attr_num;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_get_attribute_num(ctx,<sp/>array_schema,<sp/>&amp;attr_num);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attribute_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of attributes to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1848" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1848" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ab29c25d5d4cbca48d48669b8d93c8b16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_get_attribute_from_index</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_schema_t *array_schema, uint32_t index, tiledb_attribute_t **attr) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_get_attribute_from_index</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>tiledb_attribute_t **</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves an attribute given its index.</para>
<para>Attributes are ordered the same way they were defined when constructing the array schema.</para>
<para><bold>Example:</bold></para>
<para>The following retrieves the first attribute in the schema.</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_attribute_t*<sp/>attr;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_get_attribute_from_index(ctx,<sp/>array_schema,<sp/>0,<sp/>&amp;attr);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>to<sp/>delete<sp/>the<sp/>retrieved<sp/>attribute<sp/>in<sp/>the<sp/>end.</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the attribute to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute object to retrieve. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1875" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1875" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a056f5d466e0d083caac46af01eaf349f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_get_attribute_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_schema_t *array_schema, const char *name, tiledb_attribute_t **attr) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_get_attribute_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>tiledb_attribute_t **</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves an attribute given its name (key).</para>
<para><bold>Example:</bold></para>
<para>The following retrieves the first attribute in the schema.</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_attribute_t*<sp/>attr;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_get_attribute_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>array_schema,<sp/></highlight><highlight class="stringliteral">&quot;attr_0&quot;</highlight><highlight class="normal">,<sp/>&amp;attr);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>to<sp/>delete<sp/>the<sp/>retrieved<sp/>attribute<sp/>in<sp/>the<sp/>end.</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name (key) of the attribute to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>THe attribute object to retrieve. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1901" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1901" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a5616549f7970477ceb49573bf0689347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_has_attribute</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_schema_t *array_schema, const char *name, int32_t *has_attr) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_has_attribute</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>has_attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks whether the array schema has an attribute of the given name.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">int32_t<sp/>has_attr;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_schema_has_attribute(ctx,<sp/>array_schema,<sp/></highlight><highlight class="stringliteral">&quot;attr_0&quot;</highlight><highlight class="normal">,<sp/>&amp;has_attr);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute to check for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>has_attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to <computeroutput>1</computeroutput> if the array schema has an attribute of the given name, else <computeroutput>0</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1924" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1924" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1adf27d46676eabd1571ca420b6c7be86c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_schema_dump</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_schema_t *array_schema, FILE *out) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_schema_dump</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dumps the array schema in ASCII format in the selected output.</para>
<para><bold>Example:</bold></para>
<para>The following prints the array schema dump in standard output.</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_schema_dump(ctx,<sp/>array_schema,<sp/>stdout);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1946" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1946" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a2a0cfaf6967c5e2f340245cd2a81c23a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_alloc</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, tiledb_query_type_t query_type, tiledb_query_t **query) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_alloc</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>tiledb_query_type_t</type>
          <declname>query_type</declname>
        </param>
        <param>
          <type>tiledb_query_t **</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a TileDB query object. Note that the query object is associated with a specific array object. The query type (read or write) is inferred from the array object, which was opened with a specific query type.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;file:///my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_WRITE);</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_t*<sp/>query;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_alloc(ctx,<sp/>array,<sp/>TILEDB_WRITE,<sp/>&amp;query);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query object to be created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>An opened array object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The query type. This must comply with the query type <computeroutput>array</computeroutput> was opened. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="1977" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="1977" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ae6f478ed7044077b567f70926bc87271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_stats</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, char **stats_json) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_stats</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>stats_json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the stats from a Query.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>stats_json;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_stats(ctx,<sp/>query,<sp/>&amp;stats_json);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_stats_free_str(&amp;stats_json);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stats_json</parametername>
</parameternamelist>
<parameterdescription>
<para>The output json. The caller takes ownership of the c-string and must free it using tiledb_stats_free_str(). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2001" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2001" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a3a43c623586f7b641320641565566e30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_set_config</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, tiledb_config_t *config) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_set_config</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>tiledb_config_t *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the query config</para>
<para>Setting the query config will also set the subarray configuration in order to maintain existing behavior. If you wish the subarray to have a different configuration than the query, set it after calling tiledb_query_set_config.</para>
<para>Setting the configuration with this function overrides the following Query-level parameters only:</para>
<para><itemizedlist>
<listitem><para><computeroutput>sm.memory_budget</computeroutput></para>
</listitem><listitem><para><computeroutput>sm.memory_budget_var</computeroutput></para>
</listitem><listitem><para><computeroutput>sm.var_offsets.mode</computeroutput></para>
</listitem><listitem><para><computeroutput>sm.var_offsets.extra_element</computeroutput></para>
</listitem><listitem><para><computeroutput>sm.var_offsets.bitsize</computeroutput></para>
</listitem><listitem><para><computeroutput>sm.check_coord_dups</computeroutput></para>
</listitem><listitem><para><computeroutput>sm.check_coord_oob</computeroutput></para>
</listitem><listitem><para><computeroutput>sm.check_global_order</computeroutput></para>
</listitem><listitem><para><computeroutput>sm.dedup_coords</computeroutput> </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2026" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2026" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a7efa195c0f131717045be1e288dfa16d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_config</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, tiledb_config_t **config) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_config</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>tiledb_config_t **</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the config from a Query.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_config_t*<sp/>config;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_config(ctx,<sp/>vfs,<sp/>&amp;config);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>to<sp/>free<sp/>the<sp/>retrieved<sp/>config</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>The config to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2047" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2047" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1acf77b5967ac347efca3727fce018e5b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_query_set_subarray</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, const void *subarray) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_set_subarray</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>subarray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indicates that the query will write or read a subarray, and provides the appropriate information.</para>
<para><bold>Example:</bold></para>
<para>The following sets a 2D subarray [0,10], [20, 30] to the query.</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>subarray[]<sp/>=<sp/>{<sp/>0,<sp/>10,<sp/>20,<sp/>30};</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_set_subarray(ctx,<sp/>query,<sp/>subarray);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray in which the array read/write will be constrained on. It should be a sequence of [low, high] pairs (one pair per dimension). For the case of writes, this is meaningful only for dense arrays. Note that <computeroutput>subarray</computeroutput> must have the same type as the domain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>This will error if the query is already initialized.</para>
</simplesect>
<simplesect kind="note"><para>This function will error for writes to sparse arrays. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2077" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2077" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a5f1afc73b61c0530b0486d3acd23971c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_set_subarray_t</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, const tiledb_subarray_t *subarray) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_set_subarray_t</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const tiledb_subarray_t *</type>
          <declname>subarray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indicates that the query will write or read a subarray, and provides the appropriate information.</para>
<para><bold>Example:</bold></para>
<para>The following sets a 2D subarray [0,10], [20, 30] to the query.</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_subarray_t<sp/>*subarray;</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_alloc(ctx,<sp/>array,<sp/>&amp;subarray);</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>subarray_v[]<sp/>=<sp/>{<sp/>0,<sp/>10,<sp/>20,<sp/>30};</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_set_subarray(ctx,<sp/>subarray,<sp/>subarray_v);</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_set_subarray_t(ctx,<sp/>query,<sp/>subarray);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray by which the array read/write will be constrained. For the case of writes, this is meaningful only for dense arrays. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>This will error if the query is already initialized.</para>
</simplesect>
<simplesect kind="note"><para>This will error for writes to sparse arrays. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2109" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2109" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a3ebca672f1e82ec225e73fcf25bdc9eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_set_data_buffer</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, const char *name, void *buffer, uint64_t *buffer_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_set_data_buffer</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the buffer for an attribute/dimension to a query, which will either hold the values to be written (if it is a write query), or will hold the results from a read query.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">int32_t<sp/>a1[100];</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>a1_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a1);</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_set_data_buffer(ctx,<sp/>query,<sp/></highlight><highlight class="stringliteral">&quot;a1&quot;</highlight><highlight class="normal">,<sp/>a1,<sp/>&amp;a1_size);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute/dimension to set the buffer for. Note that zipped coordinates have special name <computeroutput>TILEDB_COORDS</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer that either have the input data to be written, or will hold the data to be read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>In the case of writes, this is the size of <computeroutput>buffer</computeroutput> in bytes. In the case of reads, this initially contains the allocated size of <computeroutput>buffer</computeroutput>, but after the termination of the query it will contain the size of the useful (read) data in <computeroutput>buffer</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2139" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2139" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ac1a49965c568c822583de60ea9de9c14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_set_offsets_buffer</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, const char *name, uint64_t *buffer, uint64_t *buffer_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_set_offsets_buffer</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the starting offsets of each cell value in the data buffer.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>a1[100];</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>a1_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a1);</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_set_offsets_buffer(ctx,<sp/>query,<sp/></highlight><highlight class="stringliteral">&quot;a1&quot;</highlight><highlight class="normal">,<sp/>a1,<sp/>&amp;a1_size);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute/dimension to set the buffer for. Note that zipped coordinates have special name <computeroutput>TILEDB_COORDS</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>This buffer holds the starting offsets of each cell value in <computeroutput>buffer_val</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>In the case of writes, it is the size of <computeroutput>buffer_off</computeroutput> in bytes. In the case of reads, this initially contains the allocated size of <computeroutput>buffer_off</computeroutput>, but after the <emphasis>end of the query</emphasis> (<computeroutput>tiledb_query_submit</computeroutput>) it will contain the size of the useful (read) data in <computeroutput>buffer_off</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2170" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2170" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aaf93c2560e3afec4006133bb6806cbe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_set_validity_buffer</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, const char *name, uint8_t *buffer, uint64_t *buffer_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_set_validity_buffer</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the validity byte map that has exactly one value for each value in the data buffer.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint8_t<sp/>a1[100];</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>a1_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(a1);</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_set_validity_buffer(ctx,<sp/>query,<sp/></highlight><highlight class="stringliteral">&quot;a1&quot;</highlight><highlight class="normal">,<sp/>a1,<sp/>&amp;a1_size);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute/dimension to set the buffer for. Note that zipped coordinates have special name <computeroutput>TILEDB_COORDS</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The validity byte map that has exactly one value for each value in <computeroutput>buffer</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>In the case of writes, this is the size of <computeroutput>buffer_validity_bytemap</computeroutput> in bytes. In the case of reads, this initially contains the allocated size of <computeroutput>buffer_validity_bytemap</computeroutput>, but after the termination of the query it will contain the size of the useful (read) data in <computeroutput>buffer_validity_bytemap</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2202" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2202" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aff3a5282eb8f3c2351cab95972f56b24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_data_buffer</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, const char *name, void **buffer, uint64_t **buffer_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_data_buffer</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint64_t **</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the buffer of a fixed-sized attribute/dimension from a query. If the buffer has not been set, then <computeroutput>buffer</computeroutput> is set to <computeroutput>nullptr</computeroutput>.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>a1;</highlight></codeline>
<codeline><highlight class="normal">uint64_t*<sp/>a1_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_data_buffer(ctx,<sp/>query,<sp/></highlight><highlight class="stringliteral">&quot;a1&quot;</highlight><highlight class="normal">,<sp/>&amp;a1,<sp/>&amp;a1_size);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute/dimension to get the buffer for. Note that the zipped coordinates have special name <computeroutput>TILEDB_COORDS</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the size of the buffer. Note that this is a double pointer and returns the original variable address from <computeroutput>set_buffer</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2231" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2231" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ad1a29652a42da729b5eeeed4e072715d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_offsets_buffer</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, const char *name, uint64_t **buffer, uint64_t **buffer_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_offsets_buffer</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint64_t **</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint64_t **</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the starting offsets of each cell value in the data buffer.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>a1;</highlight></codeline>
<codeline><highlight class="normal">uint64_t*<sp/>a1_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_offsets_buffer(ctx,<sp/>query,<sp/></highlight><highlight class="stringliteral">&quot;a1&quot;</highlight><highlight class="normal">,<sp/>&amp;a1,<sp/>&amp;a1_size);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute/dimension to get the buffer for. Note that the zipped coordinates have special name <computeroutput>TILEDB_COORDS</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the size of the buffer. Note that this is a double pointer and returns the original variable address from <computeroutput>set_buffer</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2259" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2259" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a40ac7510adbe1effde26f66592504229" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_validity_buffer</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, const char *name, uint8_t **buffer, uint64_t **buffer_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_validity_buffer</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint8_t **</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint64_t **</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the validity byte map that has exactly one value for each value in the data buffer.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>a1;</highlight></codeline>
<codeline><highlight class="normal">uint64_t*<sp/>a1_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_validity_buffer(ctx,<sp/>query,<sp/></highlight><highlight class="stringliteral">&quot;a1&quot;</highlight><highlight class="normal">,<sp/>&amp;a1,<sp/>&amp;a1_size);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute/dimension to get the buffer for. Note that the zipped coordinates have special name <computeroutput>TILEDB_COORDS</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the size of the buffer. Note that this is a double pointer and returns the original variable address from <computeroutput>set_buffer</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2288" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2288" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aeca77cb81b159ec780b45d471ebb2996" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_set_layout</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, tiledb_layout_t layout) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_set_layout</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>tiledb_layout_t</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the layout of the cells to be written or read.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_query_set_layout(ctx,<sp/>query,<sp/>TILEDB_ROW_MAJOR);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>For a write query, this specifies the order of the cells provided by the user in the buffers. For a read query, this specifies the order of the cells that will be retrieved as results and stored in the user buffers. The layout can be one of the following:<itemizedlist>
<listitem><para><computeroutput>TILEDB_COL_MAJOR</computeroutput>: This means column-major order with respect to the subarray.</para>
</listitem><listitem><para><computeroutput>TILEDB_ROW_MAJOR</computeroutput>: This means row-major order with respect to the subarray.</para>
</listitem><listitem><para><computeroutput>TILEDB_GLOBAL_ORDER</computeroutput>: This means that cells are stored or retrieved in the array global cell order.</para>
</listitem><listitem><para><computeroutput>TILEDB_UNORDERED</computeroutput>: This is applicable only to reads and writes for sparse arrays, or for sparse writes to dense arrays. For writes, it specifies that the cells are unordered and, hence, TileDB must sort the cells in the global cell order prior to writing. For reads, TileDB will return the cells without any particular order, which will often lead to better performance.</para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<itemizedlist>
<listitem><para><simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2325" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2325" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ac25b42dd3eb6e8f98db6af33490019da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_set_condition</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, const tiledb_query_condition_t *cond) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_set_condition</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const tiledb_query_condition_t *</type>
          <declname>cond</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the query condition to be applied on a read.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_query_condition_t*<sp/>query_condition;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_alloc(ctx,<sp/>&amp;query_condition);</highlight></codeline>
<codeline><highlight class="normal">uint32_t<sp/>value<sp/>=<sp/>5;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_init(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ctx,<sp/>query_condition,<sp/></highlight><highlight class="stringliteral">&quot;longitude&quot;</highlight><highlight class="normal">,<sp/>&amp;value,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value),<sp/>TILEDB_LT);</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_set_condition(ctx,<sp/>query,<sp/>query_condition);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB query condition. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2348" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2348" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a5041bc79230ecc3321284211d147b571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_finalize</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_finalize</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flushes all internal state of a query object and finalizes the query. This is applicable only to global layout writes. It has no effect for any other query type.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_query_t*<sp/>query;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>...<sp/>Your<sp/>code<sp/>here<sp/>...<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_query_finalize(ctx,<sp/>query);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query object to be flushed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2371" column="1" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2371" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a18f756272cca16cbf18fa753c87a3deb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_submit_and_finalize</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_submit_and_finalize</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Submits and finalizes the query. This is applicable only to global layout writes. The function will error out if called on a query with non global layout. Its purpose is to submit the final chunk (partial or full tile) in a global order write query. <computeroutput>tiledb_query_submit_and_finalize</computeroutput> drops the tile alignment restriction of the buffers (i.e. compared to the regular global layout submit call) given the last chunk of a global order write is most frequently smaller in size than a tile.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_query_t*<sp/>query;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(stop_condition)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>tiledb_query_set_buffer(ctx,<sp/>query,<sp/>attr,<sp/>tile_aligned_buffer,<sp/>&amp;size);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>tiledb_query_submit(ctx,<sp/>query);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_set_buffer(ctx,<sp/>query,<sp/>attr,<sp/>final_chunk,<sp/>&amp;size);</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_submit_and_finalize(ctx,<sp/>query);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query object to be flushed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2400" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2400" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aa994104045f0a218352c8e5c0f6e610f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT void</type>
        <definition>TILEDB_EXPORT void tiledb_query_free</definition>
        <argsstring>(tiledb_query_t **query) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_free</name>
        <param>
          <type>tiledb_query_t **</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Frees a TileDB query object.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_query_free(&amp;query);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query object to be deleted. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2414" column="20" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2414" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a1d35db8bb539201e9fa064f435e1d358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_submit</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_submit</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Submits a TileDB query.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_query_submit(ctx,<sp/>query);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query to be submitted. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para><computeroutput>tiledb_query_finalize</computeroutput> must be invoked after finish writing in global layout (via repeated invocations of <computeroutput>tiledb_query_submit</computeroutput>), in order to flush any internal state.</para>
</simplesect>
<simplesect kind="note"><para>For the case of reads, if the returned status is <computeroutput>TILEDB_INCOMPLETE</computeroutput>, TileDB could not fit the entire result in the user&apos;s buffers. In this case, the user should consume the read results (if any), optionally reset the buffers with <computeroutput>tiledb_query_set_buffer</computeroutput>, and then resubmit the query until the status becomes <computeroutput>TILEDB_COMPLETED</computeroutput>. If all buffer sizes after the termination of this function become 0, then this means that <bold>no</bold> useful data was read into the buffers, implying that larger buffers are needed for the query to proceed. In this case, the users must reallocate their buffers (increasing their size), reset the buffers with <computeroutput>tiledb_query_set_buffer</computeroutput>, and resubmit the query. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2445" column="1" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2445" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a9a09e3d371c95f406270e58a4294c468" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_query_submit_async</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, void(*callback)(void *), void *callback_data) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_submit_async</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>callback_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Submits a TileDB query in asynchronous mode.</para>
<para><bold>Examples:</bold></para>
<para>Submit without a callback.</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_query_submit_async(ctx,<sp/>query,<sp/>NULL,<sp/>NULL);</highlight></codeline>
</programlisting></para>
<para>Submit with a callback function <computeroutput>print</computeroutput> that takes as input message <computeroutput>msg</computeroutput> and prints it upon completion of the query.</para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Query<sp/>completed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_submit_async(ctx,<sp/>&amp;query,<sp/>foo,<sp/>msg);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query to be submitted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The function to be called when the query completes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback_data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to be passed to the <computeroutput>callback</computeroutput> function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para><computeroutput>tiledb_query_finalize</computeroutput> must be invoked after finish writing in global layout (via repeated invocations of <computeroutput>tiledb_query_submit</computeroutput>), in order to flush any internal state.</para>
</simplesect>
<simplesect kind="note"><para>For the case of reads, if the returned status is <computeroutput>TILEDB_INCOMPLETE</computeroutput>, TileDB could not fit the entire result in the user&apos;s buffers. In this case, the user should consume the read results (if any), optionally reset the buffers with <computeroutput>tiledb_query_set_buffer</computeroutput>, and then resubmit the query until the status becomes <computeroutput>TILEDB_COMPLETED</computeroutput>. If all buffer sizes after the termination of this function become 0, then this means that <bold>no</bold> useful data was read into the buffers, implying that larger buffers are needed for the query to proceed. In this case, the users must reallocate their buffers (increasing their size), reset the buffers with <computeroutput>tiledb_query_set_buffer</computeroutput>, and resubmit the query.</para>
</simplesect>
<simplesect kind="note"><para><computeroutput>callback</computeroutput> will be executed in a thread managed by TileDB&apos;s internal thread pool. To allow TileDB to reuse the thread and avoid starving the thread pool, long-running callbacks should be dispatched to another thread. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2492" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2492" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aff3ea7110140d6c6b23ee5bf31e8fe48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_has_results</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, int32_t *has_results) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_has_results</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>has_results</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if the query has returned any results. Applicable only to read queries; it sets <computeroutput>has_results</computeroutput> to `0 in the case of writes.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">int32_t<sp/>has_results;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_has_results(ctx,<sp/>query,<sp/>&amp;has_results);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>has_results</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to <computeroutput>1</computeroutput> if the query returned results and <computeroutput>0</computeroutput> otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> upon success, and <computeroutput>TILEDB_ERR</computeroutput> upon error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2515" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2515" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a09c8d25fe04bdf047f329ffbd8292d47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_status</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, tiledb_query_status_t *status) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_status</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>tiledb_query_status_t *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the status of a query.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_query_status_t<sp/>status;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_status(ctx,<sp/>query,<sp/>&amp;status);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>The query status to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> upon success, and <computeroutput>TILEDB_ERR</computeroutput> upon error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2535" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2535" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a6c6612a88c1987bda8d2423c840f5e59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_type</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, tiledb_query_type_t *query_type) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_type</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>tiledb_query_type_t *</type>
          <declname>query_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the query type.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_query_type_t<sp/>query_type;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_status(ctx,<sp/>query,<sp/>&amp;query_type);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The query type to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> upon success, and <computeroutput>TILEDB_ERR</computeroutput> upon error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2555" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2555" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a1480f253624f3e457a7af8dced6c38c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_layout</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, tiledb_layout_t *query_layout) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_layout</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>tiledb_layout_t *</type>
          <declname>query_layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the query layout.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_layout_t<sp/>query_layout;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_layout(ctx,<sp/>query,<sp/>&amp;query_layout);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query_layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The query layout to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> upon success, and <computeroutput>TILEDB_ERR</computeroutput> upon error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2575" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2575" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a56aaaefcd6f1812983ac4437ef5af742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_array</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, tiledb_array_t **array) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_array</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>tiledb_array_t **</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the query array.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_array(ctx,<sp/>query,<sp/>&amp;array);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The query array to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> upon success, and <computeroutput>TILEDB_ERR</computeroutput> upon error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2595" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2595" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ad1766904827812dcb09bfc6717bf275f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_query_add_range</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, uint32_t dim_idx, const void *start, const void *end, const void *stride) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_add_range</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dim_idx</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a 1D range along a subarray dimension index, which is in the form (start, end, stride). The datatype of the range components must be the same as the type of the domain of the array in the query.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint32_t<sp/>dim_idx<sp/>=<sp/>2;</highlight></codeline>
<codeline><highlight class="normal">int64_t<sp/>start<sp/>=<sp/>10;</highlight></codeline>
<codeline><highlight class="normal">int64_t<sp/>end<sp/>=<sp/>20;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_add_range(ctx,<sp/>query,<sp/>dim_idx,<sp/>&amp;start,<sp/>&amp;end,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query to add the range to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the dimension to add the range to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The range start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The range end. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>The range stride. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>The stride is currently unsupported. Use <computeroutput>nullptr</computeroutput> as the stride argument. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2625" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2625" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a8ca5c89a04cc3382a52bdbf166a5f7d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_query_add_range_by_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, const char *dim_name, const void *start, const void *end, const void *stride) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_add_range_by_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a 1D range along a subarray dimension name, which is in the form (start, end, stride). The datatype of the range components must be the same as the type of the domain of the array in the query.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;rows&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">int64_t<sp/>start<sp/>=<sp/>10;</highlight></codeline>
<codeline><highlight class="normal">int64_t<sp/>end<sp/>=<sp/>20;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_add_range_by_name(ctx,<sp/>query,<sp/>dim_name,<sp/>&amp;start,<sp/>&amp;end,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query to add the range to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the dimension to add the range to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The range start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The range end. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>The range stride. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>The stride is currently unsupported. Use <computeroutput>nullptr</computeroutput> as the stride argument. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2658" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2658" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1af09839fa0e4b3e200f2f87ae65842ed0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_query_add_range_var</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, uint32_t dim_idx, const void *start, uint64_t start_size, const void *end, uint64_t end_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_add_range_var</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dim_idx</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>start_size</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>end_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a 1D variable-sized range along a subarray dimension index, which is in the form (start, end). Applicable only to variable-sized dimensions.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint32_t<sp/>dim_idx<sp/>=<sp/>2;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>start[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>end[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;bb&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_add_range_var(ctx,<sp/>query,<sp/>dim_idx,<sp/>start,<sp/>1,<sp/>end,<sp/>2);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query to add the range to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the dimension to add the range to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The range start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the range start in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The range end. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the range end in bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2688" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2688" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aa699e31d2672da53367316d746f24bac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_query_add_range_var_by_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, const char *dim_name, const void *start, uint64_t start_size, const void *end, uint64_t end_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_add_range_var_by_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>start_size</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>end_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a 1D variable-sized range along a subarray dimension name, which is in the form (start, end). Applicable only to variable-sized dimensions.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;rows&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>start[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>end[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;bb&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_add_range_var_by_name(ctx,<sp/>query,<sp/>dim_name,<sp/>start,<sp/>1,<sp/>end,<sp/>2);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query to add the range to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the dimension to add the range to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The range start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the range start in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The range end. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the range end in bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2719" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2719" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a957c4098f3e6a12ff813f6c1478ca01e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_query_get_range_num</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, uint32_t dim_idx, uint64_t *range_num) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_range_num</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dim_idx</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>range_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the number of ranges of the query subarray along a given dimension index.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>range_num;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_range_num(ctx,<sp/>query,<sp/>dim_idx,<sp/>&amp;range_num);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the dimension whose range number to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of ranges to retrieve. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2745" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2745" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a036371f8b82ac7c08d87e1345510ce8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_query_get_range_num_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, const char *dim_name, uint64_t *range_num) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_range_num_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>range_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the number of ranges of the query subarray along a given dimension name.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>range_num;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_range_num_from_name(ctx,<sp/>query,<sp/>dim_name,<sp/>&amp;range_num);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the dimension whose range number to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of ranges to retrieve. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2768" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2768" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1af9347d50320e3643729038f2fc505fc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_query_get_range</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, uint32_t dim_idx, uint64_t range_idx, const void **start, const void **end, const void **stride) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_range</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dim_idx</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>range_idx</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a specific range of the query subarray along a given dimension index.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>stride;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_range(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>query,<sp/>dim_idx,<sp/>range_idx,<sp/>&amp;start,<sp/>&amp;end,<sp/>&amp;stride);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the dimension to retrieve the range from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the range to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The range start to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The range end to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>The range stride to retrieve. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2797" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2797" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a9b6b8fc7c116891d9aeae6363bd86a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_query_get_range_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, const char *dim_name, uint64_t range_idx, const void **start, const void **end, const void **stride) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_range_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>range_idx</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a specific range of the query subarray along a given dimension name.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>stride;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_range_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>query,<sp/>dim_name,<sp/>range_idx,<sp/>&amp;start,<sp/>&amp;end,<sp/>&amp;stride);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the dimension to retrieve the range from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the range to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The range start to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The range end to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>The range stride to retrieve. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2829" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2829" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ab71851e89ac75cb08f8aafc542299481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_query_get_range_var_size</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, uint32_t dim_idx, uint64_t range_idx, uint64_t *start_size, uint64_t *end_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_range_var_size</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dim_idx</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>range_idx</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>start_size</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>end_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a range&apos;s start and end size for a given variable-length dimension index at a given range index.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>start_size;</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>end_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_range_var_size(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>query,<sp/>dim_idx,<sp/>range_idx,<sp/>&amp;start_size,<sp/>&amp;end_size);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the dimension to retrieve the range from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the range to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_size</parametername>
</parameternamelist>
<parameterdescription>
<para>range start size in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_size</parametername>
</parameternamelist>
<parameterdescription>
<para>range end size in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2859" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2859" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1affc38442f668a426d3c416fd085084cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_query_get_range_var_size_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, const char *dim_name, uint64_t range_idx, uint64_t *start_size, uint64_t *end_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_range_var_size_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>range_idx</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>start_size</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>end_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a range&apos;s start and end size for a given variable-length dimension name at a given range index.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>start_size;</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>end_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_range_var_size_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>query,<sp/>dim_name,<sp/>range_idx,<sp/>&amp;start_size,<sp/>&amp;end_size);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the dimension to retrieve the range from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the range to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_size</parametername>
</parameternamelist>
<parameterdescription>
<para>range start size in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_size</parametername>
</parameternamelist>
<parameterdescription>
<para>range end size in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2888" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2888" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aa565d4976ad6d6b1b46e82577aecfa17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_query_get_range_var</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, uint32_t dim_idx, uint64_t range_idx, void *start, void *end) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_range_var</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dim_idx</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>range_idx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a specific range of the query subarray along a given variable-length dimension index.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_range_var(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>query,<sp/>dim_idx,<sp/>range_idx,<sp/>&amp;start,<sp/>&amp;end);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the dimension to retrieve the range from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the range to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The range start to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The range end to retrieve. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2917" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2917" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a71532696f9214146a2ad3b9a20be2fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_query_get_range_var_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, const char *dim_name, uint64_t range_idx, void *start, void *end) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_range_var_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>range_idx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a specific range of the query subarray along a given variable-length dimension name.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_range_var_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>query,<sp/>dim_name,<sp/>range_idx,<sp/>&amp;start,<sp/>&amp;end);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the dimension to retrieve the range from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the range to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The range start to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The range end to retrieve. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2946" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2946" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a001e30a5beb411f498970431e5a6e2d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_est_result_size</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, const char *name, uint64_t *size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_est_result_size</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the estimated result size for a fixed-sized attribute/dimension. This is an estimate and may not be sufficient to read all results for the requested range, in particular for sparse arrays or array with var-length attributes. Query status must be checked and resubmitted if not complete.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_est_result_size(ctx,<sp/>query,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/>&amp;size);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute/dimension name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size (in bytes) to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="2974" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="2974" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a07672e34ef5bee5dccfcad49f97a1df2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_est_result_size_var</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, const char *name, uint64_t *size_off, uint64_t *size_val) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_est_result_size_var</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>size_off</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>size_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the estimated result size for a var-sized attribute/dimension. This is an estimate and may not be sufficient to read all results for the requested range, for sparse arrays or any array with var-length attributes. Query status must be checked and resubmitted if not complete.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>size_off,<sp/>size_val;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_est_result_size_var(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>query,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/>&amp;size_off,<sp/>&amp;size_val);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute/dimension name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size_off</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the offsets (in bytes) to be retrieved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size_val</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the values (in bytes) to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3002" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3002" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a46db7d13394bc00edae4bff26878c3fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_est_result_size_nullable</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, const char *name, uint64_t *size_val, uint64_t *size_validity) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_est_result_size_nullable</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>size_val</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>size_validity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the estimated result size for a fixed-sized, nullable attribute. This is an estimate and may not be sufficient to read all results for the requested range, for sparse arrays or any array with var-length attributes. Query status must be checked and resubmitted if not complete.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>size_val;</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>size_validity;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_est_result_size_nullable(ctx,<sp/>query,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/>&amp;size_val,</highlight></codeline>
<codeline><highlight class="normal">&amp;size_validity);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size_val</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the values (in bytes) to be retrieved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size_validity</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the validity values (in bytes) to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3033" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3033" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a6ed89d36fd44d997d6a0bff638e25db3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_est_result_size_var_nullable</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, const char *name, uint64_t *size_off, uint64_t *size_val, uint64_t *size_validity) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_est_result_size_var_nullable</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>size_off</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>size_val</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>size_validity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the estimated result size for a var-sized, nullable attribute.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>size_off,<sp/>size_val,<sp/>size_validity;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_est_result_size_var_nullable(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>query,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/>&amp;size_off,<sp/>&amp;size_val,<sp/>&amp;size_validity);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size_off</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the offsets (in bytes) to be retrieved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size_val</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the values (in bytes) to be retrieved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size_validity</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the validity values (in bytes) to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3060" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3060" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ae390a3be43fb8db98cb2d2acc2c746df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_fragment_num</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, uint32_t *num) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_fragment_num</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the number of written fragments. Applicable only to WRITE queries.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint32_t<sp/>num;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_fragment_num(ctx,<sp/>query,<sp/>&amp;num);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of written fragments to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3084" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3084" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ac6911eb27482748b64e91837411d3b3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_fragment_uri</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, uint64_t idx, const char **uri) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_fragment_uri</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the URI of the written fragment with the input index. Applicable only to WRITE queries.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>uri;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_fragment_uri(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>query,<sp/>0,<sp/>&amp;uri);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the written fragment. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The URI of the written fragment to be returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>Make sure to make a copy of <computeroutput>uri</computeroutput> after its retrieval, as the constant pointer may be updated internally as new fragments are being written. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3111" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3111" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a27e1876a93badd5bab8243c4b48033a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_fragment_timestamp_range</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, uint64_t idx, uint64_t *t1, uint64_t *t2) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_fragment_timestamp_range</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the timestamp range of the written fragment with the input index. Applicable only to WRITE queries.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>t1,<sp/>t2;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_fragment_timestamp_range(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>query,<sp/>0,<sp/>&amp;t1,<sp/>&amp;t2);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the written fragment. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t1</parametername>
</parameternamelist>
<parameterdescription>
<para>The start value of the timestamp range of the written fragment to be returned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t2</parametername>
</parameternamelist>
<parameterdescription>
<para>The end value of the timestamp range of the written fragment to be returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3138" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3138" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a4916e42967b3288c4cb61b1fef68faaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_get_subarray_t</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, tiledb_subarray_t **subarray) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_get_subarray_t</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>tiledb_subarray_t **</type>
          <declname>subarray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a TileDB subarray object from the given query.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_subarray_t*<sp/>subarray;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_get_subarray_t(array,<sp/>&amp;subarray);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>An open Query object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The retrieved subarray object if available. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3161" column="9" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3161" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a87d4e564a23377031f860dd974ee6ce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_condition_alloc</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_condition_t **cond) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_condition_alloc</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_condition_t **</type>
          <declname>cond</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a TileDB query condition object.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_query_condition_t*<sp/>query_condition;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_alloc(ctx,<sp/>&amp;query_condition);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond</parametername>
</parameternamelist>
<parameterdescription>
<para>The allocated query condition object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3184" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3184" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a17b45049ee0a47a96a605f6e45ac2366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT void</type>
        <definition>TILEDB_EXPORT void tiledb_query_condition_free</definition>
        <argsstring>(tiledb_query_condition_t **cond) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_condition_free</name>
        <param>
          <type>tiledb_query_condition_t **</type>
          <declname>cond</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Frees a TileDB query condition object.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint32_t<sp/>value<sp/>=<sp/>5;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_t*<sp/>query_condition;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_alloc(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ctx,<sp/></highlight><highlight class="stringliteral">&quot;longitude&quot;</highlight><highlight class="normal">,<sp/>&amp;value,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value),<sp/>TILEDB_LT,<sp/>&amp;query_condition);</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_set_condition(ctx,<sp/>query,<sp/>query_condition);</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_submit(ctx,<sp/>query);</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_free(&amp;query_condition);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cond</parametername>
</parameternamelist>
<parameterdescription>
<para>The query condition object to be freed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3204" column="20" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3204" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a0ae3fe2efa3e33e327f3920bcbc1e3fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_condition_init</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_condition_t *cond, const char *attribute_name, const void *condition_value, uint64_t condition_value_size, tiledb_query_condition_op_t op) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_condition_init</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_condition_t *</type>
          <declname>cond</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attribute_name</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>condition_value</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>condition_value_size</declname>
        </param>
        <param>
          <type>tiledb_query_condition_op_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes a TileDB query condition object.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_query_condition_t*<sp/>query_condition;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_alloc(ctx,<sp/>&amp;query_condition);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint32_t<sp/>value<sp/>=<sp/>5;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_init(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ctx,<sp/>query_condition,<sp/></highlight><highlight class="stringliteral">&quot;longitude&quot;</highlight><highlight class="normal">,<sp/>&amp;value,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value),<sp/>TILEDB_LT);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond</parametername>
</parameternamelist>
<parameterdescription>
<para>The allocated query condition object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attribute_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to compare against an attribute value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition_value_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The byte size of <computeroutput>condition_value</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The comparison operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3229" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3229" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1af705d6fd84935c33d7ee925ecf0ff493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_query_condition_combine</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_condition_t *left_cond, const tiledb_query_condition_t *right_cond, tiledb_query_condition_combination_op_t combination_op, tiledb_query_condition_t **combined_cond) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_query_condition_combine</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_condition_t *</type>
          <declname>left_cond</declname>
        </param>
        <param>
          <type>const tiledb_query_condition_t *</type>
          <declname>right_cond</declname>
        </param>
        <param>
          <type>tiledb_query_condition_combination_op_t</type>
          <declname>combination_op</declname>
        </param>
        <param>
          <type>tiledb_query_condition_t **</type>
          <declname>combined_cond</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Combines two query condition objects into a newly allocated condition. Does not mutate or free the input condition objects.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_query_condition_t*<sp/>query_condition_1;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_alloc(ctx,<sp/>&amp;query_condition_1);</highlight></codeline>
<codeline><highlight class="normal">uint32_t<sp/>value_1<sp/>=<sp/>5;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_init(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ctx,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>query_condition_1,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;longitude&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&amp;value_1,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value_1),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>TILEDB_LT);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_t*<sp/>query_condition_2;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_alloc(ctx,<sp/>&amp;query_condition_2);</highlight></codeline>
<codeline><highlight class="normal">uint32_t<sp/>value_2<sp/>=<sp/>20;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_init(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ctx,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>query_condition_2,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;latitude&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&amp;value_2,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value_2),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>TILEDB_GE);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_t*<sp/>query_condition_3;</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_combine(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ctx,<sp/>query_condition_1,<sp/>query_condition_2,<sp/>TILEDB_AND,<sp/>&amp;query_condition_3);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_free(&amp;query_condition_1);</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_free(&amp;query_condition_2);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_query_set_condition(ctx,<sp/>query,<sp/>query_condition_3);</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_submit(ctx,<sp/>query);</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_condition_free(&amp;query_condition_3);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">left_cond</parametername>
</parameternamelist>
<parameterdescription>
<para>The first input condition. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">right_cond</parametername>
</parameternamelist>
<parameterdescription>
<para>The second input condition. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">combination_op</parametername>
</parameternamelist>
<parameterdescription>
<para>The combination operation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">combined_cond</parametername>
</parameternamelist>
<parameterdescription>
<para>The output condition holder. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3285" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3285" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ae7f8848237f54bee89e1d447a3901805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_subarray_alloc</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_t *array, tiledb_subarray_t **subarray) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_alloc</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>tiledb_subarray_t **</type>
          <declname>subarray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a TileDB subarray object.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_subarray_t*<sp/>subarray;</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_alloc(ctx,<sp/>array,<sp/>&amp;subarray);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>An open array object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray object to be created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>The allocated subarray initially has internal coalesce_ranges == true. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3313" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3313" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a2c2ceb8c4c4b49d36c6719c686c0bcf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_subarray_set_config</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_subarray_t *subarray, tiledb_config_t *config) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_set_config</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_subarray_t *</type>
          <declname>subarray</declname>
        </param>
        <param>
          <type>tiledb_config_t *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the subarray config.</para>
<para>Setting the configuration with this function overrides the following Subarray-level parameters only:</para>
<para><itemizedlist>
<listitem><para><computeroutput>sm.read_range_oob</computeroutput> </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3326" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3326" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1af2b87efd9c316f62997275304b5d7344" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT void</type>
        <definition>TILEDB_EXPORT void tiledb_subarray_free</definition>
        <argsstring>(tiledb_subarray_t **subarray) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_free</name>
        <param>
          <type>tiledb_subarray_t **</type>
          <declname>subarray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Frees a TileDB subarray object.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_subarray_t*<sp/>subarray;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_alloc(ctx,<sp/>array,<sp/>&amp;subarray);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_close(ctx,<sp/>array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_free(&amp;subarray);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray object to be freed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3346" column="20" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3346" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a3087c624853363ac4522e26e68de793a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_subarray_set_coalesce_ranges</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_subarray_t *subarray, int coalesce_ranges) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_set_coalesce_ranges</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_subarray_t *</type>
          <declname>subarray</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coalesce_ranges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set coalesce_ranges property on a TileDB subarray object. Intended to be used just after tiledb_subarray_alloc() to replace the initial coalesce_ranges == true with coalesce_ranges = false if needed.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_subarray_t*<sp/>subarray;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//tiledb_subarray_alloc<sp/>internally<sp/>defaults<sp/>to<sp/>&apos;coalesce_ranges<sp/>==<sp/>true&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_alloc(ctx,<sp/>array,<sp/>&amp;subarray);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>manually<sp/>set<sp/>to<sp/>&apos;false&apos;<sp/>to<sp/>match<sp/>earlier<sp/>behaviour<sp/>with<sp/>older</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>tiledb_query_<sp/>subarray<sp/>actions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>coalesce_ranges<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_set_coalesce_ranges(ctx,<sp/>subarray,<sp/>coalesce_ranges);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray object to change. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coalesce_ranges</parametername>
</parameternamelist>
<parameterdescription>
<para>The true/false value to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3373" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3373" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a7949decdaa9c64ed3633e712f5775e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_subarray_set_subarray</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_subarray_t *subarray, const void *subarray_v) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_set_subarray</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_subarray_t *</type>
          <declname>subarray</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>subarray_v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Populates a subarray with specific indicies.</para>
<para><bold>Example:</bold></para>
<para>The following sets a 2D subarray [0,10], [20, 30] to the subarray.</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_subarray_t<sp/>*subarray;</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>subarray_v[]<sp/>=<sp/>{<sp/>0,<sp/>10,<sp/>20,<sp/>30};</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_set_subarray(ctx,<sp/>subarray,<sp/>subarray_v);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB subarray object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray_v</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray values which can be used to limit the subarray read/write. It should be a sequence of [low, high] pairs (one pair per dimension). When the subarray is used for writes, this is meaningful only for dense arrays, and specifically dense writes. Note that <computeroutput>subarray_a</computeroutput> must have the same type as the domain of the subarray&apos;s associated array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3403" column="9" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3403" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a94bae3e03789d5cae83d1cd09946ff0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_subarray_add_range</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_subarray_t *subarray, uint32_t dim_idx, const void *start, const void *end, const void *stride) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_add_range</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_subarray_t *</type>
          <declname>subarray</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dim_idx</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a 1D range along a subarray dimension index, which is in the form (start, end, stride). The datatype of the range components must be the same as the type of the domain of the array in the query.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint32_t<sp/>dim_idx<sp/>=<sp/>2;</highlight></codeline>
<codeline><highlight class="normal">int64_t<sp/>start<sp/>=<sp/>10;</highlight></codeline>
<codeline><highlight class="normal">int64_t<sp/>end<sp/>=<sp/>20;</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_add_range(ctx,<sp/>subarray,<sp/>dim_idx,<sp/>&amp;start,<sp/>&amp;end,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray to add the range to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the dimension to add the range to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The range start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The range end. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>The range stride. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>The stride is currently unsupported. Use 0/NULL/nullptr as the stride argument. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3433" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3433" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a8c4a8cc0937d953909ce8e5a2d13f765" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_subarray_add_range_by_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_subarray_t *subarray, const char *dim_name, const void *start, const void *end, const void *stride) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_add_range_by_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_subarray_t *</type>
          <declname>subarray</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a 1D range along a subarray dimension name, which is in the form (start, end, stride). The datatype of the range components must be the same as the type of the domain of the array in the query.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;rows&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">int64_t<sp/>start<sp/>=<sp/>10;</highlight></codeline>
<codeline><highlight class="normal">int64_t<sp/>end<sp/>=<sp/>20;</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_add_range_by_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>subarray,<sp/>dim_name,<sp/>&amp;start,<sp/>&amp;end,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray to add the range to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the dimension to add the range to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The range start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The range end. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>The range stride. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>The stride is currently unsupported. Use 0/NULL/nullptr as the stride argument. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3467" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3467" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a6805642f91e959b9ffec8d21b36e0c07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_subarray_add_range_var</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_subarray_t *subarray, uint32_t dim_idx, const void *start, uint64_t start_size, const void *end, uint64_t end_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_add_range_var</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_subarray_t *</type>
          <declname>subarray</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dim_idx</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>start_size</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>end_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a 1D variable-sized range along a subarray dimension index, which is in the form (start, end). Applicable only to variable-sized dimensions.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint32_t<sp/>dim_idx<sp/>=<sp/>2;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>start[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>end[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;bb&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_add_range_var(ctx,<sp/>subarray,<sp/>dim_idx,<sp/>start,<sp/>1,<sp/>end,<sp/>2);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray to add the range to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the dimension to add the range to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The range start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the range start in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The range end. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the range end in bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3497" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3497" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a6c3262b20bee6e5b627ad6019d966af5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_subarray_add_range_var_by_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_subarray_t *subarray, const char *dim_name, const void *start, uint64_t start_size, const void *end, uint64_t end_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_add_range_var_by_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_subarray_t *</type>
          <declname>subarray</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>start_size</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>end_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a 1D variable-sized range along a subarray dimension name, which is in the form (start, end). Applicable only to variable-sized dimensions.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;rows&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>start[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>end[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;bb&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_add_range_var_by_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>subarray,<sp/>dim_name,<sp/>start,<sp/>1,<sp/>end,<sp/>2);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray to add the range to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the dimension to add the range to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The range start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the range start in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The range end. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the range end in bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3529" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3529" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a3fcc0d5b57cc5bfbf708d44d2141bfcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_subarray_get_range_num</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_subarray_t *subarray, uint32_t dim_idx, uint64_t *range_num) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_get_range_num</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_subarray_t *</type>
          <declname>subarray</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dim_idx</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>range_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the number of ranges of the query subarray along a given dimension index.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>range_num;</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_get_range_num(ctx,<sp/>subarray,<sp/>dim_idx,<sp/>&amp;range_num);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the dimension for which to retrieve number of ranges. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the retrieved number of ranges. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3556" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3556" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a2c7fec7b8f72515c81b4e2c0378329b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_subarray_get_range_num_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_subarray_t *subarray, const char *dim_name, uint64_t *range_num) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_get_range_num_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_subarray_t *</type>
          <declname>subarray</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>range_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the number of ranges of the subarray along a given dimension name.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>range_num;</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_get_range_num_from_name(ctx,<sp/>subarray,<sp/>dim_name,<sp/>&amp;range_num);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the dimension whose range number to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the retrieved number of ranges. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3579" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3579" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a1bb37011bd2a5f6a9063d07f68f62a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_subarray_get_range</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_subarray_t *subarray, uint32_t dim_idx, uint64_t range_idx, const void **start, const void **end, const void **stride) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_get_range</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_subarray_t *</type>
          <declname>subarray</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dim_idx</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>range_idx</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a specific range of the subarray along a given dimension index.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>stride;</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_get_range(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>subarray,<sp/>dim_idx,<sp/>range_idx,<sp/>&amp;start,<sp/>&amp;end,<sp/>&amp;stride);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the dimension to retrieve the range from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the range to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the retrieved range start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the received range end. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the retrieved range stride. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3608" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3608" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a55bb75f0cb6a5299aaee8b47acc7bc7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_subarray_get_range_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_subarray_t *subarray, const char *dim_name, uint64_t range_idx, const void **start, const void **end, const void **stride) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_get_range_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_subarray_t *</type>
          <declname>subarray</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>range_idx</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a specific range of the subarray along a given dimension name.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>stride;</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_get_range_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>query,<sp/>dim_name,<sp/>range_idx,<sp/>&amp;start,<sp/>&amp;end,<sp/>&amp;stride);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the dimension to retrieve the range from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the range to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the retrieved range start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the retrieved range end. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the retrieved range stride. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3640" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3640" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a8467248568657ee9b65be63e5fc4fdb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_subarray_get_range_var_size</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_subarray_t *subarray, uint32_t dim_idx, uint64_t range_idx, uint64_t *start_size, uint64_t *end_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_get_range_var_size</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_subarray_t *</type>
          <declname>subarray</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dim_idx</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>range_idx</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>start_size</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>end_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a range&apos;s start and end size for a given variable-length dimension index at a given range index.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>start_size;</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>end_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_get_range_var_size(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>subarray,<sp/>dim_idx,<sp/>range_idx,<sp/>&amp;start_size,<sp/>&amp;end_size);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the dimension to retrieve the range from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the range to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the retrieved range start size in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the retrieved range end size in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3670" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3670" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a6bcef43d5295cb5649f03a44ebc3dd8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_subarray_get_range_var_size_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_subarray_t *subarray, const char *dim_name, uint64_t range_idx, uint64_t *start_size, uint64_t *end_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_get_range_var_size_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_subarray_t *</type>
          <declname>subarray</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>range_idx</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>start_size</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>end_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a range&apos;s start and end size for a given variable-length dimension name at a given range index.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>start_size;</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>end_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_get_range_var_size_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>subarray,<sp/>dim_name,<sp/>range_idx,<sp/>&amp;start_size,<sp/>&amp;end_size);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the dimension to retrieve the range from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the range to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the retrieved range start size in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the retrieved range end size in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3699" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3699" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a7fc5aab26fe789fae466bebc18d610c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_subarray_get_range_var</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_subarray_t *subarray, uint32_t dim_idx, uint64_t range_idx, void *start, void *end) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_get_range_var</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_subarray_t *</type>
          <declname>subarray</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dim_idx</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>range_idx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a specific range of the subarray along a given variable-length dimension index.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end;</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_get_range_var(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>subarray,<sp/>dim_idx,<sp/>range_idx,<sp/>&amp;start,<sp/>&amp;end);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the dimension to retrieve the range from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the range to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the retrieved range start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the retrieved range end. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3728" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3728" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aa5ec005072de7535f433d6a194164490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_subarray_get_range_var_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_subarray_t *subarray, const char *dim_name, uint64_t range_idx, void *start, void *end) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_subarray_get_range_var_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_subarray_t *</type>
          <declname>subarray</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>range_idx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a specific range of the subarray along a given variable-length dimension name.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end;</highlight></codeline>
<codeline><highlight class="normal">tiledb_subarray_get_range_var_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>subarray,<sp/>dim_name,<sp/>range_idx,<sp/>&amp;start,<sp/>&amp;end);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the dimension to retrieve the range from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the range to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the retrieved range start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the retrieved range end. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3757" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3757" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aa1508ef58bf8e7017a70c673c2bb438b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_alloc</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *array_uri, tiledb_array_t **array) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_alloc</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>array_uri</declname>
        </param>
        <param>
          <type>tiledb_array_t **</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a TileDB array object.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The array URI. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object to be created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3784" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3784" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a000bba8ce6fab80cdf80d2c5c55ef235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_set_open_timestamp_start</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, uint64_t timestamp_start) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_set_open_timestamp_start</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>timestamp_start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the starting timestamp to use when opening (and reopening) the array. This is an inclusive bound. The default value is <computeroutput>0</computeroutput>.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;s3://tiledb_bucket/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_set_open_timestamp_start(ctx,<sp/>array,<sp/>1234);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to set the timestamp on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp_start</parametername>
</parameternamelist>
<parameterdescription>
<para>The epoch timestamp in milliseconds. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3807" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3807" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a5f9f4ac500caffb763aacdfb5b951170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_set_open_timestamp_end</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, uint64_t timestamp_end) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_set_open_timestamp_end</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>timestamp_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the ending timestamp to use when opening (and reopening) the array. This is an inclusive bound. The UINT64_MAX timestamp is a reserved timestamp that will be interpretted as the current timestamp when an array is opened. The default value is <computeroutput>UINT64_MAX</computeroutput>.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;s3://tiledb_bucket/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_set_open_timestamp_end(ctx,<sp/>array,<sp/>5678);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to set the timestamp on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp_end</parametername>
</parameternamelist>
<parameterdescription>
<para>The epoch timestamp in milliseconds. Use UINT64_MAX for the current timestamp. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3833" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3833" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a99b3cd96591fc07c245c9eee848d27e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_get_open_timestamp_start</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, uint64_t *timestamp_start) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_open_timestamp_start</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>timestamp_start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the starting timestamp used when opening (and reopening) the array. This is an inclusive bound.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;s3://tiledb_bucket/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_set_open_timestamp_start(ctx,<sp/>array,<sp/>1234);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>timestamp_start;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_get_open_timestamp_start(ctx,<sp/>array,<sp/>&amp;timestamp_start);</highlight></codeline>
<codeline><highlight class="normal">assert(timestamp_start<sp/>==<sp/>1234);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to set the timestamp on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp_start</parametername>
</parameternamelist>
<parameterdescription>
<para>The output epoch timestamp in milliseconds. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3860" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3860" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aa7b0e1fab69905e7078190d7a7726d04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_get_open_timestamp_end</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, uint64_t *timestamp_end) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_open_timestamp_end</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>timestamp_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the ending timestamp used when opening (and reopening) the array. This is an inclusive bound. If UINT64_MAX was set, this will return the timestamp at the time the array was opened. If the array has not yet been opened, it will return UINT64_MAX.`</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;s3://tiledb_bucket/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_set_open_timestamp_end(ctx,<sp/>array,<sp/>5678);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>timestamp_end;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_get_open_timestamp_end(ctx,<sp/>array,<sp/>&amp;timestamp_end);</highlight></codeline>
<codeline><highlight class="normal">assert(timestamp_start<sp/>==<sp/>5678);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to set the timestamp on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp_end</parametername>
</parameternamelist>
<parameterdescription>
<para>The output epoch timestamp in milliseconds. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3889" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3889" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a7c667acfe18fd6e49a87c20a59fb04bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_delete_fragments</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, const char *uri, uint64_t timestamp_start, uint64_t timestamp_end) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_delete_fragments</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>timestamp_start</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>timestamp_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deletes array fragments written between the input timestamps.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_delete_fragments(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ctx,<sp/>array,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///temp/my_array&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>UINT64_MAX);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to delete the fragments from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The URI of the fragments&apos; parent Array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp_start</parametername>
</parameternamelist>
<parameterdescription>
<para>The epoch timestamp in milliseconds. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp_end</parametername>
</parameternamelist>
<parameterdescription>
<para>The epoch timestamp in milliseconds. Use UINT64_MAX for the current timestamp. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3912" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3912" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a1435fd16fc3ced847e8cb385b7ae2ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_open</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, tiledb_query_type_t query_type) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_open</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>tiledb_query_type_t</type>
          <declname>query_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opens a TileDB array. The array is opened using a query type as input. This is to indicate that queries created for this <computeroutput>tiledb_array_t</computeroutput> object will inherit the query type. In other words, <computeroutput>tiledb_array_t</computeroutput> objects are opened to receive only one type of queries. They can always be closed and be re-opened with another query type. Also there may be many different <computeroutput>tiledb_array_t</computeroutput> objects created and opened with different query types.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object to be opened. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of queries the array object will be receiving. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>If the same array object is opened again without being closed, an error will be thrown. </para>
</simplesect>
<simplesect kind="note"><para>The config should be set before opening an array. </para>
</simplesect>
<simplesect kind="note"><para>If the array is to be opened at a specfic time interval, the <computeroutput>timestamp{start, end}</computeroutput> values should be set to a config that&apos;s set to the array object before opening the array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3948" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3948" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a6fd3f3f8956f72539ce168751cd09c26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_array_open_at</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, tiledb_query_type_t query_type, uint64_t timestamp) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_open_at</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>tiledb_query_type_t</type>
          <declname>query_type</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to <computeroutput>tiledb_array_open</computeroutput>, but this function takes as input a timestamp, representing time in milliseconds ellapsed since 1970-01-01 00:00:00 +0000 (UTC). Opening the array at a timestamp provides a view of the array with all writes/updates that happened at or before <computeroutput>timestamp</computeroutput> (i.e., excluding those that occurred after <computeroutput>timestamp</computeroutput>). This function is useful to ensure consistency at a potential distributed setting, where machines need to operate on the same view of the array.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Assuming<sp/>`timestamp`<sp/>is<sp/>time<sp/>represented<sp/>in<sp/>milliseconds:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open_at(ctx,<sp/>array,<sp/>TILEDB_READ,<sp/>timestamp);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object to be opened. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of queries the array object will be receiving. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp to open the array at. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>If the same array object is opened again without being closed, an error will be thrown. </para>
</simplesect>
<simplesect kind="note"><para>This function is applicable only to read queries. </para>
</simplesect>
<simplesect kind="note"><para>The config should be set before opening an array. </para>
</simplesect>
<simplesect kind="note"><para>If the array is to be opened at a specfic time interval, the <computeroutput>timestamp{start, end}</computeroutput> values should be set to a config that&apos;s set to the array object before opening the array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="3986" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="3986" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1af657cebaaf0817098248a6709d659824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_array_open_with_key</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, tiledb_query_type_t query_type, tiledb_encryption_type_t encryption_type, const void *encryption_key, uint32_t key_length) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_open_with_key</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>tiledb_query_type_t</type>
          <declname>query_type</declname>
        </param>
        <param>
          <type>tiledb_encryption_type_t</type>
          <declname>encryption_type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>encryption_key</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opens an encrypted array using the given encryption key. This function has the same semantics as <computeroutput>tiledb_array_open()</computeroutput> but is used for encrypted arrays.</para>
<para>An encrypted array must be opened with this function before queries can be issued to it.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="comment">//<sp/>Load<sp/>AES-256<sp/>key<sp/>from<sp/>disk,<sp/>environment<sp/>variable,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>key[32]<sp/>=<sp/>...;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open_with_key(ctx,<sp/>array,<sp/>TILEDB_READ,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TILEDB_AES_256_GCM,<sp/>key,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(key));</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object to be opened. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of queries the array object will be receiving. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encryption_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The encryption type to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encryption_key</parametername>
</parameternamelist>
<parameterdescription>
<para>The encryption key to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length in bytes of the encryption key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>The config should be set before opening an array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4020" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4020" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a253612be77795d5df7dd7e562f42c07d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_array_open_at_with_key</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, tiledb_query_type_t query_type, tiledb_encryption_type_t encryption_type, const void *encryption_key, uint32_t key_length, uint64_t timestamp) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_open_at_with_key</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>tiledb_query_type_t</type>
          <declname>query_type</declname>
        </param>
        <param>
          <type>tiledb_encryption_type_t</type>
          <declname>encryption_type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>encryption_key</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key_length</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to <computeroutput>tiledb_array_open_with_key</computeroutput>, but this function takes as input a timestamp, representing time in milliseconds ellapsed since 1970-01-01 00:00:00 +0000 (UTC). Opening the array at a timestamp provides a view of the array with all writes/updates that happened at or before <computeroutput>timestamp</computeroutput> (i.e., excluding those that occurred after <computeroutput>timestamp</computeroutput>). This function is useful to ensure consistency at a potential distributed setting, where machines need to operate on the same view of the array.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="comment">//<sp/>Load<sp/>AES-256<sp/>key<sp/>from<sp/>disk,<sp/>environment<sp/>variable,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>key[32]<sp/>=<sp/>...;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Assuming<sp/>`timestamp`<sp/>is<sp/>time<sp/>represented<sp/>in<sp/>milliseconds:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open_at_with_key(ctx,<sp/>array,<sp/>TILEDB_READ,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TILEDB_AES_256_GCM,<sp/>key,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(key),<sp/>timestamp);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object to be opened. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of queries the array object will be receiving. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encryption_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The encryption type to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encryption_key</parametername>
</parameternamelist>
<parameterdescription>
<para>The encryption key to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length in bytes of the encryption key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp to open the array at. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>If the same array object is opened again without being closed, an error will be thrown. </para>
</simplesect>
<simplesect kind="note"><para>This function is applicable only to read queries. </para>
</simplesect>
<simplesect kind="note"><para>The config should be set before opening an array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4064" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4064" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ad6f04081dd5ce053ba2afd8cdd84d6e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_is_open</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, int32_t *is_open) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_is_open</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>is_open</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if the array is open.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be checked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_open</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>1</computeroutput> if the array is open and <computeroutput>0</computeroutput> otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4081" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4081" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a978f1aebbc867bcc1c5d14b4d464ea5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_reopen</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_reopen</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reopens a TileDB array (the array must be already open). This is useful when the array got updated after it got opened and the <computeroutput>tiledb_array_t</computeroutput> object got created. To sync-up with the updates, the user must either close the array and open with <computeroutput>tiledb_array_open</computeroutput>, or just use <computeroutput>tiledb_array_reopen</computeroutput> without closing. This function will be generally faster than the former alternative.</para>
<para>Note: reopening encrypted arrays does not require the encryption key.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_reopen(ctx,<sp/>array);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object to be re-opened. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>This is applicable only to arrays opened for reads. </para>
</simplesect>
<simplesect kind="note"><para>If the array is to be reopened after opening at a specfic time interval, the <computeroutput>timestamp{start, end}</computeroutput> values and subsequent config object should be reset for the array before reopening. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4114" column="1" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4114" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a1a0bf2f319853075eddb67f33995d3c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_array_reopen_at</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, uint64_t timestamp) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_reopen_at</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reopens a TileDB array (the array must be already open) at a specific timestamp.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>timestamp<sp/>=<sp/>tiledb_timestamp_now_ms();</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_reopen_at(ctx,<sp/>array,<sp/>timestamp);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object to be re-opened. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp at which to reopen. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>This is applicable only to arrays opened for reads. </para>
</simplesect>
<simplesect kind="note"><para>If the array is to be reopened after opening at a specfic time interval, the <computeroutput>timestamp{start, end}</computeroutput> values and subsequent config object should be reset for the array before reopening. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4141" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4141" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a4ba2065bfad03ac5ea1295a9169a402f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_array_get_timestamp</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, uint64_t *timestamp) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_timestamp</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The start/end timestamps for opening an array are now set in the config.</para>
<para>Returns the timestamp, representing time in milliseconds ellapsed since 1970-01-01 00:00:00 +0000 (UTC), at which the array was opened. See also the documentation of <computeroutput>tiledb_array_open_at</computeroutput>.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;s3://tiledb_bucket/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>timestamp<sp/>the<sp/>array<sp/>at<sp/>which<sp/>the<sp/>array<sp/>was<sp/>opened.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>timestamp;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_get_timestamp(ctx,<sp/>array,<sp/>&amp;timestamp);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to retrieve the timestamp for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to the timestamp at which the array was opened. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>The array does not need to be open to use this function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4172" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4172" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a5c06b943194918165dd50c965d65b928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_set_config</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, tiledb_config_t *config) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_set_config</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>tiledb_config_t *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the array config.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;s3://tiledb_bucket/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>config<sp/>for<sp/>the<sp/>given<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_config_t*<sp/>config;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_set_config(ctx,<sp/>array,<sp/>config);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to set the config for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>The config to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>The array does not need to be opened via <computeroutput>tiledb_array_open_at</computeroutput> to use this function. </para>
</simplesect>
<simplesect kind="note"><para>The config should be set before opening an array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4200" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4200" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ad2327ea92b76e868291f1ca8057cb919" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_get_config</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, tiledb_config_t **config) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_config</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>tiledb_config_t **</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the array config.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>config<sp/>for<sp/>the<sp/>given<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_config_t*<sp/>config;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_get_config(ctx,<sp/>array,<sp/>config);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to set the config for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to the retrieved config. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4221" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4221" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a8ecb3be784b63426396eba8836962759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_close</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_close</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Closes a TileDB array.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_close(ctx,<sp/>array);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object to be closed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>If the array object has already been closed, the function has no effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4246" column="1" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4246" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ad090ae38d07691719fdc651fb0e29982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT void</type>
        <definition>TILEDB_EXPORT void tiledb_array_free</definition>
        <argsstring>(tiledb_array_t **array) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_free</name>
        <param>
          <type>tiledb_array_t **</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Frees a TileDB array object.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_close(ctx,<sp/>array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_free(&amp;array);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object to be freed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4263" column="20" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4263" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1af1814a54ddfa89960000ad88dfc3e9b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_get_schema</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, tiledb_array_schema_t **array_schema) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_schema</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t **</type>
          <declname>array_schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the schema of an array.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_schema_t*<sp/>array_schema;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_get_schema(ctx,<sp/>array,<sp/>&amp;array_schema);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The open array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>The user must free the array schema with <computeroutput>tiledb_array_schema_free</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4282" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4282" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a218b7e77fd1d357a5ae07e5f618cd047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_get_query_type</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, tiledb_query_type_t *query_type) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_query_type</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>tiledb_query_type_t *</type>
          <declname>query_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the query type with which the array was opened.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal">tiledb_query_type_t<sp/>query_type;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_get_type(ctx,<sp/>array,<sp/>&amp;query_type);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The query type to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4305" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4305" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ab0a9cfa788cdf24b980f854ed570ff2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_create</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *array_uri, const tiledb_array_schema_t *array_schema) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_create</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>array_uri</declname>
        </param>
        <param>
          <type>const tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new TileDB array given an input schema.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_create(ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">,<sp/>array_schema);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The array name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4324" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4324" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aea068d3d5c7937af9f88469ab7088d39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_array_create_with_key</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *array_uri, const tiledb_array_schema_t *array_schema, tiledb_encryption_type_t encryption_type, const void *encryption_key, uint32_t key_length) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_create_with_key</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>array_uri</declname>
        </param>
        <param>
          <type>const tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>tiledb_encryption_type_t</type>
          <declname>encryption_type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>encryption_key</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new encrypted TileDB array given an input schema.</para>
<para>Encrypted arrays can only be created through this function.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint8_t<sp/>key[32]<sp/>=<sp/>...;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_create_with_key(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">,<sp/>array_schema,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TILEDB_AES_256_GCM,<sp/>key,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(key));</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The array name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encryption_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The encryption type to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encryption_key</parametername>
</parameternamelist>
<parameterdescription>
<para>The encryption key to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length in bytes of the encryption key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4351" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4351" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a0aca2bac7e8d875233f9903575524221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_consolidate</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *array_uri, tiledb_config_t *config) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_consolidate</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>array_uri</declname>
        </param>
        <param>
          <type>tiledb_config_t *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Depending on the consoliation mode in the config, consolidates either the fragment files, fragment metadata files, or array metadata files into a single file.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_consolidate(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the TileDB array whose metadata will be consolidated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration parameters for the consolidation (<computeroutput>nullptr</computeroutput> means default, which will use the config from <computeroutput>ctx</computeroutput>). The <computeroutput>sm.consolidation.mode</computeroutput> parameter determines which type of consolidation to perform.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> on success, and <computeroutput>TILEDB_ERR</computeroutput> on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4381" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4381" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a3f6b610a883363c78f6c8d8a34847c3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_array_consolidate_with_key</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *array_uri, tiledb_encryption_type_t encryption_type, const void *encryption_key, uint32_t key_length, tiledb_config_t *config) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_consolidate_with_key</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>array_uri</declname>
        </param>
        <param>
          <type>tiledb_encryption_type_t</type>
          <declname>encryption_type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>encryption_key</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key_length</declname>
        </param>
        <param>
          <type>tiledb_config_t *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Depending on the consoliation mode in the config, consolidates either the fragment files, fragment metadata files, or array metadata files into a single file.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint8_t<sp/>key[32]<sp/>=<sp/>...;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_consolidate_with_key(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TILEDB_AES_256_GCM,<sp/>key,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(key),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the TileDB array to be consolidated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encryption_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The encryption type to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encryption_key</parametername>
</parameternamelist>
<parameterdescription>
<para>The encryption key to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length in bytes of the encryption key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration parameters for the consolidation (<computeroutput>nullptr</computeroutput> means default, which will use the config from <computeroutput>ctx</computeroutput>). The <computeroutput>sm.consolidation.mode</computeroutput> parameter determines which type of consolidation to perform.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> on success, and <computeroutput>TILEDB_ERR</computeroutput> on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4412" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4412" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1af53c47c2b402f29f44f7d937c6393831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_vacuum</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *array_uri, tiledb_config_t *config) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_vacuum</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>array_uri</declname>
        </param>
        <param>
          <type>tiledb_config_t *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cleans up the array, such as consolidated fragments and array metadata. Note that this will coarsen the granularity of time traveling (see docs for more information).</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_vacuum(ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the TileDB array to vacuum. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration parameters for the vacuuming (<computeroutput>nullptr</computeroutput> means default, which will use the config from <computeroutput>ctx</computeroutput>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> on success, and <computeroutput>TILEDB_ERR</computeroutput> on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4437" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4437" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1acdb7d75c9a5eb329f8604b41ec397dd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_get_non_empty_domain</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, void *domain, int32_t *is_empty) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_non_empty_domain</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>is_empty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the non-empty domain from an array. This is the union of the non-empty domains of the array fragments.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>domain[4];<sp/></highlight><highlight class="comment">//<sp/>Assuming<sp/>a<sp/>2D<sp/>array,<sp/>2<sp/>[low,<sp/>high]<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>is_empty;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_get_non_empty_domain(ctx,<sp/>array,<sp/>domain,<sp/>&amp;is_empty);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object (must be opened beforehand). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain to be retrieved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_empty</parametername>
</parameternamelist>
<parameterdescription>
<para>The function sets it to <computeroutput>1</computeroutput> if the non-empty domain is empty (i.e., the array does not contain any data yet), and <computeroutput>0</computeroutput> otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4464" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4464" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a974a562ec96318bf3513c0bda421bcc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_get_non_empty_domain_from_index</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, uint32_t idx, void *domain, int32_t *is_empty) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_non_empty_domain_from_index</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>is_empty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the non-empty domain from an array for a given dimension index. This is the union of the non-empty domains of the array fragments on the given dimension.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>domain[2];</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>is_empty;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_get_non_empty_domain_from_index(ctx,<sp/>array,<sp/>0,<sp/>domain,</highlight></codeline>
<codeline><highlight class="normal">&amp;is_empty);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object (must be opened beforehand). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension index, following the order as it was defined in the domain of the array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain to be retrieved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_empty</parametername>
</parameternamelist>
<parameterdescription>
<para>The function sets it to <computeroutput>1</computeroutput> if the non-empty domain is empty (i.e., the array does not contain any data yet), and <computeroutput>0</computeroutput> otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4494" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4494" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a52c8ded40dec3b61d9d7b0a670375d2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_get_non_empty_domain_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, const char *name, void *domain, int32_t *is_empty) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_non_empty_domain_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>is_empty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the non-empty domain from an array for a given dimension name. This is the union of the non-empty domains of the array fragments on the given dimension.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>domain[2];</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>is_empty;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_get_non_empty_domain_from_name(ctx,<sp/>array,<sp/></highlight><highlight class="stringliteral">&quot;d1&quot;</highlight><highlight class="normal">,<sp/>domain,</highlight></codeline>
<codeline><highlight class="normal">&amp;is_empty);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object (must be opened beforehand). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain to be retrieved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_empty</parametername>
</parameternamelist>
<parameterdescription>
<para>The function sets it to <computeroutput>1</computeroutput> if the non-empty domain is empty (i.e., the array does not contain any data yet), and <computeroutput>0</computeroutput> otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4526" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4526" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1abb8c4055c513d19044e9228344da8673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_get_non_empty_domain_var_size_from_index</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, uint32_t idx, uint64_t *start_size, uint64_t *end_size, int32_t *is_empty) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_non_empty_domain_var_size_from_index</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>start_size</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>end_size</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>is_empty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the non-empty domain range sizes from an array for a given dimension index. This is the union of the non-empty domains of the array fragments on the given dimension. Applicable only to var-sized dimensions.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">int32_t<sp/>is_empty;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>start_size,<sp/>end_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_get_non_empty_domain_var_size_from_index(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>array,<sp/>0,<sp/>&amp;start_size,<sp/>&amp;end_size,<sp/>&amp;is_empty);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>non-empty<sp/>domain<sp/>range<sp/>is<sp/>`[aa,<sp/>dddd]`,<sp/>then<sp/>`start_size<sp/>=<sp/>2`</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>`end_size<sp/>=<sp/>4`.</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object (must be opened beforehand). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension index, following the order as it was defined in the domain of the array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the start range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the end range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_empty</parametername>
</parameternamelist>
<parameterdescription>
<para>The function sets it to <computeroutput>1</computeroutput> if the non-empty domain is empty (i.e., the array does not contain any data yet), and <computeroutput>0</computeroutput> otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4562" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4562" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a5486cafc39d5c7242feaf51481d4b828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_get_non_empty_domain_var_size_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, const char *name, uint64_t *start_size, uint64_t *end_size, int32_t *is_empty) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_non_empty_domain_var_size_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>start_size</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>end_size</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>is_empty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the non-empty domain range sizes from an array for a given dimension name. This is the union of the non-empty domains of the array fragments on the given dimension. Applicable only to var-sized dimensions.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">int32_t<sp/>is_empty;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>start_size,<sp/>end_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_get_non_empty_domain_var_size_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>array,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/>&amp;start_size,<sp/>&amp;end_size,<sp/>&amp;is_empty);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>non-empty<sp/>domain<sp/>range<sp/>is<sp/>`[aa,<sp/>dddd]`,<sp/>then<sp/>`start_size<sp/>=<sp/>2`</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>`end_size<sp/>=<sp/>4`.</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object (must be opened beforehand). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the start range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the end range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_empty</parametername>
</parameternamelist>
<parameterdescription>
<para>The function sets it to <computeroutput>1</computeroutput> if the non-empty domain is empty (i.e., the array does not contain any data yet), and <computeroutput>0</computeroutput> otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4598" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4598" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a3e7e6aaa4c841283057382341d54cd73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_get_non_empty_domain_var_from_index</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, uint32_t idx, void *start, void *end, int32_t *is_empty) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_non_empty_domain_var_from_index</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>is_empty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the non-empty domain from an array for a given dimension index. This is the union of the non-empty domains of the array fragments on the given dimension. Applicable only to var-sized dimensions.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">int32_t<sp/>is_empty;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>range<sp/>sizes<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>start_size,<sp/>end_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_get_non_empty_domain_var_size_from_index(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>array,<sp/>0,<sp/>&amp;start_size,<sp/>&amp;end_size,<sp/>&amp;is_empty);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>start[start_size];</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>end[end_size];</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_get_non_empty_domain_var_from_index(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>array,<sp/>0,<sp/>start,<sp/>end,<sp/>&amp;is_empty);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object (must be opened beforehand). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension index, following the order as it was defined in the domain of the array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain range start to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain range end to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_empty</parametername>
</parameternamelist>
<parameterdescription>
<para>The function sets it to <computeroutput>1</computeroutput> if the non-empty domain is empty (i.e., the array does not contain any data yet), and <computeroutput>0</computeroutput> otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4641" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4641" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aa2be57cadcb89303364b7ffd6b527087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_get_non_empty_domain_var_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, const char *name, void *start, void *end, int32_t *is_empty) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_non_empty_domain_var_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>is_empty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the non-empty domain from an array for a given dimension name. This is the union of the non-empty domains of the array fragments on the given dimension. Applicable only to var-sized dimensions.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>domain[2];</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>is_empty;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_t*<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;array);</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_open(ctx,<sp/>array,<sp/>TILEDB_READ);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>range<sp/>sizes<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>start_size,<sp/>end_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_get_non_empty_domain_var_size_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>array,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/>&amp;start_size,<sp/>&amp;end_size,<sp/>&amp;is_empty);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>start[start_size];</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>end[end_size];</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_get_non_empty_domain_var_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>array,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/>start,<sp/>end,<sp/>&amp;is_empty);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object (must be opened beforehand). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain range start to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain range end to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_empty</parametername>
</parameternamelist>
<parameterdescription>
<para>The function sets it to <computeroutput>1</computeroutput> if the non-empty domain is empty (i.e., the array does not contain any data yet), and <computeroutput>0</computeroutput> otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4684" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4684" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a434cb29c02319014411cf353d7e7fa92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_get_uri</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, const char **array_uri) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_uri</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>array_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the URI the array was opened with. It outputs an error if the array is not open.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The input array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The array URI to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4701" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4701" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a80196037c013bb7a04efa71b4b6aa773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_encryption_type</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *array_uri, tiledb_encryption_type_t *encryption_type) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_encryption_type</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>array_uri</declname>
        </param>
        <param>
          <type>tiledb_encryption_type_t *</type>
          <declname>encryption_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the encryption type the array at the given URI was created with.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The array URI. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encryption_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The array encryption type to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4714" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4714" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a3b24a3b63c16ac2d02827fbddfb66084" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_put_metadata</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, const char *key, tiledb_datatype_t value_type, uint32_t value_num, const void *value) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_put_metadata</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>tiledb_datatype_t</type>
          <declname>value_type</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value_num</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>It puts a metadata key-value item to an open array. The array must be opened in WRITE mode, otherwise the function will error out.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>An array opened in WRITE mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key of the metadata item to be added. UTF-8 encodings are acceptable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype of the value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The value may consist of more than one items of the same datatype. This argument indicates the number of items in the value component of the metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The metadata value in binary form. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>The writes will take effect only upon closing the array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4736" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4736" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a32560bef6c16afc9f2d1e573135d9dd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_delete_metadata</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, const char *key) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_delete_metadata</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>It deletes a metadata key-value item from an open array. The array must be opened in WRITE mode, otherwise the function will error out.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>An array opened in WRITE mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key of the metadata item to be deleted. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>The writes will take effect only upon closing the array.</para>
</simplesect>
<simplesect kind="note"><para>If the key does not exist, this will take no effect (i.e., the function will not error out). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4758" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4758" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a5f73834466ad1a49b24c35f1f5731c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_get_metadata</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, const char *key, tiledb_datatype_t *value_type, uint32_t *value_num, const void **value) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_metadata</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>tiledb_datatype_t *</type>
          <declname>value_type</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>value_num</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>It gets a metadata key-value item from an open array. The array must be opened in READ mode, otherwise the function will error out.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>An array opened in READ mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key of the metadata item to be retrieved. UTF-8 encodings are acceptable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype of the value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The value may consist of more than one items of the same datatype. This argument indicates the number of items in the value component of the metadata. Keys with empty values are indicated by value_num == 1 and value == NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The metadata value in binary form. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>If the key does not exist, then <computeroutput>value</computeroutput> will be NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4779" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4779" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a88a2b24a4fc32b586fb8d2f9e5fa81f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_get_metadata_num</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, uint64_t *num) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_metadata_num</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>It gets then number of metadata items in an open array. The array must be opened in READ mode, otherwise the function will error out.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>An array opened in READ mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of metadata items to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4796" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4796" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ae0f839de3d4bd422c8a004d80d3e094c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_get_metadata_from_index</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, uint64_t index, const char **key, uint32_t *key_len, tiledb_datatype_t *value_type, uint32_t *value_num, const void **value) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_get_metadata_from_index</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>key</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>key_len</declname>
        </param>
        <param>
          <type>tiledb_datatype_t *</type>
          <declname>value_type</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>value_num</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>It gets a metadata item from an open array using an index. The array must be opened in READ mode, otherwise the function will error out.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>An array opened in READ mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index used to get the metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The metadata key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_len</parametername>
</parameternamelist>
<parameterdescription>
<para>The metadata key length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype of the value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The value may consist of more than one items of the same datatype. This argument indicates the number of items in the value component of the metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The metadata value in binary form. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4816" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4816" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a8f29bdfab9e83c254450f5aeee4c7bde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_array_has_metadata_key</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, const char *key, tiledb_datatype_t *value_type, int32_t *has_key) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_has_metadata_key</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>tiledb_datatype_t *</type>
          <declname>value_type</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>has_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks whether a key exists in metadata from an open array. The array must be opened in READ mode, otherwise the function will error out.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>An array opened in READ mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to be checked. UTF-8 encoding are acceptable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype of the value, if any. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>has_key</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to <computeroutput>1</computeroutput> if the metadata with given key exists, else <computeroutput>0</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>If the key does not exist, then <computeroutput>value</computeroutput> will be NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4839" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4839" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a3717f77164a73d8ab3dfeaa5f67060fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_array_consolidate_metadata</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *array_uri, tiledb_config_t *config) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_consolidate_metadata</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>array_uri</declname>
        </param>
        <param>
          <type>tiledb_config_t *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Consolidates the array metadata into a single array metadata file.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_consolidate_metadata(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the TileDB array whose metadata will be consolidated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration parameters for the consolidation (<computeroutput>nullptr</computeroutput> means default, which will use the config from <computeroutput>ctx</computeroutput>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> on success, and <computeroutput>TILEDB_ERR</computeroutput> on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4863" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4863" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aa3990067a4fda534707ae449d74aa9b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_array_consolidate_metadata_with_key</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *array_uri, tiledb_encryption_type_t encryption_type, const void *encryption_key, uint32_t key_length, tiledb_config_t *config) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_array_consolidate_metadata_with_key</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>array_uri</declname>
        </param>
        <param>
          <type>tiledb_encryption_type_t</type>
          <declname>encryption_type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>encryption_key</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key_length</declname>
        </param>
        <param>
          <type>tiledb_config_t *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Consolidates the array metadata of an encrypted array into a single file.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint8_t<sp/>key[32]<sp/>=<sp/>...;</highlight></codeline>
<codeline><highlight class="normal">tiledb_array_consolidate_metadata_with_key(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/></highlight><highlight class="stringliteral">&quot;hdfs:///tiledb_arrays/my_array&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TILEDB_AES_256_GCM,<sp/>key,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(key),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the TileDB array to be consolidated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encryption_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The encryption type to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encryption_key</parametername>
</parameternamelist>
<parameterdescription>
<para>The encryption key to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length in bytes of the encryption key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration parameters for the consolidation (<computeroutput>nullptr</computeroutput> means default, which will use the config from <computeroutput>ctx</computeroutput>).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> on success, and <computeroutput>TILEDB_ERR</computeroutput> on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4890" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4890" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a9af9c9c18524f9ac07f6a277ee5ad995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_object_type</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *path, tiledb_object_t *type) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_object_type</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>tiledb_object_t *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the TileDB object type for a given resource path.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_object_t<sp/>type;</highlight></codeline>
<codeline><highlight class="normal">tiledb_object_type(ctx,<sp/></highlight><highlight class="stringliteral">&quot;arrays/my_array&quot;</highlight><highlight class="normal">,<sp/>&amp;type);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The URI path to the TileDB resource. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> on success, <computeroutput>TILEDB_ERR</computeroutput> on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4917" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4917" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a921dbe0653c22de254a3d8bc051c317d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_object_remove</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *path) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_object_remove</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deletes a TileDB resource (group, array, key-value).</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_object_remove(ctx,<sp/></highlight><highlight class="stringliteral">&quot;arrays/my_array&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The URI path to the tiledb resource. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4933" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4933" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a62a6c768fe32096d2fad173a233ac804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_object_move</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *old_path, const char *new_path) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_object_move</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>old_path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>new_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves a TileDB resource (group, array, key-value).</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_object_move(ctx,<sp/></highlight><highlight class="stringliteral">&quot;arrays/my_array&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;arrays/my_array_2&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>old_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The old TileDB directory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The new TileDB directory. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4950" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4950" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a09b2a3aba5802e9f76535f1213b13607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_object_walk</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *path, tiledb_walk_order_t order, int32_t(*callback)(const char *, tiledb_object_t, void *), void *data) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_object_walk</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>tiledb_walk_order_t</type>
          <declname>order</declname>
        </param>
        <param>
          <type>int32_t(*)(const char *, tiledb_object_t, void *)</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Walks (iterates) over the TileDB objects contained in <emphasis>path</emphasis>. The traversal is done recursively in the order defined by the user. The user provides a callback function which is applied on each of the visited TileDB objects. The iteration continues for as long the callback returns non-zero, and stops when the callback returns 0. Note that this function ignores any object (e.g., file or directory) that is not TileDB-related.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_object_walk(ctx,<sp/></highlight><highlight class="stringliteral">&quot;arrays&quot;</highlight><highlight class="normal">,<sp/>TILEDB_PREORDER,<sp/>NULL,<sp/>NULL);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path in which the traversal will occur. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>order</parametername>
</parameternamelist>
<parameterdescription>
<para>The order of the recursive traversal (e.g., pre-order or post-order. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function to be applied on every visited object. The callback should return <computeroutput>0</computeroutput> if the iteration must stop, and <computeroutput>1</computeroutput> if the iteration must continue. It takes as input the currently visited path, the type of that path (e.g., array or group), and the data provided by the user for the callback. The callback returns <computeroutput>-1</computeroutput> upon error. Note that <computeroutput>path</computeroutput> in the callback will be an <bold>absolute</bold> path. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data passed in the callback as the last argument. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="4982" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="4982" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a3752ac1da346056766165673988b6108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_object_ls</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *path, int32_t(*callback)(const char *, tiledb_object_t, void *), void *data) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_object_ls</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int32_t(*)(const char *, tiledb_object_t, void *)</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to <computeroutput>tiledb_walk</computeroutput>, but now the function visits only the children of <computeroutput>path</computeroutput> (i.e., it does not recursively continue to the children directories).</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_object_ls(ctx,<sp/></highlight><highlight class="stringliteral">&quot;arrays&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>NULL);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path in which the traversal will occur. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function to be applied on every visited object. The callback should return <computeroutput>0</computeroutput> if the iteration must stop, and <computeroutput>1</computeroutput> if the iteration must continue. It takes as input the currently visited path, the type of that path (e.g., array or group), and the data provided by the user for the callback. The callback returns <computeroutput>-1</computeroutput> upon error. Note that <computeroutput>path</computeroutput> in the callback will be an <bold>absolute</bold> path. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data passed in the callback as the last argument. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5010" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5010" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1afa9870d90659ab7050ab0bd3b84f80b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_uri_to_path</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *uri, char *path_out, uint32_t *path_length) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_uri_to_path</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path_out</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>path_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts the given file URI to a null-terminated platform-native file path.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[TILEDB_MAX_PATH];</highlight></codeline>
<codeline><highlight class="normal">uint32_t<sp/>length<sp/>=<sp/>TILEDB_MAX_PATH;<sp/></highlight><highlight class="comment">//<sp/>Must<sp/>be<sp/>set<sp/>to<sp/>non-zero</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_uri_to_path(ctx,<sp/></highlight><highlight class="stringliteral">&quot;file:///my_array&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>&amp;length);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>set<sp/>&quot;my_array&quot;<sp/>to<sp/>`path`</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The URI to be converted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path_out</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer where the converted path string is stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path_length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the path buffer. On return, this is set to the length of the converted path string, or 0 on error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error.</para>
</simplesect>
<simplesect kind="note"><para>The path_out buffer must be allocated according to the platform&apos;s maximum path length (e.g. `TILEDB_MAX_PATH), which includes space for the terminating null character. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5043" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5043" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a96264f40f8739407c92e25a22e35b712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_stats_enable</definition>
        <argsstring>(void) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_stats_enable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable internal statistics gathering.</para>
<para><simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5056" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5056" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ab9049a3aadd1b61a87b057da6d063c91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_stats_disable</definition>
        <argsstring>(void) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_stats_disable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable internal statistics gathering.</para>
<para><simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5063" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5063" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ad68e7271f4607acdea1f7b7174c9fc89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_stats_reset</definition>
        <argsstring>(void) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_stats_reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset all internal statistics counters to 0.</para>
<para><simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5070" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5070" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1af3cc2ed64afd8f211d0739e484e0f8a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_stats_dump</definition>
        <argsstring>(FILE *out) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_stats_dump</name>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dump all internal statistics counters to some output (e.g., file or stdout).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5079" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5079" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1acbb9764a827d805c3c7a2a323bfcbf0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_stats_dump_str</definition>
        <argsstring>(char **out) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_stats_dump_str</name>
        <param>
          <type>char **</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dump all internal statistics counters to an output string. The caller is responsible for freeing the resulting string.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stats_str;</highlight></codeline>
<codeline><highlight class="normal">tiledb_stats_dump_str(&amp;stats_str);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_stats_free_str(&amp;stats_str);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to point to an allocated string containing the stats. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5097" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5097" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1acec0924590c792f834a06ff7d769e301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_stats_raw_dump</definition>
        <argsstring>(FILE *out) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_stats_raw_dump</name>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dump all raw internal statistics counters to some output (e.g., file or stdout) as a JSON.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5106" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5106" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a219e1f2cfdfc0513e1f2fa5531d99388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_stats_raw_dump_str</definition>
        <argsstring>(char **out) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_stats_raw_dump_str</name>
        <param>
          <type>char **</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dump all raw internal statistics counters to a JSON-formatted output string. The caller is responsible for freeing the resulting string.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stats_str;</highlight></codeline>
<codeline><highlight class="normal">tiledb_stats_raw_dump_str(&amp;stats_str);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_stats_raw_free_str(&amp;stats_str);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to point to an allocated string containing the stats. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5124" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5124" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ae325d72756d3c928affe61041bad3303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_stats_free_str</definition>
        <argsstring>(char **out) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_stats_free_str</name>
        <param>
          <type>char **</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free the memory associated with a previously dumped stats string.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a previously allocated stats string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5133" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5133" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aa8c34fc4055e61895bc2bdb842faf0a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_heap_profiler_enable</definition>
        <argsstring>(const char *file_name_prefix, uint64_t dump_interval_ms, uint64_t dump_interval_bytes, uint64_t dump_threshold_bytes) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_heap_profiler_enable</name>
        <param>
          <type>const char *</type>
          <declname>file_name_prefix</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>dump_interval_ms</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>dump_interval_bytes</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>dump_threshold_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable heap profiling.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name_prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>If empty or null, stats are dumped to stdout. If non-empty, this specifies the file_name prefix to write to. For example, value &quot;tiledb_mem_stats&quot; will write to &quot;tiledb_mem_stats__1611170501&quot;, where the postfix is determined by the current epoch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dump_interval_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-zero, this spawns a dedicated thread to dump on this time interval. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dump_interval_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-zero, a dump will occur when the total number of lifetime allocated bytes is increased by more than this amount. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dump_threshold_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-zero, labeled allocations with a number of bytes lower than this threshold will not be reported in the dump. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5157" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5157" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a9e4aadc04345ae44f16d72ff3968a80b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_alloc</definition>
        <argsstring>(tiledb_ctx_t *ctx, const char *array_uri, tiledb_fragment_info_t **fragment_info) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_alloc</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>array_uri</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t **</type>
          <declname>fragment_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a fragment info object for a given array, and fetches all the fragment information for that array.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_fragment_info*<sp/>fragment_info;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;array_uri&quot;</highlight><highlight class="normal">,<sp/>&amp;fragment_info);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The array URI. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object to be created and populated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5183" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5183" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a3d7fb0378bbc6c10223255d8045c2847" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT void</type>
        <definition>TILEDB_EXPORT void tiledb_fragment_info_free</definition>
        <argsstring>(tiledb_fragment_info_t **fragment_info) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_free</name>
        <param>
          <type>tiledb_fragment_info_t **</type>
          <declname>fragment_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Frees a fragment info object.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_fragment_info_free(&amp;fragment_info);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object to be freed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5199" column="20" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5199" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aeaa7003a50d7d10c2fd4ec1f7ce7491c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_set_config</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, tiledb_config_t *config) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_set_config</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>tiledb_config_t *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the fragment info config. Useful for passing timestamp ranges and encryption key via the config before loading the fragment info.</para>
<para><itemizedlist>
<listitem><para><bold>Example:</bold></para>
</listitem></itemizedlist>
</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_fragment_info*<sp/>fragment_info;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_alloc(ctx,<sp/></highlight><highlight class="stringliteral">&quot;array_uri&quot;</highlight><highlight class="normal">,<sp/>&amp;fragment_info);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_config_t*<sp/>config;</highlight></codeline>
<codeline><highlight class="normal">tiledb_error_t*<sp/>error<sp/>=<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal">tiledb_config_alloc(&amp;config,<sp/>&amp;error);</highlight></codeline>
<codeline><highlight class="normal">tiledb_config_set(config,<sp/></highlight><highlight class="stringliteral">&quot;sm.tile_cache_size&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1000000&quot;</highlight><highlight class="normal">,<sp/>&amp;error);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_load(ctx,<sp/>fragment_info);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5221" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5221" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a3f5bf5f1f3cbbe4a203393c31a54c025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_config</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, tiledb_config_t **config) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_config</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>tiledb_config_t **</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the config from fragment info.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_config_t*<sp/>config;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_config(ctx,<sp/>vfs,<sp/>&amp;config);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>to<sp/>free<sp/>the<sp/>retrieved<sp/>config</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>The config to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_OOM</computeroutput> or <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5242" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5242" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a6fc9fa341f39c021e990d1a178f3fd7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_load</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_load</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loads the fragment info.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_fragment_info_load(ctx,<sp/>fragment_info);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5260" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5260" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a4cf8f8eed4d9055e4a2c17d89654bb82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_DEPRECATED_EXPORT int32_t</type>
        <definition>TILEDB_DEPRECATED_EXPORT int32_t tiledb_fragment_info_get_fragment_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, const char **name) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_fragment_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets a fragment name.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_fragment_name(ctx,<sp/>fragment_info,<sp/>1,<sp/>&amp;name);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment name to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5279" column="34" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5279" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a3249243eea5c6b8c703bcc8bff1060ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_fragment_num</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t *fragment_num) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_fragment_num</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>fragment_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the number of fragments.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint32_t<sp/>fragment_num;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_fragment_num(ctx,<sp/>fragment_info,<sp/>&amp;fragment_num);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of fragments to retrieve. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5300" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5300" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1af3bee613b2c517b53a710ef38fc7132a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_fragment_uri</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, const char **uri) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_fragment_uri</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets a fragment URI.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>uri;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_fragment_uri(ctx,<sp/>fragment_info,<sp/>1,<sp/>&amp;uri);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment URI to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5321" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5321" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ab9aea863c9d8254cca558627874090df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_fragment_size</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, uint64_t *size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_fragment_size</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the fragment size in bytes.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_fragment_size(ctx,<sp/>fragment_info,<sp/>1,<sp/>&amp;size);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment size to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5343" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5343" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a3f9a1e09bb5794cefbf683170d42bdfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_dense</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, int32_t *dense) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_dense</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>dense</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if a fragment is dense.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">int32_t<sp/>dense;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_dense(ctx,<sp/>fragment_info,<sp/>1,<sp/>&amp;dense);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dense</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>1</computeroutput> if the fragment is dense. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5365" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5365" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a717a29807a4508601092600e985a6994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_sparse</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, int32_t *sparse) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_sparse</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>sparse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if a fragment is sparse.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">int32_t<sp/>sparse;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_sparse(ctx,<sp/>fragment_info,<sp/>1,<sp/>&amp;sparse);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sparse</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>1</computeroutput> if the fragment is sparse. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5387" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5387" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a9ad8c0ee9bcafa5a5baca64941960570" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_timestamp_range</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, uint64_t *start, uint64_t *end) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_timestamp_range</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the timestamp range of a fragment.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>start,<sp/>end;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_timestamp_range(ctx,<sp/>fragment_info,<sp/>1,<sp/>&amp;start,</highlight></codeline>
<codeline><highlight class="normal">&amp;end);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The start of the timestamp range to be retrieved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The end of the timestamp range to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5411" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5411" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a8a03bb5df9285b184ad50a2aa555b747" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_non_empty_domain_from_index</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, uint32_t did, void *domain) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_non_empty_domain_from_index</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>did</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the non-empty domain from a given fragment for a given dimension index.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>domain[2];</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_non_empty_domain_from_index(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>fragment_info,<sp/>0,<sp/>0,<sp/>domain);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>did</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension index, following the order as it was defined in the domain of the array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5438" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5438" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a2b75ec8d5f60193f7106d003eec02441" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_non_empty_domain_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, const char *dim_name, void *domain) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_non_empty_domain_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the non-empty domain from a given fragment for a given dimension name.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>domain[2];</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_non_empty_domain_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>fragment_info,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;d1&quot;</highlight><highlight class="normal">,<sp/>domain);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5464" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5464" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1ab677438eca056a8105f85410db9429ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_non_empty_domain_var_size_from_index</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, uint32_t did, uint64_t *start_size, uint64_t *end_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_non_empty_domain_var_size_from_index</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>did</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>start_size</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>end_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the non-empty domain range sizes from a fragment for a given dimension index. Applicable to var-sized dimensions.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>start_size,<sp/>end_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_non_empty_domain_var_size_from_index(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>fragment_info,<sp/>0,<sp/>&amp;start_size,<sp/>&amp;end_size);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>non-empty<sp/>domain<sp/>range<sp/>is<sp/>`[aa,<sp/>dddd]`,<sp/>then<sp/>`start_size<sp/>=<sp/>2`</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>`end_size<sp/>=<sp/>4`.</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment information object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>did</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension index, following the order as it was defined in the domain of the array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the start range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the end range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5495" column="1" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5495" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aab24708da54ee401ecf2d37b90e01cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_non_empty_domain_var_size_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, const char *dim_name, uint64_t *start_size, uint64_t *end_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_non_empty_domain_var_size_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>start_size</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>end_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the non-empty domain range sizes from a fragment for a given dimension name. Applicable to var-sized dimensions.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>start_size,<sp/>end_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_non_empty_domain_var_size_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>fragment_info,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/>&amp;start_size,<sp/>&amp;end_size);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>non-empty<sp/>domain<sp/>range<sp/>is<sp/>`[aa,<sp/>dddd]`,<sp/>then<sp/>`start_size<sp/>=<sp/>2`</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>`end_size<sp/>=<sp/>4`.</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment information object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the start range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the end range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5526" column="1" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5526" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a9c505b681ff71ff76703cf4dae11c6ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_non_empty_domain_var_from_index</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, uint32_t did, void *start, void *end) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_non_empty_domain_var_from_index</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>did</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the non-empty domain from a fragment for a given dimension index. Applicable to var-sized dimensions.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="comment">//<sp/>Get<sp/>range<sp/>sizes<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>start_size,<sp/>end_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_non_empty_domain_var_size_from_index(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>fragment_info,<sp/>0,<sp/>0,<sp/>&amp;start_size,<sp/>&amp;end_size);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>start[start_size];</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>end[end_size];</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_non_empty_domain_var_from_index(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>fragment_info,<sp/>0,<sp/>0,<sp/>start,<sp/>end);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>did</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension index, following the order as it was defined in the domain of the array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain range start to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain range end to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5563" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5563" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a6eb00f01e1ec7c61120bfc36eeed28d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_non_empty_domain_var_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, const char *dim_name, void *start, void *end) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_non_empty_domain_var_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the non-empty domain from a fragment for a given dimension name. Applicable to var-sized dimensions.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="comment">//<sp/>Get<sp/>range<sp/>sizes<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>start_size,<sp/>end_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_non_empty_domain_var_size_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>fragment_info,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/>&amp;start_size,<sp/>&amp;end_size);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>start[start_size];</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>end[end_size];</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_non_empty_domain_var_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>fragment_info,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/>start,<sp/>end);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain range start to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain range end to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5599" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5599" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a3fa72e49607fddbfe33299f79e2867df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_mbr_num</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, uint64_t *mbr_num) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_mbr_num</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>mbr_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the number of MBRs from the fragment.</para>
<para>In the case of sparse fragments, this is the number of physical tiles.</para>
<para>Dense fragments do not contain MBRs.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>mbr_num;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_mbr_num(ctx,<sp/>fragment_info,<sp/>0,<sp/>&amp;mbr_num);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mbr_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of MBRs to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5627" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5627" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1afcfade30df04a73b3c4a6be4470f8970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_mbr_from_index</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, uint32_t mid, uint32_t did, void *mbr) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_mbr_from_index</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mid</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>did</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>mbr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the MBR from a given fragment for a given dimension index.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>mbr[2];</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_mbr_from_index(ctx,<sp/>fragment_info,<sp/>0,<sp/>0,<sp/>0,<sp/>mbr);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mid</parametername>
</parameternamelist>
<parameterdescription>
<para>The mbr of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>did</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension index, following the order as it was defined in the domain of the array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mbr</parametername>
</parameternamelist>
<parameterdescription>
<para>The mbr to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5652" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5652" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a38e6d1af21f698eb16da3e4a39dd2227" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_mbr_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, uint32_t mid, const char *dim_name, void *mbr) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_mbr_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>mbr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the MBR from a given fragment for a given dimension name.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>mbr[2];</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_mbr_from_name(ctx,<sp/>fragment_info,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;d1&quot;</highlight><highlight class="normal">,<sp/>mbr);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mid</parametername>
</parameternamelist>
<parameterdescription>
<para>The mbr of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mbr</parametername>
</parameternamelist>
<parameterdescription>
<para>The mbr to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5678" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5678" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1afc08960256c77da8cc2524cc7d17a90f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_mbr_var_size_from_index</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, uint32_t mid, uint32_t did, uint64_t *start_size, uint64_t *end_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_mbr_var_size_from_index</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mid</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>did</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>start_size</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>end_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the MBR sizes from a fragment for a given dimension index. Applicable to var-sized dimensions.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>start_size,<sp/>end_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_mbr_var_size_from_index(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>fragment_info,<sp/>0,<sp/>0,<sp/>0,<sp/>&amp;start_size,<sp/>&amp;end_size);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>non-empty<sp/>domain<sp/>range<sp/>is<sp/>`[aa,<sp/>dddd]`,<sp/>then<sp/>`start_size<sp/>=<sp/>2`</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>`end_size<sp/>=<sp/>4`.</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment information object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mid</parametername>
</parameternamelist>
<parameterdescription>
<para>The mbr of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>did</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension index, following the order as it was defined in the domain of the array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the start range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the end range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5710" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5710" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a061217335f4f581273b7c4aea2e35aa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_mbr_var_size_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, uint32_t mid, const char *dim_name, uint64_t *start_size, uint64_t *end_size) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_mbr_var_size_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>start_size</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>end_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the MBR range sizes from a fragment for a given dimension name. Applicable to var-sized dimensions.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>start_size,<sp/>end_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_mbr_var_size_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>fragment_info,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;d1&quot;</highlight><highlight class="normal">,<sp/>&amp;start_size,<sp/>&amp;end_size);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>non-empty<sp/>domain<sp/>range<sp/>is<sp/>`[aa,<sp/>dddd]`,<sp/>then<sp/>`start_size<sp/>=<sp/>2`</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>`end_size<sp/>=<sp/>4`.</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment information object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mid</parametername>
</parameternamelist>
<parameterdescription>
<para>The mbr of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the start range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the end range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5742" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5742" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a904a5e9574a1a72232cf49d2ad368047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_mbr_var_from_index</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, uint32_t mid, uint32_t did, void *start, void *end) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_mbr_var_from_index</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mid</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>did</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the MBR from a fragment for a given dimension index. Applicable to var-sized dimensions.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="comment">//<sp/>Get<sp/>range<sp/>sizes<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>start_size,<sp/>end_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_mbr_var_size_from_index(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>fragment_info,<sp/>0,<sp/>0,<sp/>0,<sp/>&amp;start_size,<sp/>&amp;end_size);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>start[start_size];</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>end[end_size];</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_mbr_var_from_index(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>fragment_info,<sp/>0,<sp/>0,<sp/>0,<sp/>start,<sp/>end);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mid</parametername>
</parameternamelist>
<parameterdescription>
<para>The mbr of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>did</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension index, following the order as it was defined in the domain of the array schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain range start to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain range end to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5781" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5781" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a202ebd59df5b6b82290f49789fda8b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_mbr_var_from_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, uint32_t mid, const char *dim_name, void *start, void *end) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_mbr_var_from_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dim_name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the MBR from a fragment for a given dimension name. Applicable to var-sized dimensions.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="comment">//<sp/>Get<sp/>range<sp/>sizes<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>start_size,<sp/>end_size;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_mbr_var_size_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>fragment_info,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;d1&quot;</highlight><highlight class="normal">,<sp/>&amp;start_size,<sp/>&amp;end_size);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>start[start_size];</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>end[end_size];</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_mbr_var_from_name(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctx,<sp/>fragment_info,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;d1&quot;</highlight><highlight class="normal">,<sp/>start,<sp/>end);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mid</parametername>
</parameternamelist>
<parameterdescription>
<para>The mbr of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain range start to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain range end to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5819" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5819" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1aaeb6c56057a4ce4dafe20351207188e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_cell_num</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, uint64_t *cell_num) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_cell_num</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>cell_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the number of cells written to the fragment by the user.</para>
<para>In the case of sparse fragments, this is the number of non-empty cells in the fragment.</para>
<para>In the case of dense fragments, TileDB may add fill values to populate partially populated tiles. Those fill values are counted in the returned number of cells. In other words, the cell number is derived from the number of <emphasis>integral</emphasis> tiles written in the file.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint64_t<sp/>cell_num;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_cell_num(ctx,<sp/>fragment_info,<sp/>0,<sp/>&amp;cell_num);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of cells to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5853" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5853" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a230756bcbfc2ef9225f334f124c82ed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_version</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, uint32_t *version) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_version</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the format version of a fragment.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint32_t<sp/>version;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_version(ctx,<sp/>fragment_info,<sp/>0,<sp/>&amp;version);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>The format version to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5875" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5875" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1acfda670a66f933c0d85545ca19bd6b48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_has_consolidated_metadata</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, int32_t *has) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_has_consolidated_metadata</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>has</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if a fragment has consolidated metadata.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">int32_t<sp/>has;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_has_consolidated_metadata(ctx,<sp/>fragment_info,<sp/>0,<sp/>&amp;has);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>has</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the fragment has consolidated metadata. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5897" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5897" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1afcaf10067efa9e1d1f09edee07f45cdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_unconsolidated_metadata_num</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t *unconsolidated) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_unconsolidated_metadata_num</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>unconsolidated</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the number of fragments with unconsolidated metadata.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint32_t<sp/>unconsolidated;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_unconsolidated_metadata_num(ctx,<sp/>fragment_info,</highlight></codeline>
<codeline><highlight class="normal">&amp;unconsolidated);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unconsolidated</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of fragments with unconsolidated metadata. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5919" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5919" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a7d29a52514c6541b6e21a269e221058e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_to_vacuum_num</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t *to_vacuum_num) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_to_vacuum_num</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>to_vacuum_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the number of fragments to vacuum.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">uint32_t<sp/>to_vacuum_num;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_to_vacuum_num(ctx,<sp/>fragment_info,<sp/>&amp;to_vacuum_num);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to_vacuum_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of fragments to vacuum. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5939" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5939" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a362cc69827300985f84923dbf5f0bf74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_to_vacuum_uri</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, const char **uri) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_to_vacuum_uri</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the URI of the fragment to vacuum with the given index.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>uri;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_to_vacuum_uri(ctx,<sp/>fragment_info,<sp/>1,<sp/>&amp;uri);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the fragment to vacuum of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment URI to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5960" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5960" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1abac028d678beb131d28af99e9e9ca94b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_array_schema</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, tiledb_array_schema_t **array_schema) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_array_schema</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t **</type>
          <declname>array_schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the array schema name a fragment.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_array_schema_t*<sp/>array_schema;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_get_array_schema(ctx,<sp/>fragment_info,<sp/>0,<sp/>&amp;array_schema);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the fragment of interest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="5982" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="5982" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a2d81fe8e00867b1218c0ae07aa7511ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_get_array_schema_name</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_fragment_info_t *fragment_info, uint32_t fid, const char **schema_name) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_get_array_schema_name</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fid</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>schema_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the fragment info schema name.</para>
<para><bold>Example:</bold></para>
<para><programlisting filename=".c"><codeline><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name;</highlight></codeline>
<codeline><highlight class="normal">tiledb_fragment_info_schema_name(ctx,<sp/>fragment_info,<sp/>&amp;schema_name);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fid</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">schema_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The schema name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="6004" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="6004" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb_8h_1a72869b99b923e18f17c948549cbc3143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_fragment_info_dump</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_fragment_info_t *fragment_info, FILE *out) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_fragment_info_dump</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dumps the fragment info in ASCII format in the selected output.</para>
<para><bold>Example:</bold></para>
<para>The following prints the fragment info dump in standard output.</para>
<para><programlisting filename=".c"><codeline><highlight class="normal">tiledb_fragment_info_dump(ctx,<sp/>fragment_info,<sp/>stdout);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The fragment info object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" line="6026" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h" declline="6026" declcolumn="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>@file<sp/><sp/><sp/>tiledb.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>@section<sp/>LICENSE</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>@copyright<sp/>Copyright<sp/>(c)<sp/>2017-2021<sp/>TileDB,<sp/>Inc.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>@copyright<sp/>Copyright<sp/>(c)<sp/>2016<sp/>MIT<sp/>and<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>@section<sp/>DESCRIPTION</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>declares<sp/>the<sp/>C<sp/>API<sp/>for<sp/>TileDB.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TILEDB_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb_version.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TILEDB_NO_API_DEPRECATION_WARNINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>these<sp/>before<sp/>including<sp/>tiledb_export.h<sp/>to<sp/>avoid<sp/>their<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>definitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TILEDB_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TILEDB_DEPRECATED_EXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_DEPRECATED_EXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>Common<sp/>definitions<sp/>for<sp/>export,<sp/>noexcept,<sp/>etc.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb/api/c_api/api_external_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>API<sp/>sections</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb/api/c_api/buffer/buffer_api_external.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb/api/c_api/config/config_api_external.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb/api/c_api/context/context_api_external.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb/api/c_api/data_order/data_order_api_external.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb/api/c_api/datatype/datatype_api_external.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb/api/c_api/error/error_api_external.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb/api/c_api/filesystem/filesystem_api_external.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb/api/c_api/filter/filter_api_external.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb/api/c_api/filter_list/filter_list_api_external.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb/api/c_api/group/group_api_external.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb/api/c_api/object/object_api_external.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb/api/c_api/query/query_api_external.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb/api/c_api/vfs/vfs_api_external.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TILEDB<sp/>ENUMS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_QUERY_STATUS_ENUM(id)<sp/>TILEDB_##id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb_enum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TILEDB_QUERY_STATUS_ENUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}<sp/>tiledb_query_status_t;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_QUERY_CONDITION_OP_ENUM(id)<sp/>TILEDB_##id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb_enum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TILEDB_QUERY_CONDITION_OP_ENUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}<sp/>tiledb_query_condition_op_t;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_QUERY_CONDITION_COMBINATION_OP_ENUM(id)<sp/>TILEDB_##id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb_enum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TILEDB_QUERY_CONDITION_COMBINATION_OP_ENUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}<sp/>tiledb_query_condition_combination_op_t;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_ARRAY_TYPE_ENUM(id)<sp/>TILEDB_##id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb_enum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TILEDB_ARRAY_TYPE_ENUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">}<sp/>tiledb_array_type_t;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_LAYOUT_ENUM(id)<sp/>TILEDB_##id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb_enum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TILEDB_LAYOUT_ENUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}<sp/>tiledb_layout_t;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_ENCRYPTION_TYPE_ENUM(id)<sp/>TILEDB_##id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb_enum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TILEDB_ENCRYPTION_TYPE_ENUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">}<sp/>tiledb_encryption_type_t;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_MIME_TYPE_ENUM(id)<sp/>TILEDB_##id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb_enum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TILEDB_MIME_TYPE_ENUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}<sp/>tiledb_mime_type_t;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ENUMS<sp/>TO/FROM<sp/>STR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_type_to_str(</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_type_t<sp/>array_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>str)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_type_from_str(</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/>tiledb_array_type_t*<sp/>array_type)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t</highlight></codeline>
<codeline lineno="171"><highlight class="normal">tiledb_layout_to_str(tiledb_layout_t<sp/>layout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>str)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_layout_from_str(</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/>tiledb_layout_t*<sp/>layout)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_encryption_type_to_str(</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_encryption_type_t<sp/>encryption_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>str)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_encryption_type_from_str(</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/>tiledb_encryption_type_t*<sp/>encryption_type)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_status_to_str(</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_status_t<sp/>query_status,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>str)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_status_from_str(</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/>tiledb_query_status_t*<sp/>query_status)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSTANTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">TILEDB_EXPORT<sp/>uint32_t<sp/>tiledb_var_num(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal">TILEDB_EXPORT<sp/>uint32_t<sp/>tiledb_max_path(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">TILEDB_EXPORT<sp/>uint64_t<sp/>tiledb_offset_size(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">TILEDB_EXPORT<sp/>uint64_t<sp/>tiledb_timestamp_now_ms(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal">TILEDB_EXPORT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tiledb_timestamps(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_VAR_NUM<sp/>tiledb_var_num()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_MAX_PATH<sp/>tiledb_max_path()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_OFFSET_SIZE<sp/>tiledb_offset_size()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_TIMESTAMP_NOW_MS<sp/>tiledb_timestamp_now_ms()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_TIMESTAMPS<sp/>tiledb_timestamps()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VERSION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal">TILEDB_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tiledb_version(int32_t*<sp/>major,<sp/>int32_t*<sp/>minor,<sp/>int32_t*<sp/>rev)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TILEDB<sp/>TYPES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tiledb_array_t<sp/>tiledb_array_t;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tiledb_subarray_t<sp/>tiledb_subarray_t;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tiledb_buffer_list_t<sp/>tiledb_buffer_list_t;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tiledb_attribute_t<sp/>tiledb_attribute_t;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tiledb_array_schema_t<sp/>tiledb_array_schema_t;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tiledb_dimension_t<sp/>tiledb_dimension_t;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tiledb_domain_t<sp/>tiledb_domain_t;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tiledb_query_t<sp/>tiledb_query_t;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tiledb_query_condition_t<sp/>tiledb_query_condition_t;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tiledb_fragment_info_t<sp/>tiledb_fragment_info_t;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tiledb_consolidation_plan_t<sp/>tiledb_consolidation_plan_t;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BUFFER<sp/>LIST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_buffer_list_alloc(</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,<sp/>tiledb_buffer_list_t**<sp/>buffer_list)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">TILEDB_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tiledb_buffer_list_free(tiledb_buffer_list_t**<sp/>buffer_list)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_buffer_list_get_num_buffers(</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_list_t*<sp/>buffer_list,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>num_buffers)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_buffer_list_get_buffer(</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_list_t*<sp/>buffer_list,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>buffer_idx,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_t**<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_buffer_list_get_total_size(</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_list_t*<sp/>buffer_list,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>total_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_buffer_list_flatten(</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_list_t*<sp/>buffer_list,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_t**<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATTRIBUTE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_attribute_alloc(</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_datatype_t<sp/>type,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_attribute_t**<sp/>attr)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal">TILEDB_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tiledb_attribute_free(tiledb_attribute_t**<sp/>attr)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_attribute_set_nullable(</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_attribute_t*<sp/>attr,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>nullable)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_attribute_set_filter_list(</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_attribute_t*<sp/>attr,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_filter_list_t*<sp/>filter_list)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_attribute_set_cell_val_num(</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_attribute_t*<sp/>attr,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cell_val_num)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_attribute_get_name(</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_attribute_t*<sp/>attr,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>name)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_attribute_get_type(</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_attribute_t*<sp/>attr,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_datatype_t*<sp/>type)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_attribute_get_nullable(</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_attribute_t*<sp/>attr,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>nullable)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_attribute_get_filter_list(</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_attribute_t*<sp/>attr,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_filter_list_t**<sp/>filter_list)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_attribute_get_cell_val_num(</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_attribute_t*<sp/>attr,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/>cell_val_num)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_attribute_get_cell_size(</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_attribute_t*<sp/>attr,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>cell_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_attribute_dump(</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_attribute_t*<sp/>attr,</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>out)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_attribute_set_fill_value(</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_attribute_t*<sp/>attr,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>value,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_attribute_get_fill_value(</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_attribute_t*<sp/>attr,</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>value,</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_attribute_set_fill_value_nullable(</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_attribute_t*<sp/>attr,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>value,</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>size,</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>validity)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_attribute_get_fill_value_nullable(</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_attribute_t*<sp/>attr,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>value,</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>size,</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>valid)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOMAIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_domain_alloc(</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,<sp/>tiledb_domain_t**<sp/>domain)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal">TILEDB_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tiledb_domain_free(tiledb_domain_t**<sp/>domain)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_domain_get_type(</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_domain_t*<sp/>domain,</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_datatype_t*<sp/>type)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_domain_get_ndim(</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_domain_t*<sp/>domain,</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/>ndim)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_domain_add_dimension(</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_domain_t*<sp/>domain,</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_dimension_t*<sp/>dim)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_domain_get_dimension_from_index(</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_domain_t*<sp/>domain,</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>index,</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_dimension_t**<sp/>dim)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_domain_get_dimension_from_name(</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_domain_t*<sp/>domain,</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_dimension_t**<sp/>dim)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_domain_has_dimension(</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_domain_t*<sp/>domain,</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t*<sp/>has_dim)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_domain_dump(</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_domain_t*<sp/>domain,</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>out)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIMENSION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_dimension_alloc(</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_datatype_t<sp/>type,</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dim_domain,</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>tile_extent,</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_dimension_t**<sp/>dim)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal">TILEDB_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tiledb_dimension_free(tiledb_dimension_t**<sp/>dim)</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_dimension_set_filter_list(</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_dimension_t*<sp/>dim,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_filter_list_t*<sp/>filter_list)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_dimension_set_cell_val_num(</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_dimension_t*<sp/>dim,</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cell_val_num)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_dimension_get_filter_list(</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_dimension_t*<sp/>dim,</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_filter_list_t**<sp/>filter_list)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_dimension_get_cell_val_num(</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_dimension_t*<sp/>dim,</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/>cell_val_num)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_dimension_get_name(</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_dimension_t*<sp/>dim,</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>name)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_dimension_get_type(</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_dimension_t*<sp/>dim,</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_datatype_t*<sp/>type)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_dimension_get_domain(</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_dimension_t*<sp/>dim,</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>domain)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_dimension_get_tile_extent(</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_dimension_t*<sp/>dim,</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>tile_extent)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_dimension_dump(</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_dimension_t*<sp/>dim,</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>out)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARRAY<sp/>SCHEMA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_alloc(</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_type_t<sp/>array_type,</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t**<sp/>array_schema)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal">TILEDB_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tiledb_array_schema_free(</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t**<sp/>array_schema)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_add_attribute(</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_attribute_t*<sp/>attr)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_set_allows_dups(</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allows_dups)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_get_allows_dups(</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>allows_dups)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_get_version(</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/>version)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_set_domain(</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_domain_t*<sp/>domain)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_set_capacity(</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>capacity)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_set_cell_order(</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_layout_t<sp/>cell_order)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_set_tile_order(</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_layout_t<sp/>tile_order)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_set_coords_filter_list(</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_filter_list_t*<sp/>filter_list)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_set_offsets_filter_list(</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_filter_list_t*<sp/>filter_list)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_set_validity_filter_list(</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_filter_list_t*<sp/>filter_list)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_check(</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,<sp/>tiledb_array_schema_t*<sp/>array_schema)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_load(</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>array_uri,</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t**<sp/>array_schema)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_load_with_key(</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>array_uri,</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_encryption_type_t<sp/>encryption_type,</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>encryption_key,</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>key_length,</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t**<sp/>array_schema)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_get_array_type(</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_type_t*<sp/>array_type)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_get_capacity(</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>capacity)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_get_cell_order(</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_layout_t*<sp/>cell_order)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_get_coords_filter_list(</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_filter_list_t**<sp/>filter_list)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_get_offsets_filter_list(</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_filter_list_t**<sp/>filter_list)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_get_validity_filter_list(</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_filter_list_t**<sp/>filter_list)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_get_domain(</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_domain_t**<sp/>domain)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_get_tile_order(</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_layout_t*<sp/>tile_order)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_get_attribute_num(</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/>attribute_num)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_get_attribute_from_index(</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>index,</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_attribute_t**<sp/>attr)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_get_attribute_from_name(</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_attribute_t**<sp/>attr)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_has_attribute(</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t*<sp/>has_attr)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_schema_dump(</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>out)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QUERY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_alloc(</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_type_t<sp/>query_type,</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t**<sp/>query)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_get_stats(</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>stats_json)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_set_config(</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_config_t*<sp/>config)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_get_config(</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_config_t**<sp/>config)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_query_set_subarray(</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>subarray)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_set_subarray_t(</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_subarray_t*<sp/>subarray)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_set_data_buffer(</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer,</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>buffer_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_set_offsets_buffer(</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>buffer,</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>buffer_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_set_validity_buffer(</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>buffer,</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>buffer_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_get_data_buffer(</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>buffer,</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t**<sp/>buffer_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_get_offsets_buffer(</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t**<sp/>buffer,</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t**<sp/>buffer_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_get_validity_buffer(</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t**<sp/>buffer,</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t**<sp/>buffer_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_set_layout(</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_layout_t<sp/>layout)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_set_condition(</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_condition_t*<sp/>cond)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t</highlight></codeline>
<codeline lineno="2371"><highlight class="normal">tiledb_query_finalize(tiledb_ctx_t*<sp/>ctx,<sp/>tiledb_query_t*<sp/>query)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_submit_and_finalize(</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,<sp/>tiledb_query_t*<sp/>query)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal">TILEDB_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tiledb_query_free(tiledb_query_t**<sp/>query)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t</highlight></codeline>
<codeline lineno="2445"><highlight class="normal">tiledb_query_submit(tiledb_ctx_t*<sp/>ctx,<sp/>tiledb_query_t*<sp/>query)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_query_submit_async(</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*callback)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>callback_data)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_has_results(</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t*<sp/>has_results)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight></codeline>
<codeline lineno="2535"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_get_status(</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_status_t*<sp/>status)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_get_type(</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_type_t*<sp/>query_type)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_get_layout(</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_layout_t*<sp/>query_layout)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_get_array(</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t**<sp/>array)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2625"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_query_add_range(</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dim_idx,</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end,</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>stride)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_query_add_range_by_name(</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end,</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>stride)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_query_add_range_var(</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dim_idx,</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>start_size,</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end,</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>end_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"></highlight></codeline>
<codeline lineno="2719"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_query_add_range_var_by_name(</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>start_size,</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end,</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>end_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"></highlight></codeline>
<codeline lineno="2745"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_query_get_range_num(</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dim_idx,</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>range_num)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_query_get_range_num_from_name(</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>range_num)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_query_get_range(</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dim_idx,</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>range_idx,</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>start,</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>end,</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>stride)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_query_get_range_from_name(</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>range_idx,</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>start,</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>end,</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>stride)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"></highlight></codeline>
<codeline lineno="2859"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_query_get_range_var_size(</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dim_idx,</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>range_idx,</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>start_size,</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>end_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_query_get_range_var_size_from_name(</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>range_idx,</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>start_size,</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>end_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_query_get_range_var(</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dim_idx,</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>range_idx,</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"></highlight></codeline>
<codeline lineno="2946"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_query_get_range_var_from_name(</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>range_idx,</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_get_est_result_size(</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"></highlight></codeline>
<codeline lineno="3002"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_get_est_result_size_var(</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>size_off,</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>size_val)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"></highlight></codeline>
<codeline lineno="3033"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_get_est_result_size_nullable(</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>size_val,</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>size_validity)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"></highlight></codeline>
<codeline lineno="3060"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_get_est_result_size_var_nullable(</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>size_off,</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>size_val,</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>size_validity)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_get_fragment_num(</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/>num)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"></highlight></codeline>
<codeline lineno="3111"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_get_fragment_uri(</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>idx,</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>uri)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"></highlight></codeline>
<codeline lineno="3138"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_get_fragment_timestamp_range(</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>idx,</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>t1,</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>t2)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"></highlight></codeline>
<codeline lineno="3160"><highlight class="normal">TILEDB_EXPORT</highlight></codeline>
<codeline lineno="3161"><highlight class="normal">int32_t<sp/>tiledb_query_get_subarray_t(</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_subarray_t**<sp/>subarray)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"></highlight></codeline>
<codeline lineno="3166"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QUERY<sp/>CONDITION<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3168"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3169"><highlight class="normal"></highlight></codeline>
<codeline lineno="3184"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_condition_alloc(</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,<sp/>tiledb_query_condition_t**<sp/>cond)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"></highlight></codeline>
<codeline lineno="3204"><highlight class="normal">TILEDB_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tiledb_query_condition_free(tiledb_query_condition_t**<sp/>cond)</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_condition_init(</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_condition_t*<sp/>cond,</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>attribute_name,</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>condition_value,</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>condition_value_size,</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_condition_op_t<sp/>op)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_query_condition_combine(</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_condition_t*<sp/>left_cond,</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_condition_t*<sp/>right_cond,</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_condition_combination_op_t<sp/>combination_op,</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_condition_t**<sp/>combined_cond)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3293"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUBARRAY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3295"><highlight class="normal"></highlight></codeline>
<codeline lineno="3313"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_subarray_alloc(</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_subarray_t**<sp/>subarray)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"></highlight></codeline>
<codeline lineno="3326"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_subarray_set_config(</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_subarray_t*<sp/>subarray,</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_config_t*<sp/>config)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"></highlight></codeline>
<codeline lineno="3346"><highlight class="normal">TILEDB_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tiledb_subarray_free(tiledb_subarray_t**<sp/>subarray)</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_subarray_set_coalesce_ranges(</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_subarray_t*<sp/>subarray,</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coalesce_ranges)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"></highlight></codeline>
<codeline lineno="3402"><highlight class="normal">TILEDB_EXPORT</highlight></codeline>
<codeline lineno="3403"><highlight class="normal">int32_t<sp/>tiledb_subarray_set_subarray(</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_subarray_t*<sp/>subarray,</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>subarray_v)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"></highlight></codeline>
<codeline lineno="3433"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_subarray_add_range(</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_subarray_t*<sp/>subarray,</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dim_idx,</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end,</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>stride)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_subarray_add_range_by_name(</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_subarray_t*<sp/>subarray,</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end,</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>stride)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"></highlight></codeline>
<codeline lineno="3497"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_subarray_add_range_var(</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_subarray_t*<sp/>subarray,</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dim_idx,</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>start_size,</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end,</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>end_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"></highlight></codeline>
<codeline lineno="3529"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_subarray_add_range_var_by_name(</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_subarray_t*<sp/>subarray,</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>start_size,</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end,</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>end_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight></codeline>
<codeline lineno="3556"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_subarray_get_range_num(</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_subarray_t*<sp/>subarray,</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dim_idx,</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>range_num)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"></highlight></codeline>
<codeline lineno="3579"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_subarray_get_range_num_from_name(</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_subarray_t*<sp/>subarray,</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>range_num)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"></highlight></codeline>
<codeline lineno="3608"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_subarray_get_range(</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_subarray_t*<sp/>subarray,</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dim_idx,</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>range_idx,</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>start,</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>end,</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>stride)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"></highlight></codeline>
<codeline lineno="3640"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_subarray_get_range_from_name(</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_subarray_t*<sp/>subarray,</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>range_idx,</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>start,</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>end,</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>stride)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"></highlight></codeline>
<codeline lineno="3670"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_subarray_get_range_var_size(</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_subarray_t*<sp/>subarray,</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dim_idx,</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>range_idx,</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>start_size,</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>end_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"></highlight></codeline>
<codeline lineno="3699"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_subarray_get_range_var_size_from_name(</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_subarray_t*<sp/>subarray,</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>range_idx,</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>start_size,</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>end_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"></highlight></codeline>
<codeline lineno="3728"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_subarray_get_range_var(</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_subarray_t*<sp/>subarray,</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dim_idx,</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>range_idx,</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight></codeline>
<codeline lineno="3757"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_subarray_get_range_var_from_name(</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_subarray_t*<sp/>subarray,</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>range_idx,</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"></highlight></codeline>
<codeline lineno="3765"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3766"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARRAY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"></highlight></codeline>
<codeline lineno="3784"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_alloc(</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>array_uri,</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t**<sp/>array)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"></highlight></codeline>
<codeline lineno="3807"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_set_open_timestamp_start(</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>timestamp_start)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"></highlight></codeline>
<codeline lineno="3833"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_set_open_timestamp_end(</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>timestamp_end)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"></highlight></codeline>
<codeline lineno="3860"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_get_open_timestamp_start(</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>timestamp_start)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"></highlight></codeline>
<codeline lineno="3889"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_get_open_timestamp_end(</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>timestamp_end)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"></highlight></codeline>
<codeline lineno="3912"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_delete_fragments(</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>uri,</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>timestamp_start,</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>timestamp_end)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"></highlight></codeline>
<codeline lineno="3948"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_open(</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_type_t<sp/>query_type)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"></highlight></codeline>
<codeline lineno="3986"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_array_open_at(</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_type_t<sp/>query_type,</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>timestamp)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"></highlight></codeline>
<codeline lineno="4020"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_array_open_with_key(</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_type_t<sp/>query_type,</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_encryption_type_t<sp/>encryption_type,</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>encryption_key,</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>key_length)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"></highlight></codeline>
<codeline lineno="4064"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_array_open_at_with_key(</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_type_t<sp/>query_type,</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_encryption_type_t<sp/>encryption_type,</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>encryption_key,</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>key_length,</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>timestamp)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"></highlight></codeline>
<codeline lineno="4081"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_is_open(</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,<sp/>tiledb_array_t*<sp/>array,<sp/>int32_t*<sp/>is_open)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"></highlight></codeline>
<codeline lineno="4113"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t</highlight></codeline>
<codeline lineno="4114"><highlight class="normal">tiledb_array_reopen(tiledb_ctx_t*<sp/>ctx,<sp/>tiledb_array_t*<sp/>array)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"></highlight></codeline>
<codeline lineno="4141"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_array_reopen_at(</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>timestamp)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"></highlight></codeline>
<codeline lineno="4172"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_array_get_timestamp(</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>timestamp)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"></highlight></codeline>
<codeline lineno="4200"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_set_config(</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_config_t*<sp/>config)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"></highlight></codeline>
<codeline lineno="4221"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_get_config(</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_config_t**<sp/>config)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"></highlight></codeline>
<codeline lineno="4245"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t</highlight></codeline>
<codeline lineno="4246"><highlight class="normal">tiledb_array_close(tiledb_ctx_t*<sp/>ctx,<sp/>tiledb_array_t*<sp/>array)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"></highlight></codeline>
<codeline lineno="4263"><highlight class="normal">TILEDB_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tiledb_array_free(tiledb_array_t**<sp/>array)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"></highlight></codeline>
<codeline lineno="4282"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_get_schema(</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t**<sp/>array_schema)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"></highlight></codeline>
<codeline lineno="4305"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_get_query_type(</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_type_t*<sp/>query_type)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"></highlight></codeline>
<codeline lineno="4324"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_create(</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>array_uri,</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_schema_t*<sp/>array_schema)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_array_create_with_key(</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>array_uri,</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_encryption_type_t<sp/>encryption_type,</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>encryption_key,</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>key_length)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"></highlight></codeline>
<codeline lineno="4381"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_consolidate(</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>array_uri,</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_config_t*<sp/>config)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"></highlight></codeline>
<codeline lineno="4412"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_array_consolidate_with_key(</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>array_uri,</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_encryption_type_t<sp/>encryption_type,</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>encryption_key,</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>key_length,</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_config_t*<sp/>config)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"></highlight></codeline>
<codeline lineno="4437"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_vacuum(</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>array_uri,</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_config_t*<sp/>config)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"></highlight></codeline>
<codeline lineno="4464"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_get_non_empty_domain(</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,<sp/>tiledb_array_t*<sp/>array,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>domain,<sp/>int32_t*<sp/>is_empty)</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"></highlight></codeline>
<codeline lineno="4494"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_get_non_empty_domain_from_index(</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>idx,</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>domain,</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t*<sp/>is_empty)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"></highlight></codeline>
<codeline lineno="4526"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_get_non_empty_domain_from_name(</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>domain,</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t*<sp/>is_empty)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"></highlight></codeline>
<codeline lineno="4562"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_get_non_empty_domain_var_size_from_index(</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>idx,</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>start_size,</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>end_size,</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t*<sp/>is_empty)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"></highlight></codeline>
<codeline lineno="4598"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_get_non_empty_domain_var_size_from_name(</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>start_size,</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>end_size,</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t*<sp/>is_empty)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"></highlight></codeline>
<codeline lineno="4641"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_get_non_empty_domain_var_from_index(</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>idx,</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end,</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t*<sp/>is_empty)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"></highlight></codeline>
<codeline lineno="4684"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_get_non_empty_domain_var_from_name(</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end,</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t*<sp/>is_empty)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"></highlight></codeline>
<codeline lineno="4701"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_get_uri(</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>array_uri)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"></highlight></codeline>
<codeline lineno="4714"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_encryption_type(</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>array_uri,</highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_encryption_type_t*<sp/>encryption_type)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"></highlight></codeline>
<codeline lineno="4736"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_put_metadata(</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_datatype_t<sp/>value_type,</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>value_num,</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>value)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"></highlight></codeline>
<codeline lineno="4758"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_delete_metadata(</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,<sp/>tiledb_array_t*<sp/>array,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"></highlight></codeline>
<codeline lineno="4779"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_get_metadata(</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_datatype_t*<sp/>value_type,</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/>value_num,</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>value)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"></highlight></codeline>
<codeline lineno="4796"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_get_metadata_num(</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,<sp/>tiledb_array_t*<sp/>array,<sp/>uint64_t*<sp/>num)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"></highlight></codeline>
<codeline lineno="4816"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_get_metadata_from_index(</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>index,</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>key,</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/>key_len,</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_datatype_t*<sp/>value_type,</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/>value_num,</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>value)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"></highlight></codeline>
<codeline lineno="4839"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_array_has_metadata_key(</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_datatype_t*<sp/>value_type,</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t*<sp/>has_key)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"></highlight></codeline>
<codeline lineno="4863"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_array_consolidate_metadata(</highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>array_uri,</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_config_t*<sp/>config)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"></highlight></codeline>
<codeline lineno="4890"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_array_consolidate_metadata_with_key(</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>array_uri,</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_encryption_type_t<sp/>encryption_type,</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>encryption_key,</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>key_length,</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_config_t*<sp/>config)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4897"><highlight class="normal"></highlight></codeline>
<codeline lineno="4898"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4899"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OBJECT<sp/>MANAGEMENT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4900"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*********************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4901"><highlight class="normal"></highlight></codeline>
<codeline lineno="4917"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_object_type(</highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/>tiledb_object_t*<sp/>type)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"></highlight></codeline>
<codeline lineno="4933"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_object_remove(tiledb_ctx_t*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path)</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/><sp/><sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"></highlight></codeline>
<codeline lineno="4950"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_object_move(</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>old_path,</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>new_path)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"></highlight></codeline>
<codeline lineno="4982"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_object_walk(</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_walk_order_t<sp/>order,</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>(*callback)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/>tiledb_object_t,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"></highlight></codeline>
<codeline lineno="5010"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_object_ls(</highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>(*callback)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/>tiledb_object_t,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"></highlight></codeline>
<codeline lineno="5016"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5017"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>URI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5018"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5019"><highlight class="normal"></highlight></codeline>
<codeline lineno="5043"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_uri_to_path(</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>uri,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path_out,<sp/>uint32_t*<sp/>path_length)</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/><sp/><sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"></highlight></codeline>
<codeline lineno="5047"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5048"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Stats<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5049"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5050"><highlight class="normal"></highlight></codeline>
<codeline lineno="5056"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_stats_enable(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"></highlight></codeline>
<codeline lineno="5063"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_stats_disable(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"></highlight></codeline>
<codeline lineno="5070"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_stats_reset(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"></highlight></codeline>
<codeline lineno="5079"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_stats_dump(FILE*<sp/>out)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5080"><highlight class="normal"></highlight></codeline>
<codeline lineno="5097"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_stats_dump_str(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>out)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5098"><highlight class="normal"></highlight></codeline>
<codeline lineno="5106"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_stats_raw_dump(FILE*<sp/>out)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"></highlight></codeline>
<codeline lineno="5124"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_stats_raw_dump_str(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>out)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5125"><highlight class="normal"></highlight></codeline>
<codeline lineno="5133"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_stats_free_str(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>out)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5134"><highlight class="normal"></highlight></codeline>
<codeline lineno="5135"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Heap<sp/>Profiler<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5137"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5138"><highlight class="normal"></highlight></codeline>
<codeline lineno="5157"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_heap_profiler_enable(</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file_name_prefix,</highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>dump_interval_ms,</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>dump_interval_bytes,</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>dump_threshold_bytes)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"></highlight></codeline>
<codeline lineno="5163"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5164"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FRAGMENT<sp/>INFO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5165"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5166"><highlight class="normal"></highlight></codeline>
<codeline lineno="5183"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_alloc(</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>array_uri,</highlight></codeline>
<codeline lineno="5186"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t**<sp/>fragment_info)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"></highlight></codeline>
<codeline lineno="5199"><highlight class="normal">TILEDB_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tiledb_fragment_info_free(</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t**<sp/>fragment_info)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5201"><highlight class="normal"></highlight></codeline>
<codeline lineno="5221"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_set_config(</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_config_t*<sp/>config)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5225"><highlight class="normal"></highlight></codeline>
<codeline lineno="5242"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_config(</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_config_t**<sp/>config)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"></highlight></codeline>
<codeline lineno="5260"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_load(</highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,<sp/>tiledb_fragment_info_t*<sp/>fragment_info)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"></highlight></codeline>
<codeline lineno="5279"><highlight class="normal">TILEDB_DEPRECATED_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_fragment_name(</highlight></codeline>
<codeline lineno="5280"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5282"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>name)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5284"><highlight class="normal"></highlight></codeline>
<codeline lineno="5300"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_fragment_num(</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/>fragment_num)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"></highlight></codeline>
<codeline lineno="5321"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_fragment_uri(</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>uri)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"></highlight></codeline>
<codeline lineno="5343"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_fragment_size(</highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"></highlight></codeline>
<codeline lineno="5365"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_dense(</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t*<sp/>dense)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"></highlight></codeline>
<codeline lineno="5387"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_sparse(</highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t*<sp/>sparse)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"></highlight></codeline>
<codeline lineno="5411"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_timestamp_range(</highlight></codeline>
<codeline lineno="5412"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5413"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5414"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5415"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>start,</highlight></codeline>
<codeline lineno="5416"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>end)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5417"><highlight class="normal"></highlight></codeline>
<codeline lineno="5438"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_non_empty_domain_from_index(</highlight></codeline>
<codeline lineno="5439"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5440"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5441"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5442"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>did,</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>domain)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5444"><highlight class="normal"></highlight></codeline>
<codeline lineno="5464"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_non_empty_domain_from_name(</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>domain)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5470"><highlight class="normal"></highlight></codeline>
<codeline lineno="5494"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t</highlight></codeline>
<codeline lineno="5495"><highlight class="normal">tiledb_fragment_info_get_non_empty_domain_var_size_from_index(</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5498"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5499"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>did,</highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>start_size,</highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>end_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"></highlight></codeline>
<codeline lineno="5525"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t</highlight></codeline>
<codeline lineno="5526"><highlight class="normal">tiledb_fragment_info_get_non_empty_domain_var_size_from_name(</highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>start_size,</highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>end_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5533"><highlight class="normal"></highlight></codeline>
<codeline lineno="5563"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_non_empty_domain_var_from_index(</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>did,</highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"></highlight></codeline>
<codeline lineno="5599"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_non_empty_domain_var_from_name(</highlight></codeline>
<codeline lineno="5600"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5601"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5602"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="5604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5606"><highlight class="normal"></highlight></codeline>
<codeline lineno="5627"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_mbr_num(</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>mbr_num)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"></highlight></codeline>
<codeline lineno="5652"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_mbr_from_index(</highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5654"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mid,</highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>did,</highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>mbr)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5659"><highlight class="normal"></highlight></codeline>
<codeline lineno="5678"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_mbr_from_name(</highlight></codeline>
<codeline lineno="5679"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5680"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5681"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5682"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mid,</highlight></codeline>
<codeline lineno="5683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>mbr)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5685"><highlight class="normal"></highlight></codeline>
<codeline lineno="5710"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_mbr_var_size_from_index(</highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5712"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5714"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mid,</highlight></codeline>
<codeline lineno="5715"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>did,</highlight></codeline>
<codeline lineno="5716"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>start_size,</highlight></codeline>
<codeline lineno="5717"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>end_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5718"><highlight class="normal"></highlight></codeline>
<codeline lineno="5742"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_mbr_var_size_from_name(</highlight></codeline>
<codeline lineno="5743"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5744"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mid,</highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>start_size,</highlight></codeline>
<codeline lineno="5749"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>end_size)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5750"><highlight class="normal"></highlight></codeline>
<codeline lineno="5781"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_mbr_var_from_index(</highlight></codeline>
<codeline lineno="5782"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5783"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5784"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5785"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mid,</highlight></codeline>
<codeline lineno="5786"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>did,</highlight></codeline>
<codeline lineno="5787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="5788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5789"><highlight class="normal"></highlight></codeline>
<codeline lineno="5819"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_mbr_var_from_name(</highlight></codeline>
<codeline lineno="5820"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mid,</highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dim_name,</highlight></codeline>
<codeline lineno="5825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>start,</highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>end)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5827"><highlight class="normal"></highlight></codeline>
<codeline lineno="5853"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_cell_num(</highlight></codeline>
<codeline lineno="5854"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5855"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5856"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5857"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>cell_num)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5858"><highlight class="normal"></highlight></codeline>
<codeline lineno="5875"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_version(</highlight></codeline>
<codeline lineno="5876"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5878"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5879"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/>version)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5880"><highlight class="normal"></highlight></codeline>
<codeline lineno="5897"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_has_consolidated_metadata(</highlight></codeline>
<codeline lineno="5898"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5899"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5900"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5901"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t*<sp/>has)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5902"><highlight class="normal"></highlight></codeline>
<codeline lineno="5919"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_unconsolidated_metadata_num(</highlight></codeline>
<codeline lineno="5920"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5921"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5922"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/>unconsolidated)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5923"><highlight class="normal"></highlight></codeline>
<codeline lineno="5939"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_to_vacuum_num(</highlight></codeline>
<codeline lineno="5940"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5941"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5942"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/>to_vacuum_num)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5943"><highlight class="normal"></highlight></codeline>
<codeline lineno="5960"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_to_vacuum_uri(</highlight></codeline>
<codeline lineno="5961"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5962"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5963"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>uri)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5965"><highlight class="normal"></highlight></codeline>
<codeline lineno="5982"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_array_schema(</highlight></codeline>
<codeline lineno="5983"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="5984"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="5985"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="5986"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t**<sp/>array_schema)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="5987"><highlight class="normal"></highlight></codeline>
<codeline lineno="6004"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_get_array_schema_name(</highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fid,</highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>schema_name)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"></highlight></codeline>
<codeline lineno="6026"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_fragment_info_dump(</highlight></codeline>
<codeline lineno="6027"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="6028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>out)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="6030"><highlight class="normal"></highlight></codeline>
<codeline lineno="6031"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6034"><highlight class="normal"></highlight></codeline>
<codeline lineno="6035"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>TILEDB_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb.h"/>
  </compounddef>
</doxygen>

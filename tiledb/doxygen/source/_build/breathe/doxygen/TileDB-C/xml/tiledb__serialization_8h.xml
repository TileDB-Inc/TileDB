<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="tiledb__serialization_8h" kind="file" language="C++">
    <compoundname>tiledb_serialization.h</compoundname>
    <includes refid="tiledb_8h" local="yes">tiledb.h</includes>
    <includes refid="tiledb__experimental_8h" local="yes">tiledb_experimental.h</includes>
    <includes local="yes">tiledb_enum.h</includes>
    <incdepgraph>
      <node id="2">
        <label>tiledb.h</label>
        <link refid="tiledb_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>tiledb_experimental.h</label>
        <link refid="tiledb__experimental_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h</label>
        <link refid="tiledb__serialization_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stdint.h</label>
      </node>
      <node id="19">
        <label>stdio.h</label>
      </node>
      <node id="4">
        <label>tiledb/api/c_api/api_external_common.h</label>
      </node>
      <node id="5">
        <label>tiledb/api/c_api/buffer/buffer_api_external.h</label>
      </node>
      <node id="6">
        <label>tiledb/api/c_api/config/config_api_external.h</label>
      </node>
      <node id="7">
        <label>tiledb/api/c_api/context/context_api_external.h</label>
      </node>
      <node id="8">
        <label>tiledb/api/c_api/data_order/data_order_api_external.h</label>
      </node>
      <node id="9">
        <label>tiledb/api/c_api/datatype/datatype_api_external.h</label>
      </node>
      <node id="10">
        <label>tiledb/api/c_api/error/error_api_external.h</label>
      </node>
      <node id="11">
        <label>tiledb/api/c_api/filesystem/filesystem_api_external.h</label>
      </node>
      <node id="12">
        <label>tiledb/api/c_api/filter/filter_api_external.h</label>
      </node>
      <node id="13">
        <label>tiledb/api/c_api/filter_list/filter_list_api_external.h</label>
      </node>
      <node id="14">
        <label>tiledb/api/c_api/group/group_api_external.h</label>
      </node>
      <node id="22">
        <label>tiledb/api/c_api/group/group_api_external_experimental.h</label>
      </node>
      <node id="15">
        <label>tiledb/api/c_api/object/object_api_external.h</label>
      </node>
      <node id="16">
        <label>tiledb/api/c_api/query/query_api_external.h</label>
      </node>
      <node id="17">
        <label>tiledb/api/c_api/vfs/vfs_api_external.h</label>
      </node>
      <node id="20">
        <label>tiledb_enum.h</label>
      </node>
      <node id="3">
        <label>tiledb_version.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="tiledb__serialization_8h_1ab3c8a58ca1e629372ad756fb4bb9dd08" prot="public" static="no">
        <name>TILEDB_SERIALIZATION_TYPE_ENUM</name>
        <param><defname>id</defname></param>
        <initializer>TILEDB_##id</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro for defining array type enums. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="46" column="9" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="tiledb__serialization_8h_1ad96707629f5c47ab85829dd412655e7a" prot="public" static="no" strong="no">
        <type></type>
        <name>tiledb_serialization_type_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serialization type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="44" column="1" bodyfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" bodystart="44" bodyend="49"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tiledb__serialization_8h_1aec4fd0a5041e3ff98d5c8d01a1b2aebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialization_type_to_str</definition>
        <argsstring>(tiledb_serialization_type_t serialization_type, const char **str) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialization_type_to_str</name>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialization_type</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a string representation of the given serialization type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Serialization type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to point to a constant string representation of the serialization type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="59" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="59" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a3da328f54ec5c60636043970edc7e112" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialization_type_from_str</definition>
        <argsstring>(const char *str, tiledb_serialization_type_t *serialization_type) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialization_type_from_str</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t *</type>
          <declname>serialization_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses a serialization type from the given string.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String representation to parse </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to the parsed serialization type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="70" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="70" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a7a04ca261d99bb7c4fd0409f9dd6e13b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialize_array</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_t *array, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_buffer_t **buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialize_array</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_buffer_t **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes the given array.</para>
<para><simplesect kind="note"><para>The caller must free the returned <computeroutput>tiledb_buffer_t</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to serialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, serialize from &quot;client-side&quot; perspective. Else, &quot;server-side.&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated buffer containing the serialized max buffer sizes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="92" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="92" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1aa46701bb39f0dd821015e5e06e48bd1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_deserialize_array</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_buffer_t *buffer, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_array_t **array) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_deserialize_array</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_buffer_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_array_t **</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deserializes a new array from the given buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to deserialize from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, deserialize from &quot;client-side&quot; perspective. Else, &quot;server-side.&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="110" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="110" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a7ce47dbb766d45c6f1e7d6cf8a58deb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialize_array_schema</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_schema_t *array_schema, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_buffer_t **buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialize_array_schema</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_schema_t *</type>
          <declname>array_schema</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_buffer_t **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes the given array schema.</para>
<para><simplesect kind="note"><para>The caller must free the returned <computeroutput>tiledb_buffer_t</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema to serialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, serialize from &quot;client-side&quot; perspective. Else, &quot;server-side.&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated buffer containing the serialized max buffer sizes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="131" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="131" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a0a309232ab8236c20eac70ecbea454ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_deserialize_array_schema</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_buffer_t *buffer, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_array_schema_t **array_schema) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_deserialize_array_schema</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_buffer_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_array_schema_t **</type>
          <declname>array_schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deserializes a new array schema from the given buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to deserialize from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, deserialize from &quot;client-side&quot; perspective. Else, &quot;server-side.&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated array schema. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="149" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="149" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a500a9a2017703796dfc0b9379ac9aedd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialize_array_open</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_t *array, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_buffer_t **buffer_list) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialize_array_open</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_buffer_t **</type>
          <declname>buffer_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes the given array open information into the given buffer.</para>
<para><simplesect kind="note"><para>The caller must free the returned <computeroutput>tiledb_buffer_t</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to get the information to serialize from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>Allows to specify different behavior depending on who is serializing, the client (1) or the Cloud server (0). This is sometimes needed since they are both using the same Core library APIs for serialization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tiledb_buffer_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated buffer containing the serialized array open information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="171" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="171" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1aa2165b80dca690b9fa616908782694c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_deserialize_array_open</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_buffer_t *buffer, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_array_t **array) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_deserialize_array_open</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_buffer_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_array_t **</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deserializes into an existing array from the given buffer.</para>
<para><simplesect kind="note"><para>The deserialization is zero-copy, so the source buffer must exceed the lifetime of the array being deserialized to.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to deserialize from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of deserialization to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>Allows to specify different behavior depending on who is serializing, the client (1) or the Cloud server (0). This is sometimes needed since they are both using the same Core library APIs for serialization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array object to deserialize into (must be pre-allocated). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="193" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="193" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a2a99eca4eef6224c31cad34c26416902" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialize_array_schema_evolution</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_schema_evolution_t *array_schema_evolution, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_buffer_t **buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialize_array_schema_evolution</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_schema_evolution_t *</type>
          <declname>array_schema_evolution</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_buffer_t **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes the given array schema evolution.</para>
<para><simplesect kind="note"><para>The caller must free the returned <computeroutput>tiledb_buffer_t</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema_evolution</parametername>
</parameternamelist>
<parameterdescription>
<para>The array schema evolution to serialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, serialize from &quot;client-side&quot; perspective. Else, &quot;server-side.&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated buffer containing the serialized max buffer sizes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="214" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="214" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1ac75ba724da8acf73e21692330e1c6d57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_deserialize_array_schema_evolution</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_buffer_t *buffer, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_array_schema_evolution_t **array_schema_evolution) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_deserialize_array_schema_evolution</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_buffer_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_array_schema_evolution_t **</type>
          <declname>array_schema_evolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deserializes a new array schema evolution object from the given buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to deserialize from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, deserialize from &quot;client-side&quot; perspective. Else, &quot;server-side.&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_schema_evolution</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated array schema evolution. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="233" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="233" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a233a64a6257ff267e7febbacf46e284a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialize_query</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_buffer_list_t **buffer_list) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialize_query</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_buffer_list_t **</type>
          <declname>buffer_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes the given query.</para>
<para>Where possible the serialization is zero-copy. The returned buffer list contains an ordered list of pointers to buffers that logically contain the entire serialized query when concatenated.</para>
<para><simplesect kind="note"><para>The caller must free the returned <computeroutput>tiledb_buffer_list_t</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, deserialize from &quot;client-side&quot; perspective. Else, &quot;server-side.&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_list</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated buffer list containing the serialized query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="258" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="258" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a10055aca3c9fdba1b1474fe4d3111ba7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_deserialize_query</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_buffer_t *buffer, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_query_t *query) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_deserialize_query</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_buffer_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deserializes into an existing query from the given buffer.</para>
<para><simplesect kind="note"><para>The deserialization is zero-copy, so the source buffer must exceed the lifetime of the query being deserialized to.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to deserialize from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of deserialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, deserialize from &quot;client-side&quot; perspective. Else, &quot;server-side.&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query object to deserialize into (must be pre-allocated). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="279" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="279" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1aa8e919b8d1612c83597292e8eae90069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialize_array_nonempty_domain</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_t *array, const void *nonempty_domain, int32_t is_empty, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_buffer_t **buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialize_array_nonempty_domain</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>nonempty_domain</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>is_empty</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_buffer_t **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes the given non-empty domain information into the given buffer.</para>
<para><simplesect kind="note"><para>The caller must free the returned <computeroutput>tiledb_buffer_t</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>Array to which the domain belongs to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nonempty_domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain to serialize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_empty</parametername>
</parameternamelist>
<parameterdescription>
<para>1 if the domain is empty </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, serialize from &quot;client-side&quot; perspective. Else, &quot;server-side.&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated buffer containing the serialized max buffer sizes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="302" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="302" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a9731b1e69a8f76ca8d056cab39266f13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_deserialize_array_nonempty_domain</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_t *array, const tiledb_buffer_t *buffer, tiledb_serialization_type_t serialize_type, int32_t client_side, void *nonempty_domain, int32_t *is_empty) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_deserialize_array_nonempty_domain</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const tiledb_buffer_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>nonempty_domain</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>is_empty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deserializes non-empty domain information from the given buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>Array to which the domain belongs to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to deserialize from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of deserialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, deserialize from &quot;client-side&quot; perspective. Else, &quot;server-side.&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nonempty_domain</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to deserialize into </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_empty</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to 1 if the domain is empty </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="324" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="324" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1adb72667bfc4f49a827633f790ead04c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialize_array_non_empty_domain_all_dimensions</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_t *array, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_buffer_t **buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialize_array_non_empty_domain_all_dimensions</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_buffer_t **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes the given non-empty domain information into the given buffer.</para>
<para><simplesect kind="note"><para>The caller must free the returned <computeroutput>tiledb_buffer_t</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Array</parametername>
</parameternamelist>
<parameterdescription>
<para>array to which the domain belongs to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, serialize from &quot;client-side&quot; perspective. Else, &quot;server-side.&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated buffer containing the serialized max buffer sizes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="347" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="347" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a5d22fe67ca2728f20e699f21bab61cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_deserialize_array_non_empty_domain_all_dimensions</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, const tiledb_buffer_t *buffer, tiledb_serialization_type_t serialize_type, int32_t client_side) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_deserialize_array_non_empty_domain_all_dimensions</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const tiledb_buffer_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deserializes non-empty domain information from the given buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>Array to which the domain belongs to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to deserialize from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of deserialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, deserialize from &quot;client-side&quot; perspective. Else, &quot;server-side.&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="365" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="365" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a0268e3379486edddc5bae9065ac228ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialize_array_max_buffer_sizes</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_t *array, const void *subarray, tiledb_serialization_type_t serialize_type, tiledb_buffer_t **buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialize_array_max_buffer_sizes</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>subarray</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>tiledb_buffer_t **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes the array max buffer sizes information into the given buffer.</para>
<para><simplesect kind="note"><para>The caller must free the returned <computeroutput>tiledb_buffer_t</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>Array to which the subarray belongs to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subarray</parametername>
</parameternamelist>
<parameterdescription>
<para>The subarray to use for max buffer size calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated buffer containing the serialized max buffer sizes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="385" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="385" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a8d4f6f5471321a6edc1b74e9e73807f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialize_array_metadata</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_array_t *array, tiledb_serialization_type_t serialization_type, tiledb_buffer_t **buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialize_array_metadata</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialization_type</declname>
        </param>
        <param>
          <type>tiledb_buffer_t **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes the array metadata into the given buffer.</para>
<para><simplesect kind="note"><para>The caller must free the returned <computeroutput>tiledb_buffer_t</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>Array whose metadata to serialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated buffer containing the serialized array metadata. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="404" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="404" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a7005645855edb46eccf8f79e328a35b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_deserialize_array_metadata</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_array_t *array, tiledb_serialization_type_t serialization_type, const tiledb_buffer_t *buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_deserialize_array_metadata</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialization_type</declname>
        </param>
        <param>
          <type>const tiledb_buffer_t *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the array metadata on the given array instance by deserializing the array metadata from the given buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>Array whose metadata to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer containing serialized array metadata. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="420" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="420" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a66a6a2d73f5340119823b433401a8000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialize_query_est_result_sizes</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_query_t *query, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_buffer_t **buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialize_query_est_result_sizes</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_buffer_t **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes the given query&apos;s estimated result sizes map.</para>
<para><simplesect kind="note"><para>The caller must free the returned <computeroutput>tiledb_buffer_list_t</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query to get the estimated result sizes of. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>currently unused </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated buffer containing the serialized query estimated result sizes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="439" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="439" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1ab12d3b5ae6a8f1172f6ebfc7e9d99918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_deserialize_query_est_result_sizes</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_query_t *query, tiledb_serialization_type_t serialize_type, int32_t client_side, const tiledb_buffer_t *buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_deserialize_query_est_result_sizes</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_query_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>const tiledb_buffer_t *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deserializes into an existing query from the given buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>The query object to deserialize into (must be pre-allocated). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of deserialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>currently unused </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to deserialize from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="457" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="457" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1af02486290fddad86a35480d115de455c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialize_config</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_config_t *config, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_buffer_t **buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialize_config</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_config_t *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_buffer_t **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes the given config.</para>
<para><simplesect kind="note"><para>The caller must free the returned <computeroutput>tiledb_buffer_t</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>The config to serialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, serialize from &quot;client-side&quot; perspective. Else, &quot;server-side.&quot;. Currently unused for config </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated buffer containing the serialized max buffer sizes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="478" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="478" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a7b9bf4b6e9cd7761c7ed46dab0c68fe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_deserialize_config</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_buffer_t *buffer, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_config_t **config) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_deserialize_config</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_buffer_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_config_t **</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deserializes a new config from the given buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to deserialize from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, deserialize from &quot;client-side&quot; perspective. Else, &quot;server-side.&quot;. Currently unused for config </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated config. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="496" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="496" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a0815ede3c2ba12a4516ffa4f4539e871" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialize_fragment_info_request</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_fragment_info_t *fragment_info, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_buffer_t **buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialize_fragment_info_request</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_buffer_t **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes the fragment info request into the given buffer.</para>
<para><simplesect kind="note"><para>The caller must free the returned <computeroutput>tiledb_buffer_t</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>Fragment info to get the info to serialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>Allows to specify different behavior depending on who is serializing, the client (1) or the Cloud server (0). This is sometimes needed since they are both using the same Core library APIs for serialization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated buffer containing the serialized fragment info request. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="518" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="518" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1acdc7f263ea41a5748877a034fb60d778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_deserialize_fragment_info_request</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_buffer_t *buffer, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_fragment_info_t *fragment_info) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_deserialize_fragment_info_request</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_buffer_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Populates fragment info by deserializing the fragment info request from the given buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer containing serialized fragment info request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>Allows to specify different behavior depending on who is serializing, the client (1) or the Cloud server (0). This is sometimes needed since they are both using the same Core library APIs for serialization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>Fragment info object to deserialize the info into. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="538" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="538" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a562560272c254d95f6270694e9435950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialize_fragment_info</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_fragment_info_t *fragment_info, tiledb_serialization_type_t serialization_type, int32_t client_side, tiledb_buffer_t **buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialize_fragment_info</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialization_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_buffer_t **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes the fragment info into the given buffer.</para>
<para><simplesect kind="note"><para>The caller must free the returned <computeroutput>tiledb_buffer_t</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>Fragment info to serialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>Allows to specify different behavior depending on who is serializing, the client (1) or the Cloud server (0). This is sometimes needed since they are both using the same Core library APIs for serialization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated buffer containing the serialized fragment info. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="560" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="560" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1ac6262f43d66950bb4eab6569649fd3aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_deserialize_fragment_info</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_buffer_t *buffer, tiledb_serialization_type_t serialize_type, const char *array_uri, int32_t client_side, tiledb_fragment_info_t *fragment_info) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_deserialize_fragment_info</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_buffer_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>array_uri</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_fragment_info_t *</type>
          <declname>fragment_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Populates the fragment info by deserializing from the given buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer containing serialized fragment info. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>Allows to specify different behavior depending on who is serializing, the client (1) or the Cloud server (0). This is sometimes needed since they are both using the same Core library APIs for serialization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>array that fragment info belongs to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_info</parametername>
</parameternamelist>
<parameterdescription>
<para>Fragment info to deserialize into. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="580" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="580" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a9f624589f0a24439e2156826e1650bcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialize_group</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_group_t *group, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_buffer_t **buffer_list) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialize_group</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_group_t *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_buffer_t **</type>
          <declname>buffer_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes the given group.</para>
<para>Where possible the serialization is zero-copy. The returned buffer list contains an ordered list of pointers to buffers that logically contain the entire serialized group when concatenated.</para>
<para><simplesect kind="note"><para>The caller must free the returned <computeroutput>tiledb_buffer_list_t</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>The group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, deserialize from &quot;client-side&quot; perspective. Else, &quot;server-side.&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tiledb_buffer_t</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated buffer containing the serialized group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="606" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="606" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1a8bf03513ac22c8bcb579b34396a0fd69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_deserialize_group</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_buffer_t *buffer, tiledb_serialization_type_t serialize_type, int32_t client_side, tiledb_group_t *group) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_deserialize_group</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_buffer_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialize_type</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>client_side</declname>
        </param>
        <param>
          <type>tiledb_group_t *</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deserializes into an existing group from the given buffer.</para>
<para><simplesect kind="note"><para>The deserialization is zero-copy, so the source buffer must exceed the lifetime of the group being deserialized to.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to deserialize from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of deserialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_side</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to 1, deserialize from &quot;client-side&quot; perspective. Else, &quot;server-side.&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>The group object to deserialize into (must be pre-allocated). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="627" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="627" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1afee2e57fb5a9b5cc8e46e4e1546743f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_serialize_group_metadata</definition>
        <argsstring>(tiledb_ctx_t *ctx, const tiledb_group_t *group, tiledb_serialization_type_t serialization_type, tiledb_buffer_t **buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_serialize_group_metadata</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const tiledb_group_t *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialization_type</declname>
        </param>
        <param>
          <type>tiledb_buffer_t **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes the group metadata into the given buffer.</para>
<para><simplesect kind="note"><para>The caller must free the returned <computeroutput>tiledb_buffer_t</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>Group whose metadata to serialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to a newly allocated buffer containing the serialized group metadata. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="646" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="646" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="tiledb__serialization_8h_1aa0de21bed1fa4db075090cedbc11e1d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TILEDB_EXPORT int32_t</type>
        <definition>TILEDB_EXPORT int32_t tiledb_deserialize_group_metadata</definition>
        <argsstring>(tiledb_ctx_t *ctx, tiledb_group_t *group, tiledb_serialization_type_t serialization_type, const tiledb_buffer_t *buffer) TILEDB_NOEXCEPT</argsstring>
        <name>tiledb_deserialize_group_metadata</name>
        <param>
          <type>tiledb_ctx_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>tiledb_group_t *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>tiledb_serialization_type_t</type>
          <declname>serialization_type</declname>
        </param>
        <param>
          <type>const tiledb_buffer_t *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the group metadata on the given group instance by deserializing the group metadata from the given buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The TileDB context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>Group whose metadata to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serialization_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of serialization to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer containing serialized group metadata. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>TILEDB_OK</computeroutput> for success and <computeroutput>TILEDB_ERR</computeroutput> for error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" line="662" column="23" declfile="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h" declline="662" declcolumn="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>@file<sp/><sp/><sp/>tiledb_serialization.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>@section<sp/>LICENSE</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>@copyright<sp/>Copyright<sp/>(c)<sp/>2019-2021<sp/>TileDB,<sp/>Inc.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>@section<sp/>DESCRIPTION</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>declares<sp/>the<sp/>TileDB<sp/>C<sp/>API<sp/>for<sp/>serialization.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TILEDB_SERIALIZATION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_SERIALIZATION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb_experimental.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TILEDB_SERIALIZATION_TYPE_ENUM(id)<sp/>TILEDB_##id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tiledb_enum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TILEDB_SERIALIZATION_TYPE_ENUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">}<sp/>tiledb_serialization_type_t;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialization_type_to_str(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialization_type,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>str)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialization_type_from_str(</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t*<sp/>serialization_type)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serialization<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>******************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialize_array(</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_t**<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_deserialize_array(</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_t*<sp/>buffer,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t**<sp/>array)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialize_array_schema(</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_schema_t*<sp/>array_schema,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_t**<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_deserialize_array_schema(</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_t*<sp/>buffer,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_t**<sp/>array_schema)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialize_array_open(</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_t**<sp/>buffer_list)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_deserialize_array_open(</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_t*<sp/>buffer,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t**<sp/>array)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialize_array_schema_evolution(</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_schema_evolution_t*<sp/>array_schema_evolution,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_t**<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_deserialize_array_schema_evolution(</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_t*<sp/>buffer,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_schema_evolution_t**<sp/>array_schema_evolution)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialize_query(</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_list_t**<sp/>buffer_list)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_deserialize_query(</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_t*<sp/>buffer,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialize_array_nonempty_domain(</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>nonempty_domain,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>is_empty,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_t**<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_deserialize_array_nonempty_domain(</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_t*<sp/>buffer,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>nonempty_domain,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t*<sp/>is_empty)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialize_array_non_empty_domain_all_dimensions(</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_t**<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_deserialize_array_non_empty_domain_all_dimensions(</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_t*<sp/>buffer,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialize_array_max_buffer_sizes(</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>subarray,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_t**<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialize_array_metadata(</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialization_type,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_t**<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_deserialize_array_metadata(</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_array_t*<sp/>array,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialization_type,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_t*<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialize_query_est_result_sizes(</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_t**<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_deserialize_query_est_result_sizes(</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_query_t*<sp/>query,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_t*<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialize_config(</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_config_t*<sp/>config,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_t**<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_deserialize_config(</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_t*<sp/>buffer,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_config_t**<sp/>config)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialize_fragment_info_request(</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_t**<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_deserialize_fragment_info_request(</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_t*<sp/>buffer,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialize_fragment_info(</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_fragment_info_t*<sp/>fragment_info,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialization_type,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_t**<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_deserialize_fragment_info(</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_t*<sp/>buffer,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>array_uri,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_fragment_info_t*<sp/>fragment_info)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialize_group(</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_group_t*<sp/>group,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_t**<sp/>buffer_list)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_deserialize_group(</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_t*<sp/>buffer,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialize_type,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>client_side,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_group_t*<sp/>group)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_serialize_group_metadata(</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_group_t*<sp/>group,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialization_type,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_buffer_t**<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal">TILEDB_EXPORT<sp/>int32_t<sp/>tiledb_deserialize_group_metadata(</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_ctx_t*<sp/>ctx,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_group_t*<sp/>group,</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledb_serialization_type_t<sp/>serialization_type,</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiledb_buffer_t*<sp/>buffer)<sp/>TILEDB_NOEXCEPT;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>TILEDB_SERIALIZATION_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/inorton/work/git/TileDB/tiledb/sm/c_api/tiledb_serialization.h"/>
  </compounddef>
</doxygen>
